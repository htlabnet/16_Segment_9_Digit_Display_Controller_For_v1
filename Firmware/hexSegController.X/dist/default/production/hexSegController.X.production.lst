

Microchip Technology PIC18 LITE Macro Assembler V1.37 build -260352376 
                                                                                               Wed Aug 03 03:09:00 2016

Microchip Technology Omniscient Code Generator v1.37 (Free mode) build 201603110536
     1                           	processor	18F4553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    13                           	psect	text0,global,reloc=2,class=CODE,delta=1
    14                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    15                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    16                           	psect	text2,global,reloc=2,class=CODE,delta=1
    17                           	psect	text3,global,reloc=2,class=CODE,delta=1
    18                           	psect	text4,global,reloc=2,class=CODE,delta=1
    19                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    20                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    21                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    22  0000                     
    23                           	psect	idataCOMRAM
    24  000606                     __pidataCOMRAM:
    25                           	opt stack 0
    26                           
    27                           ;initializer for _segMap
    28  000606  FF00               	dw	65280
    29  000608  0000               	dw	0
    30  00060A  FF00               	dw	65280
    31  00060C  0000               	dw	0
    32  00060E  FF00               	dw	65280
    33  000610  0000               	dw	0
    34  000612  FF00               	dw	65280
    35  000614  0000               	dw	0
    36  000616  FF00               	dw	65280
    37  000618  0000               	dw	0
    38  00061A  FF00               	dw	65280
    39  00061C  0000               	dw	0
    40  00061E  FF00               	dw	65280
    41  000620  0000               	dw	0
    42  000622  FF00               	dw	65280
    43  000624  0000               	dw	0
    44  000626  FF00               	dw	65280
    45  000628  0000               	dw	0
    46                           
    47                           	psect	idataBANK1
    48  0003E0                     __pidataBANK1:
    49                           	opt stack 0
    50                           
    51                           ;initializer for _fontList
    52  0003E0  0000               	dw	0
    53  0003E2  0000               	dw	0
    54  0003E4  0000               	dw	0
    55  0003E6  0000               	dw	0
    56  0003E8  0000               	dw	0
    57  0003EA  0000               	dw	0
    58  0003EC  0000               	dw	0
    59  0003EE  0000               	dw	0
    60  0003F0  0000               	dw	0
    61  0003F2  0000               	dw	0
    62  0003F4  0000               	dw	0
    63  0003F6  0000               	dw	0
    64  0003F8  0000               	dw	0
    65  0003FA  0000               	dw	0
    66  0003FC  0000               	dw	0
    67  0003FE  0000               	dw	0
    68  000400  0000               	dw	0
    69  000402  0000               	dw	0
    70  000404  0000               	dw	0
    71  000406  0000               	dw	0
    72  000408  0000               	dw	0
    73  00040A  0000               	dw	0
    74  00040C  0000               	dw	0
    75  00040E  0000               	dw	0
    76  000410  0000               	dw	0
    77  000412  0000               	dw	0
    78  000414  0000               	dw	0
    79  000416  0000               	dw	0
    80  000418  0000               	dw	0
    81  00041A  0000               	dw	0
    82  00041C  0000               	dw	0
    83  00041E  0000               	dw	0
    84  000420  0000               	dw	0
    85  000422  1812               	dw	6162
    86  000424  0880               	dw	2176
    87  000426  0000               	dw	0
    88  000428  CC33               	dw	52275
    89  00042A  7BA9               	dw	31657
    90  00042C  B43B               	dw	46139
    91  00042E  0080               	dw	128
    92  000430  9000               	dw	36864
    93  000432  2400               	dw	9216
    94  000434  FF00               	dw	65280
    95  000436  4B00               	dw	19200
    96  000438  0000               	dw	0
    97  00043A  0300               	dw	768
    98  00043C  0000               	dw	0
    99  00043E  3000               	dw	12288
   100  000440  00FF               	dw	255
   101  000442  4800               	dw	18432
   102  000444  0377               	dw	887
   103  000446  033F               	dw	831
   104  000448  038C               	dw	908
   105  00044A  03BB               	dw	955
   106  00044C  03FB               	dw	1019
   107  00044E  008F               	dw	143
   108  000450  03FF               	dw	1023
   109  000452  03BF               	dw	959
   110  000454  0000               	dw	0
   111  000456  0000               	dw	0
   112  000458  9000               	dw	36864
   113  00045A  0330               	dw	816
   114  00045C  2400               	dw	9216
   115  00045E  1013               	dw	4115
   116  000460  0000               	dw	0
   117  000462  03CF               	dw	975
   118  000464  91F3               	dw	37363
   119  000466  00F3               	dw	243
   120  000468  037C               	dw	892
   121  00046A  03F3               	dw	1011
   122  00046C  03C3               	dw	963
   123  00046E  02FB               	dw	763
   124  000470  03CC               	dw	972
   125  000472  4833               	dw	18483
   126  000474  4813               	dw	18451
   127  000476  91C0               	dw	37312
   128  000478  00F0               	dw	240
   129  00047A  14CC               	dw	5324
   130  00047C  84CC               	dw	33996
   131  00047E  00FF               	dw	255
   132  000480  03C7               	dw	967
   133  000482  80FF               	dw	33023
   134  000484  83C7               	dw	33735
   135  000486  03BB               	dw	955
   136  000488  4803               	dw	18435
   137  00048A  00FC               	dw	252
   138  00048C  30C0               	dw	12480
   139  00048E  A0CC               	dw	41164
   140  000490  B400               	dw	46080
   141  000492  5400               	dw	21504
   142  000494  3033               	dw	12339
   143  000496  00D1               	dw	209
   144  000498  8400               	dw	33792
   145  00049A  002E               	dw	46
   146  00049C  0003               	dw	3
   147  00049E  0030               	dw	48
   148  0004A0  AB00               	dw	43776
   149  0004A2  34C0               	dw	13504
   150  0004A4  0B7B               	dw	2939
   151  0004A6  1703               	dw	5891
   152  0004A8  0000               	dw	0
   153  0004AA  0000               	dw	0
   154  0004AC  0000               	dw	0
   155  0004AE  FFFF               	dw	65535
   156  0004B0  0001               	dw	1
   157  0004B2  0002               	dw	2
   158  0004B4  0004               	dw	4
   159  0004B6  0008               	dw	8
   160  0004B8  0020               	dw	32
   161  0004BA  0010               	dw	16
   162  0004BC  0040               	dw	64
   163  0004BE  0080               	dw	128
   164  0004C0  0800               	dw	2048
   165  0004C2  1000               	dw	4096
   166  0004C4  0200               	dw	512
   167  0004C6  8000               	dw	32768
   168  0004C8  4000               	dw	16384
   169  0004CA  2000               	dw	8192
   170  0004CC  2000               	dw	8192
   171  0004CE  0400               	dw	1024
   172  0004D0  0800               	dw	2048
   173  0004D2  1800               	dw	6144
   174  0004D4  1900               	dw	6400
   175  0004D6  9900               	dw	39168
   176  0004D8  D900               	dw	55552
   177  0004DA  F900               	dw	63744
   178  0004DC  FB00               	dw	64256
   179  0004DE  FF00               	dw	65280
   180  0000                     _ADCON1	set	4033
   181  0000                     _BAUDCON	set	4024
   182  0000                     _CMCON	set	4020
   183  0000                     _INTCONbits	set	4082
   184  0000                     _PIE1bits	set	3997
   185  0000                     _PIR1bits	set	3998
   186  0000                     _PORTA	set	3968
   187  0000                     _PORTB	set	3969
   188  0000                     _PORTC	set	3970
   189  0000                     _PORTD	set	3971
   190  0000                     _PORTE	set	3972
   191  0000                     _PR2	set	4043
   192  0000                     _RCREG	set	4014
   193  0000                     _RCSTA	set	4011
   194  0000                     _SPBRG	set	4015
   195  0000                     _SPBRGH	set	4016
   196  0000                     _T2CON	set	4042
   197  0000                     _TMR2	set	4044
   198  0000                     _TRISA	set	3986
   199  0000                     _TRISB	set	3987
   200  0000                     _TRISC	set	3988
   201  0000                     _TRISD	set	3989
   202  0000                     _TRISE	set	3990
   203  0000                     _BRGH	set	32098
   204                           
   205                           ; #config settings
   206  0000                     
   207                           	psect	cinit
   208  000550                     __pcinit:
   209                           	opt stack 0
   210  000550                     start_initialization:
   211                           	opt stack 0
   212  000550                     __initialization:
   213                           	opt stack 0
   214                           
   215                           ; Clear objects allocated to COMRAM (2 bytes)
   216  000550  6A43               	clrf	(__pbssCOMRAM+1)& (0+255),c
   217  000552  6A42               	clrf	__pbssCOMRAM& (0+255),c
   218                           
   219                           ; Initialize objects allocated to BANK1 (256 bytes)
   220                           ; load TBLPTR registers with __pidataBANK1
   221  000554  0EE0               	movlw	low __pidataBANK1
   222  000556  6EF6               	movwf	tblptrl,c
   223  000558  0E03               	movlw	high __pidataBANK1
   224  00055A  6EF7               	movwf	tblptrh,c
   225  00055C  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   226  00055E  6EF8               	movwf	tblptru,c
   227  000560  EE01  F000         	lfsr	0,__pdataBANK1
   228  000564  EE11 F000          	lfsr	1,256
   229  000568                     copy_data0:
   230  000568  0009               	tblrd		*+
   231  00056A  CFF5 FFEE          	movff	tablat,postinc0
   232  00056E  50E5               	movf	postdec1,w,c
   233  000570  50E1               	movf	fsr1l,w,c
   234  000572  E1FA               	bnz	copy_data0
   235  000574  50E2               	movf	fsr1h,w,c
   236  000576  E1F8               	bnz	copy_data0
   237                           
   238                           ; Initialize objects allocated to COMRAM (36 bytes)
   239                           ; load TBLPTR registers with __pidataCOMRAM
   240  000578  0E06               	movlw	low __pidataCOMRAM
   241  00057A  6EF6               	movwf	tblptrl,c
   242  00057C  0E06               	movlw	high __pidataCOMRAM
   243  00057E  6EF7               	movwf	tblptrh,c
   244  000580  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   245  000582  6EF8               	movwf	tblptru,c
   246  000584  EE00  F001         	lfsr	0,__pdataCOMRAM
   247  000588  EE10 F024          	lfsr	1,36
   248  00058C                     copy_data1:
   249  00058C  0009               	tblrd		*+
   250  00058E  CFF5 FFEE          	movff	tablat,postinc0
   251  000592  50E5               	movf	postdec1,w,c
   252  000594  50E1               	movf	fsr1l,w,c
   253  000596  E1FA               	bnz	copy_data1
   254  000598                     end_of_initialization:
   255                           	opt stack 0
   256  000598                     __end_of__initialization:
   257                           	opt stack 0
   258  000598  9044               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   259  00059A  9244               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   260  00059C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   261  00059E  6EF8               	movwf	tblptru,c
   262  0005A0  0100               	movlb	0
   263  0005A2  EF0D  F000         	goto	_main	;jump to C main() function
   264                           tblptru	equ	0xFF8
   265                           tblptrh	equ	0xFF7
   266                           tblptrl	equ	0xFF6
   267                           tablat	equ	0xFF5
   268                           postinc0	equ	0xFEE
   269                           postdec1	equ	0xFE5
   270                           fsr1h	equ	0xFE2
   271                           fsr1l	equ	0xFE1
   272                           
   273                           	psect	bssCOMRAM
   274  000042                     __pbssCOMRAM:
   275                           	opt stack 0
   276  000042                     _digitPtr:
   277                           	opt stack 0
   278  000042                     	ds	2
   279                           tblptru	equ	0xFF8
   280                           tblptrh	equ	0xFF7
   281                           tblptrl	equ	0xFF6
   282                           tablat	equ	0xFF5
   283                           postinc0	equ	0xFEE
   284                           postdec1	equ	0xFE5
   285                           fsr1h	equ	0xFE2
   286                           fsr1l	equ	0xFE1
   287                           
   288                           	psect	dataCOMRAM
   289  000001                     __pdataCOMRAM:
   290                           	opt stack 0
   291  000001                     _segMap:
   292                           	opt stack 0
   293  000001                     	ds	36
   294                           tblptru	equ	0xFF8
   295                           tblptrh	equ	0xFF7
   296                           tblptrl	equ	0xFF6
   297                           tablat	equ	0xFF5
   298                           postinc0	equ	0xFEE
   299                           postdec1	equ	0xFE5
   300                           fsr1h	equ	0xFE2
   301                           fsr1l	equ	0xFE1
   302                           
   303                           	psect	dataBANK1
   304  000100                     __pdataBANK1:
   305                           	opt stack 0
   306  000100                     _fontList:
   307                           	opt stack 0
   308  000100                     	ds	256
   309                           tblptru	equ	0xFF8
   310                           tblptrh	equ	0xFF7
   311                           tblptrl	equ	0xFF6
   312                           tablat	equ	0xFF5
   313                           postinc0	equ	0xFEE
   314                           postdec1	equ	0xFE5
   315                           fsr1h	equ	0xFE2
   316                           fsr1l	equ	0xFE1
   317                           
   318                           	psect	cstackBANK0
   319  000060                     __pcstackBANK0:
   320                           	opt stack 0
   321  000060                     main@digitSelector:
   322                           	opt stack 0
   323                           
   324                           ; 2 bytes @ 0x0
   325  000060                     	ds	2
   326  000062                     main@RxData:
   327                           	opt stack 0
   328                           
   329                           ; 1 bytes @ 0x2
   330  000062                     	ds	1
   331                           tblptru	equ	0xFF8
   332                           tblptrh	equ	0xFF7
   333                           tblptrl	equ	0xFF6
   334                           tablat	equ	0xFF5
   335                           postinc0	equ	0xFEE
   336                           postdec1	equ	0xFE5
   337                           fsr1h	equ	0xFE2
   338                           fsr1l	equ	0xFE1
   339                           
   340                           	psect	cstackCOMRAM
   341  000025                     __pcstackCOMRAM:
   342                           	opt stack 0
   343  000025                     ?___awmod:
   344                           	opt stack 0
   345  000025                     setDigitPin@input:
   346                           	opt stack 0
   347  000025                     ___awmod@dividend:
   348                           	opt stack 0
   349  000025                     setSegPin@input:
   350                           	opt stack 0
   351                           
   352                           ; 4 bytes @ 0x0
   353  000025                     	ds	2
   354  000027                     ??_setDigitPin:
   355  000027                     ___awmod@divisor:
   356                           	opt stack 0
   357                           
   358                           ; 2 bytes @ 0x2
   359  000027                     	ds	2
   360  000029                     ??_setSegPin:
   361  000029                     ___awmod@counter:
   362                           	opt stack 0
   363                           
   364                           ; 1 bytes @ 0x4
   365  000029                     	ds	1
   366  00002A                     ___awmod@sign:
   367                           	opt stack 0
   368                           
   369                           ; 1 bytes @ 0x5
   370  00002A                     	ds	3
   371  00002D                     ??_isr:
   372                           
   373                           ; 1 bytes @ 0x8
   374  00002D                     	ds	17
   375  00003E                     ??_main:
   376                           
   377                           ; 1 bytes @ 0x19
   378  00003E                     	ds	4
   379                           tblptru	equ	0xFF8
   380                           tblptrh	equ	0xFF7
   381                           tblptrl	equ	0xFF6
   382                           tablat	equ	0xFF5
   383                           postinc0	equ	0xFEE
   384                           postdec1	equ	0xFE5
   385                           fsr1h	equ	0xFE2
   386                           fsr1l	equ	0xFE1
   387                           
   388 ;;
   389 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   390 ;;
   391 ;; *************** function _main *****************
   392 ;; Defined at:
   393 ;;		line 72 in file "main.c"
   394 ;; Parameters:    Size  Location     Type
   395 ;;		None
   396 ;; Auto vars:     Size  Location     Type
   397 ;;  digitSelecto    2    0[BANK0 ] short 
   398 ;;  RxData          1    2[BANK0 ] unsigned char 
   399 ;; Return value:  Size  Location     Type
   400 ;;                  1    wreg      void 
   401 ;; Registers used:
   402 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
   403 ;; Tracked objects:
   404 ;;		On entry : 0/0
   405 ;;		On exit  : 0/0
   406 ;;		Unchanged: 0/0
   407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   408 ;;      Params:         0       0       0       0       0       0       0       0       0
   409 ;;      Locals:         0       3       0       0       0       0       0       0       0
   410 ;;      Temps:          4       0       0       0       0       0       0       0       0
   411 ;;      Totals:         4       3       0       0       0       0       0       0       0
   412 ;;Total ram usage:        7 bytes
   413 ;; Hardware stack levels required when called:    2
   414 ;; This function calls:
   415 ;;		Nothing
   416 ;; This function is called by:
   417 ;;		Startup code after reset
   418 ;; This function uses a non-reentrant model
   419 ;;
   420                           
   421                           	psect	text0
   422  00001A                     __ptext0:
   423                           	opt stack 0
   424  00001A                     _main:
   425                           	opt stack 29
   426                           
   427                           ;main.c: 74: ADCON1 = 0b00001111;
   428                           
   429                           ;incstack = 0
   430  00001A  0E0F               	movlw	15
   431  00001C  6EC1               	movwf	4033,c	;volatile
   432                           
   433                           ;main.c: 75: CMCON = 0b00000111;
   434  00001E  0E07               	movlw	7
   435  000020  6EB4               	movwf	4020,c	;volatile
   436                           
   437                           ;main.c: 76: TRISA = 0b00000000;
   438  000022  0E00               	movlw	0
   439  000024  6E92               	movwf	3986,c	;volatile
   440                           
   441                           ;main.c: 77: TRISB = 0b00000000;
   442  000026  0E00               	movlw	0
   443  000028  6E93               	movwf	3987,c	;volatile
   444                           
   445                           ;main.c: 78: TRISC = 0b10000000;
   446  00002A  0E80               	movlw	128
   447  00002C  6E94               	movwf	3988,c	;volatile
   448                           
   449                           ;main.c: 79: TRISD = 0b00000000;
   450  00002E  0E00               	movlw	0
   451  000030  6E95               	movwf	3989,c	;volatile
   452                           
   453                           ;main.c: 80: TRISE = 0b00000000;
   454  000032  0E00               	movlw	0
   455  000034  6E96               	movwf	3990,c	;volatile
   456                           
   457                           ;main.c: 90: T2CON = 0;
   458  000036  0E00               	movlw	0
   459  000038  6ECA               	movwf	4042,c	;volatile
   460                           
   461                           ;main.c: 91: TMR2 = 0;
   462  00003A  0E00               	movlw	0
   463  00003C  6ECC               	movwf	4044,c	;volatile
   464                           
   465                           ;main.c: 92: PR2 = 125;
   466  00003E  0E7D               	movlw	125
   467  000040  6ECB               	movwf	4043,c	;volatile
   468                           
   469                           ;main.c: 93: T2CON = 0b01111101;
   470  000042  0E7D               	movlw	125
   471  000044  6ECA               	movwf	4042,c	;volatile
   472                           
   473                           ;main.c: 95: PIE1bits.TMR2IE = 1;
   474  000046  829D               	bsf	3997,1,c	;volatile
   475                           
   476                           ;main.c: 96: INTCONbits.PEIE = 1;
   477  000048  8CF2               	bsf	intcon,6,c	;volatile
   478                           
   479                           ;main.c: 97: INTCONbits.GIE = 1;
   480  00004A  8EF2               	bsf	intcon,7,c	;volatile
   481                           
   482                           ;main.c: 101: RCSTA = 0b10010000;
   483  00004C  0E90               	movlw	144
   484  00004E  6EAB               	movwf	4011,c	;volatile
   485                           
   486                           ;main.c: 102: BAUDCON = 0b00001000;
   487  000050  0E08               	movlw	8
   488  000052  6EB8               	movwf	4024,c	;volatile
   489                           
   490                           ;main.c: 103: SPBRGH = 0;
   491  000054  0E00               	movlw	0
   492  000056  6EB0               	movwf	4016,c	;volatile
   493                           
   494                           ;main.c: 104: BRGH = 0;
   495  000058  94AC               	bcf	4012,2,c	;volatile
   496                           
   497                           ;main.c: 105: SPBRG = 129;
   498  00005A  0E81               	movlw	129
   499  00005C  6EAF               	movwf	4015,c	;volatile
   500                           
   501                           ;main.c: 109: char RxData;
   502                           ;main.c: 110: short digitSelector;
   503                           ;main.c: 114: segMap[0] = fontList['H'];
   504  00005E  C190  F001         	movff	_fontList+144,_segMap
   505  000062  C191  F002         	movff	_fontList+145,_segMap+1
   506  000066  6A03               	clrf	_segMap+2,c
   507  000068  6A04               	clrf	_segMap+3,c
   508                           
   509                           ;main.c: 115: segMap[1] = fontList['T'];
   510  00006A  C1A8  F005         	movff	_fontList+168,_segMap+4
   511  00006E  C1A9  F006         	movff	_fontList+169,_segMap+5
   512  000072  6A07               	clrf	_segMap+6,c
   513  000074  6A08               	clrf	_segMap+7,c
   514                           
   515                           ;main.c: 116: segMap[2] = fontList['L'];
   516  000076  C198  F009         	movff	_fontList+152,_segMap+8
   517  00007A  C199  F00A         	movff	_fontList+153,_segMap+9
   518  00007E  6A0B               	clrf	_segMap+10,c
   519  000080  6A0C               	clrf	_segMap+11,c
   520                           
   521                           ;main.c: 117: segMap[3] = fontList['A'];
   522  000082  C182  F00D         	movff	_fontList+130,_segMap+12
   523  000086  C183  F00E         	movff	_fontList+131,_segMap+13
   524  00008A  6A0F               	clrf	_segMap+14,c
   525  00008C  6A10               	clrf	_segMap+15,c
   526                           
   527                           ;main.c: 118: segMap[4] = fontList['B'] | 0b10000000000000000;
   528  00008E  0101               	movlb	1	; () banked
   529  000090  5184               	movf	(_fontList+132)& (0+255),w,b
   530  000092  6E3E               	movwf	??_main& (0+255),c
   531  000094  0101               	movlb	1	; () banked
   532  000096  5185               	movf	(_fontList+133)& (0+255),w,b
   533  000098  6E3F               	movwf	(??_main+1)& (0+255),c
   534  00009A  6A40               	clrf	(??_main+2)& (0+255),c
   535  00009C  6A41               	clrf	(??_main+3)& (0+255),c
   536  00009E  0E00               	movlw	0
   537  0000A0  103E               	iorwf	??_main,w,c
   538  0000A2  6E11               	movwf	_segMap+16,c
   539  0000A4  0E00               	movlw	0
   540  0000A6  103F               	iorwf	??_main+1,w,c
   541  0000A8  6E12               	movwf	_segMap+17,c
   542  0000AA  0E01               	movlw	1
   543  0000AC  1040               	iorwf	??_main+2,w,c
   544  0000AE  6E13               	movwf	_segMap+18,c
   545  0000B0  0E00               	movlw	0
   546  0000B2  1041               	iorwf	??_main+3,w,c
   547  0000B4  6E14               	movwf	_segMap+19,c
   548                           
   549                           ; BSR set to: 1
   550                           ;main.c: 119: segMap[5] = fontList['N'];
   551  0000B6  C19C  F015         	movff	_fontList+156,_segMap+20
   552  0000BA  C19D  F016         	movff	_fontList+157,_segMap+21
   553  0000BE  6A17               	clrf	_segMap+22,c
   554  0000C0  6A18               	clrf	_segMap+23,c
   555                           
   556                           ; BSR set to: 1
   557                           ;main.c: 120: segMap[6] = fontList['E'];
   558  0000C2  C18A  F019         	movff	_fontList+138,_segMap+24
   559  0000C6  C18B  F01A         	movff	_fontList+139,_segMap+25
   560  0000CA  6A1B               	clrf	_segMap+26,c
   561  0000CC  6A1C               	clrf	_segMap+27,c
   562                           
   563                           ; BSR set to: 1
   564                           ;main.c: 121: segMap[7] = fontList['T'];
   565  0000CE  C1A8  F01D         	movff	_fontList+168,_segMap+28
   566  0000D2  C1A9  F01E         	movff	_fontList+169,_segMap+29
   567  0000D6  6A1F               	clrf	_segMap+30,c
   568  0000D8  6A20               	clrf	_segMap+31,c
   569                           
   570                           ; BSR set to: 1
   571                           ;main.c: 122: segMap[8] = fontList['!'];
   572  0000DA  C142  F021         	movff	_fontList+66,_segMap+32
   573  0000DE  C143  F022         	movff	_fontList+67,_segMap+33
   574  0000E2  D0D5               	goto	L2
   575  0000E4                     l64:
   576  0000E4  AA9E               	btfss	3998,5,c	;volatile
   577  0000E6  D7FE               	goto	l64
   578                           
   579                           ;main.c: 127: PIR1bits.RCIF = 0;
   580  0000E8  9A9E               	bcf	3998,5,c	;volatile
   581                           
   582                           ;main.c: 128: RxData = RCREG;
   583  0000EA  CFAE F062          	movff	4014,main@RxData	;volatile
   584                           
   585                           ;main.c: 130: if ((RxData & 0b00000111) == 0b111){
   586  0000EE  0100               	movlb	0	; () banked
   587  0000F0  5162               	movf	main@RxData& (0+255),w,b
   588  0000F2  0B07               	andlw	7
   589  0000F4  0A07               	xorlw	7
   590  0000F6  A4D8               	btfss	status,2,c
   591  0000F8  D7F5               	goto	l64
   592                           
   593                           ; BSR set to: 0
   594                           ;main.c: 131: digitSelector = (RxData & 0b11111000) >> 3;
   595  0000FA  C062  F03E         	movff	main@RxData,??_main
   596  0000FE  90D8               	bcf	status,0,c
   597  000100  323E               	rrcf	??_main,f,c
   598  000102  90D8               	bcf	status,0,c
   599  000104  323E               	rrcf	??_main,f,c
   600  000106  90D8               	bcf	status,0,c
   601  000108  323E               	rrcf	??_main,f,c
   602  00010A  0E1F               	movlw	31
   603  00010C  163E               	andwf	??_main,f,c
   604  00010E  503E               	movf	??_main,w,c
   605  000110  0100               	movlb	0	; () banked
   606  000112  6F60               	movwf	main@digitSelector& (0+255),b
   607  000114  6B61               	clrf	(main@digitSelector+1)& (0+255),b
   608  000116                     l68:
   609  000116  AA9E               	btfss	3998,5,c	;volatile
   610  000118  D7FE               	goto	l68
   611                           
   612                           ;main.c: 133: PIR1bits.RCIF = 0;
   613  00011A  9A9E               	bcf	3998,5,c	;volatile
   614                           
   615                           ;main.c: 134: RxData = RCREG;
   616  00011C  CFAE F062          	movff	4014,main@RxData	;volatile
   617                           
   618                           ;main.c: 135: switch(digitSelector){
   619  000120  D0B9               	goto	l1014
   620  000122                     l992:
   621                           
   622                           ;main.c: 137: segMap[0] = fontList[RxData];
   623  000122  0100               	movlb	0	; () banked
   624  000124  5162               	movf	main@RxData& (0+255),w,b
   625  000126  0D02               	mullw	2
   626  000128  0E00               	movlw	low _fontList
   627  00012A  24F3               	addwf	prodl,w,c
   628  00012C  6ED9               	movwf	fsr2l,c
   629  00012E  0E01               	movlw	high _fontList
   630  000130  20F4               	addwfc	prodh,w,c
   631  000132  6EDA               	movwf	fsr2h,c
   632  000134  CFDE F03E          	movff	postinc2,??_main
   633  000138  CFDD F03F          	movff	postdec2,??_main+1
   634  00013C  C03E  F001         	movff	??_main,_segMap
   635  000140  C03F  F002         	movff	??_main+1,_segMap+1
   636  000144  6A03               	clrf	_segMap+2,c
   637  000146  6A04               	clrf	_segMap+3,c
   638                           
   639                           ;main.c: 138: break;
   640  000148  D7CD               	goto	l64
   641  00014A                     l994:
   642                           
   643                           ;main.c: 140: segMap[1] = fontList[RxData];
   644  00014A  0100               	movlb	0	; () banked
   645  00014C  5162               	movf	main@RxData& (0+255),w,b
   646  00014E  0D02               	mullw	2
   647  000150  0E00               	movlw	low _fontList
   648  000152  24F3               	addwf	prodl,w,c
   649  000154  6ED9               	movwf	fsr2l,c
   650  000156  0E01               	movlw	high _fontList
   651  000158  20F4               	addwfc	prodh,w,c
   652  00015A  6EDA               	movwf	fsr2h,c
   653  00015C  CFDE F03E          	movff	postinc2,??_main
   654  000160  CFDD F03F          	movff	postdec2,??_main+1
   655  000164  C03E  F005         	movff	??_main,_segMap+4
   656  000168  C03F  F006         	movff	??_main+1,_segMap+5
   657  00016C  6A07               	clrf	_segMap+6,c
   658  00016E  6A08               	clrf	_segMap+7,c
   659                           
   660                           ;main.c: 141: break;
   661  000170  D7B9               	goto	l64
   662  000172                     l996:
   663                           
   664                           ;main.c: 143: segMap[2] = fontList[RxData];
   665  000172  0100               	movlb	0	; () banked
   666  000174  5162               	movf	main@RxData& (0+255),w,b
   667  000176  0D02               	mullw	2
   668  000178  0E00               	movlw	low _fontList
   669  00017A  24F3               	addwf	prodl,w,c
   670  00017C  6ED9               	movwf	fsr2l,c
   671  00017E  0E01               	movlw	high _fontList
   672  000180  20F4               	addwfc	prodh,w,c
   673  000182  6EDA               	movwf	fsr2h,c
   674  000184  CFDE F03E          	movff	postinc2,??_main
   675  000188  CFDD F03F          	movff	postdec2,??_main+1
   676  00018C  C03E  F009         	movff	??_main,_segMap+8
   677  000190  C03F  F00A         	movff	??_main+1,_segMap+9
   678  000194  6A0B               	clrf	_segMap+10,c
   679  000196  6A0C               	clrf	_segMap+11,c
   680                           
   681                           ;main.c: 144: break;
   682  000198  D7A5               	goto	l64
   683  00019A                     l998:
   684                           
   685                           ;main.c: 146: segMap[3] = fontList[RxData];
   686  00019A  0100               	movlb	0	; () banked
   687  00019C  5162               	movf	main@RxData& (0+255),w,b
   688  00019E  0D02               	mullw	2
   689  0001A0  0E00               	movlw	low _fontList
   690  0001A2  24F3               	addwf	prodl,w,c
   691  0001A4  6ED9               	movwf	fsr2l,c
   692  0001A6  0E01               	movlw	high _fontList
   693  0001A8  20F4               	addwfc	prodh,w,c
   694  0001AA  6EDA               	movwf	fsr2h,c
   695  0001AC  CFDE F03E          	movff	postinc2,??_main
   696  0001B0  CFDD F03F          	movff	postdec2,??_main+1
   697  0001B4  C03E  F00D         	movff	??_main,_segMap+12
   698  0001B8  C03F  F00E         	movff	??_main+1,_segMap+13
   699  0001BC  6A0F               	clrf	_segMap+14,c
   700  0001BE  6A10               	clrf	_segMap+15,c
   701                           
   702                           ;main.c: 147: break;
   703  0001C0  D791               	goto	l64
   704  0001C2                     l1000:
   705                           
   706                           ;main.c: 149: segMap[4] = fontList[RxData];
   707  0001C2  0100               	movlb	0	; () banked
   708  0001C4  5162               	movf	main@RxData& (0+255),w,b
   709  0001C6  0D02               	mullw	2
   710  0001C8  0E00               	movlw	low _fontList
   711  0001CA  24F3               	addwf	prodl,w,c
   712  0001CC  6ED9               	movwf	fsr2l,c
   713  0001CE  0E01               	movlw	high _fontList
   714  0001D0  20F4               	addwfc	prodh,w,c
   715  0001D2  6EDA               	movwf	fsr2h,c
   716  0001D4  CFDE F03E          	movff	postinc2,??_main
   717  0001D8  CFDD F03F          	movff	postdec2,??_main+1
   718  0001DC  C03E  F011         	movff	??_main,_segMap+16
   719  0001E0  C03F  F012         	movff	??_main+1,_segMap+17
   720  0001E4  6A13               	clrf	_segMap+18,c
   721  0001E6  6A14               	clrf	_segMap+19,c
   722                           
   723                           ;main.c: 150: break;
   724  0001E8  D77D               	goto	l64
   725  0001EA                     l1002:
   726                           
   727                           ;main.c: 152: segMap[5] = fontList[RxData];
   728  0001EA  0100               	movlb	0	; () banked
   729  0001EC  5162               	movf	main@RxData& (0+255),w,b
   730  0001EE  0D02               	mullw	2
   731  0001F0  0E00               	movlw	low _fontList
   732  0001F2  24F3               	addwf	prodl,w,c
   733  0001F4  6ED9               	movwf	fsr2l,c
   734  0001F6  0E01               	movlw	high _fontList
   735  0001F8  20F4               	addwfc	prodh,w,c
   736  0001FA  6EDA               	movwf	fsr2h,c
   737  0001FC  CFDE F03E          	movff	postinc2,??_main
   738  000200  CFDD F03F          	movff	postdec2,??_main+1
   739  000204  C03E  F015         	movff	??_main,_segMap+20
   740  000208  C03F  F016         	movff	??_main+1,_segMap+21
   741  00020C  6A17               	clrf	_segMap+22,c
   742  00020E  6A18               	clrf	_segMap+23,c
   743                           
   744                           ;main.c: 153: break;
   745  000210  D769               	goto	l64
   746  000212                     l1004:
   747                           
   748                           ;main.c: 155: segMap[6] = fontList[RxData];
   749  000212  0100               	movlb	0	; () banked
   750  000214  5162               	movf	main@RxData& (0+255),w,b
   751  000216  0D02               	mullw	2
   752  000218  0E00               	movlw	low _fontList
   753  00021A  24F3               	addwf	prodl,w,c
   754  00021C  6ED9               	movwf	fsr2l,c
   755  00021E  0E01               	movlw	high _fontList
   756  000220  20F4               	addwfc	prodh,w,c
   757  000222  6EDA               	movwf	fsr2h,c
   758  000224  CFDE F03E          	movff	postinc2,??_main
   759  000228  CFDD F03F          	movff	postdec2,??_main+1
   760  00022C  C03E  F019         	movff	??_main,_segMap+24
   761  000230  C03F  F01A         	movff	??_main+1,_segMap+25
   762  000234  6A1B               	clrf	_segMap+26,c
   763  000236  6A1C               	clrf	_segMap+27,c
   764                           
   765                           ;main.c: 156: break;
   766  000238  D755               	goto	l64
   767  00023A                     l1006:
   768                           
   769                           ;main.c: 158: segMap[7] = fontList[RxData];
   770  00023A  0100               	movlb	0	; () banked
   771  00023C  5162               	movf	main@RxData& (0+255),w,b
   772  00023E  0D02               	mullw	2
   773  000240  0E00               	movlw	low _fontList
   774  000242  24F3               	addwf	prodl,w,c
   775  000244  6ED9               	movwf	fsr2l,c
   776  000246  0E01               	movlw	high _fontList
   777  000248  20F4               	addwfc	prodh,w,c
   778  00024A  6EDA               	movwf	fsr2h,c
   779  00024C  CFDE F03E          	movff	postinc2,??_main
   780  000250  CFDD F03F          	movff	postdec2,??_main+1
   781  000254  C03E  F01D         	movff	??_main,_segMap+28
   782  000258  C03F  F01E         	movff	??_main+1,_segMap+29
   783  00025C  6A1F               	clrf	_segMap+30,c
   784  00025E  6A20               	clrf	_segMap+31,c
   785                           
   786                           ;main.c: 159: break;
   787  000260  D741               	goto	l64
   788  000262                     l1008:
   789                           
   790                           ;main.c: 161: segMap[8] = fontList[RxData];
   791  000262  0100               	movlb	0	; () banked
   792  000264  5162               	movf	main@RxData& (0+255),w,b
   793  000266  0D02               	mullw	2
   794  000268  0E00               	movlw	low _fontList
   795  00026A  24F3               	addwf	prodl,w,c
   796  00026C  6ED9               	movwf	fsr2l,c
   797  00026E  0E01               	movlw	high _fontList
   798  000270  20F4               	addwfc	prodh,w,c
   799  000272  6EDA               	movwf	fsr2h,c
   800  000274  CFDE F03E          	movff	postinc2,??_main
   801  000278  CFDD F03F          	movff	postdec2,??_main+1
   802  00027C  C03E  F021         	movff	??_main,_segMap+32
   803  000280  C03F  F022         	movff	??_main+1,_segMap+33
   804  000284  D004               	goto	L2
   805  000286                     l1010:
   806                           
   807                           ;main.c: 165: segMap[8] = fontList[0x45];
   808  000286  C18A  F021         	movff	_fontList+138,_segMap+32
   809  00028A  C18B  F022         	movff	_fontList+139,_segMap+33
   810  00028E                     L2:
   811  00028E  6A23               	clrf	_segMap+34,c
   812  000290  6A24               	clrf	_segMap+35,c
   813                           
   814                           ;main.c: 167: }
   815                           
   816                           ;main.c: 166: break;
   817  000292  D728               	goto	l64
   818  000294                     l1014:
   819  000294  C060  F03E         	movff	main@digitSelector,??_main
   820  000298  C061  F03F         	movff	main@digitSelector+1,??_main+1
   821                           
   822                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   823                           ; Switch size 1, requested type "space"
   824                           ; Number of cases is 1, Range of values is 0 to 0
   825                           ; switch strategies available:
   826                           ; Name         Instructions Cycles
   827                           ; simple_byte            4     3 (average)
   828                           ;	Chosen strategy is simple_byte
   829  00029C  503F               	movf	??_main+1,w,c
   830  00029E  0A00               	xorlw	0	; case 0
   831  0002A0  A4D8               	btfss	status,2,c
   832  0002A2  D7F1               	goto	l1010
   833                           
   834                           ; Switch size 1, requested type "space"
   835                           ; Number of cases is 9, Range of values is 7 to 15
   836                           ; switch strategies available:
   837                           ; Name         Instructions Cycles
   838                           ; simple_byte           28    15 (average)
   839                           ;	Chosen strategy is simple_byte
   840  0002A4  503E               	movf	??_main,w,c
   841  0002A6  0A07               	xorlw	7	; case 7
   842  0002A8  B4D8               	btfsc	status,2,c
   843  0002AA  D73B               	goto	l992
   844  0002AC  0A0F               	xorlw	15	; case 8
   845  0002AE  B4D8               	btfsc	status,2,c
   846  0002B0  D74C               	goto	l994
   847  0002B2  0A01               	xorlw	1	; case 9
   848  0002B4  B4D8               	btfsc	status,2,c
   849  0002B6  D75D               	goto	l996
   850  0002B8  0A03               	xorlw	3	; case 10
   851  0002BA  B4D8               	btfsc	status,2,c
   852  0002BC  D76E               	goto	l998
   853  0002BE  0A01               	xorlw	1	; case 11
   854  0002C0  B4D8               	btfsc	status,2,c
   855  0002C2  D77F               	goto	l1000
   856  0002C4  0A07               	xorlw	7	; case 12
   857  0002C6  B4D8               	btfsc	status,2,c
   858  0002C8  D790               	goto	l1002
   859  0002CA  0A01               	xorlw	1	; case 13
   860  0002CC  B4D8               	btfsc	status,2,c
   861  0002CE  D7A1               	goto	l1004
   862  0002D0  0A03               	xorlw	3	; case 14
   863  0002D2  B4D8               	btfsc	status,2,c
   864  0002D4  D7B2               	goto	l1006
   865  0002D6  0A01               	xorlw	1	; case 15
   866  0002D8  B4D8               	btfsc	status,2,c
   867  0002DA  D7C3               	goto	l1008
   868  0002DC  D7D4               	goto	l1010
   869  0002DE                     __end_of_main:
   870                           	opt stack 0
   871                           tblptru	equ	0xFF8
   872                           tblptrh	equ	0xFF7
   873                           tblptrl	equ	0xFF6
   874                           tablat	equ	0xFF5
   875                           prodh	equ	0xFF4
   876                           prodl	equ	0xFF3
   877                           intcon	equ	0xFF2
   878                           postinc0	equ	0xFEE
   879                           postdec1	equ	0xFE5
   880                           fsr1h	equ	0xFE2
   881                           fsr1l	equ	0xFE1
   882                           postinc2	equ	0xFDE
   883                           postdec2	equ	0xFDD
   884                           fsr2h	equ	0xFDA
   885                           fsr2l	equ	0xFD9
   886                           status	equ	0xFD8
   887                           
   888 ;; *************** function _isr *****************
   889 ;; Defined at:
   890 ;;		line 173 in file "main.c"
   891 ;; Parameters:    Size  Location     Type
   892 ;;		None
   893 ;; Auto vars:     Size  Location     Type
   894 ;;		None
   895 ;; Return value:  Size  Location     Type
   896 ;;                  1    wreg      void 
   897 ;; Registers used:
   898 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   899 ;; Tracked objects:
   900 ;;		On entry : 0/0
   901 ;;		On exit  : 0/0
   902 ;;		Unchanged: 0/0
   903 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   904 ;;      Params:         0       0       0       0       0       0       0       0       0
   905 ;;      Locals:         0       0       0       0       0       0       0       0       0
   906 ;;      Temps:         17       0       0       0       0       0       0       0       0
   907 ;;      Totals:        17       0       0       0       0       0       0       0       0
   908 ;;Total ram usage:       17 bytes
   909 ;; Hardware stack levels used:    1
   910 ;; Hardware stack levels required when called:    1
   911 ;; This function calls:
   912 ;;		___awmod
   913 ;;		_setDigitPin
   914 ;;		_setSegPin
   915 ;; This function is called by:
   916 ;;		Interrupt level 2
   917 ;; This function uses a non-reentrant model
   918 ;;
   919                           
   920                           	psect	intcode
   921  000008                     __pintcode:
   922                           	opt stack 0
   923  000008                     _isr:
   924                           	opt stack 29
   925                           
   926                           ;incstack = 0
   927  000008  8244               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   928  00000A  CFFA F030          	movff	pclath,??_isr+3
   929  00000E  CFFB F031          	movff	pclatu,??_isr+4
   930  000012  ED6F  F001         	call	int_func,f	;refresh shadow registers
   931                           pclatu	equ	0xFFB
   932                           pclath	equ	0xFFA
   933                           tblptru	equ	0xFF8
   934                           tblptrh	equ	0xFF7
   935                           tblptrl	equ	0xFF6
   936                           tablat	equ	0xFF5
   937                           prodh	equ	0xFF4
   938                           prodl	equ	0xFF3
   939                           intcon	equ	0xFF2
   940                           postinc0	equ	0xFEE
   941                           postdec1	equ	0xFE5
   942                           fsr1h	equ	0xFE2
   943                           fsr1l	equ	0xFE1
   944                           postinc2	equ	0xFDE
   945                           postdec2	equ	0xFDD
   946                           fsr2h	equ	0xFDA
   947                           fsr2l	equ	0xFD9
   948                           status	equ	0xFD8
   949                           
   950                           	psect	intcode_body
   951  0002DE                     __pintcode_body:
   952                           	opt stack 29
   953  0002DE                     int_func:
   954                           	opt stack 29
   955  0002DE  0006               	pop		; remove dummy address from shadow register refresh
   956  0002E0  CFE9 F032          	movff	fsr0l,??_isr+5
   957  0002E4  CFEA F033          	movff	fsr0h,??_isr+6
   958  0002E8  CFE1 F034          	movff	fsr1l,??_isr+7
   959  0002EC  CFE2 F035          	movff	fsr1h,??_isr+8
   960  0002F0  CFD9 F036          	movff	fsr2l,??_isr+9
   961  0002F4  CFDA F037          	movff	fsr2h,??_isr+10
   962  0002F8  CFF3 F038          	movff	prodl,??_isr+11
   963  0002FC  CFF4 F039          	movff	prodh,??_isr+12
   964  000300  CFF6 F03A          	movff	tblptrl,??_isr+13
   965  000304  CFF7 F03B          	movff	tblptrh,??_isr+14
   966  000308  CFF8 F03C          	movff	tblptru,??_isr+15
   967  00030C  CFF5 F03D          	movff	tablat,??_isr+16
   968                           
   969                           ;main.c: 174: if(PIR1bits.TMR2IF){
   970  000310  A29E               	btfss	3998,1,c	;volatile
   971  000312  D048               	goto	i2l90
   972                           
   973                           ;main.c: 175: PIR1bits.TMR2IF = 0;
   974  000314  929E               	bcf	3998,1,c	;volatile
   975                           
   976                           ;main.c: 177: setSegPin(0b00000000000000000);
   977  000316  0E00               	movlw	0
   978  000318  6E25               	movwf	setSegPin@input,c
   979  00031A  0E00               	movlw	0
   980  00031C  6E26               	movwf	setSegPin@input+1,c
   981  00031E  0E00               	movlw	0
   982  000320  6E27               	movwf	setSegPin@input+2,c
   983  000322  0E00               	movlw	0
   984  000324  6E28               	movwf	setSegPin@input+3,c
   985  000326  ECD3  F002         	call	_setSegPin	;wreg free
   986                           
   987                           ;main.c: 178: setDigitPin(1<<digitPtr);
   988  00032A  C042  F02D         	movff	_digitPtr,??_isr
   989  00032E  0E01               	movlw	1
   990  000330  6E2E               	movwf	(??_isr+1)& (0+255),c
   991  000332  0E00               	movlw	0
   992  000334  6E2F               	movwf	(??_isr+2)& (0+255),c
   993  000336  2A2D               	incf	??_isr,f,c
   994  000338  D003               	goto	i2u22_44
   995  00033A                     i2u22_45:
   996  00033A  90D8               	bcf	status,0,c
   997  00033C  362E               	rlcf	??_isr+1,f,c
   998  00033E  362F               	rlcf	??_isr+2,f,c
   999  000340                     i2u22_44:
  1000  000340  2E2D               	decfsz	??_isr,f,c
  1001  000342  D7FB               	goto	i2u22_45
  1002  000344  C02E  F025         	movff	??_isr+1,setDigitPin@input
  1003  000348  C02F  F026         	movff	??_isr+2,setDigitPin@input+1
  1004  00034C  ECEF  F002         	call	_setDigitPin	;wreg free
  1005                           
  1006                           ;main.c: 179: setSegPin(segMap[digitPtr]);
  1007  000350  0E01               	movlw	low _segMap
  1008  000352  6E2D               	movwf	??_isr& (0+255),c
  1009  000354  0E00               	movlw	high _segMap
  1010  000356  6E2E               	movwf	(??_isr+1)& (0+255),c
  1011  000358  90D8               	bcf	status,0,c
  1012  00035A  3442               	rlcf	_digitPtr,w,c
  1013  00035C  6ED9               	movwf	fsr2l,c
  1014  00035E  3443               	rlcf	_digitPtr+1,w,c
  1015  000360  6EDA               	movwf	fsr2h,c
  1016  000362  90D8               	bcf	status,0,c
  1017  000364  36D9               	rlcf	fsr2l,f,c
  1018  000366  36DA               	rlcf	fsr2h,f,c
  1019  000368  502D               	movf	??_isr,w,c
  1020  00036A  26D9               	addwf	fsr2l,f,c
  1021  00036C  502E               	movf	??_isr+1,w,c
  1022  00036E  22DA               	addwfc	fsr2h,f,c
  1023  000370  CFDE F025          	movff	postinc2,setSegPin@input
  1024  000374  CFDE F026          	movff	postinc2,setSegPin@input+1
  1025  000378  CFDE F027          	movff	postinc2,setSegPin@input+2
  1026  00037C  CFDE F028          	movff	postinc2,setSegPin@input+3
  1027  000380  ECD3  F002         	call	_setSegPin	;wreg free
  1028                           
  1029                           ;main.c: 180: digitPtr = (digitPtr+1)%9;
  1030  000384  0E01               	movlw	1
  1031  000386  2442               	addwf	_digitPtr,w,c
  1032  000388  6E25               	movwf	___awmod@dividend,c
  1033  00038A  0E00               	movlw	0
  1034  00038C  2043               	addwfc	_digitPtr+1,w,c
  1035  00038E  6E26               	movwf	___awmod@dividend+1,c
  1036  000390  0E00               	movlw	0
  1037  000392  6E28               	movwf	___awmod@divisor+1,c
  1038  000394  0E09               	movlw	9
  1039  000396  6E27               	movwf	___awmod@divisor,c
  1040  000398  EC70  F002         	call	___awmod	;wreg free
  1041  00039C  C025  F042         	movff	?___awmod,_digitPtr
  1042  0003A0  C026  F043         	movff	?___awmod+1,_digitPtr+1
  1043  0003A4                     i2l90:
  1044  0003A4  C03D  FFF5         	movff	??_isr+16,tablat
  1045  0003A8  C03C  FFF8         	movff	??_isr+15,tblptru
  1046  0003AC  C03B  FFF7         	movff	??_isr+14,tblptrh
  1047  0003B0  C03A  FFF6         	movff	??_isr+13,tblptrl
  1048  0003B4  C039  FFF4         	movff	??_isr+12,prodh
  1049  0003B8  C038  FFF3         	movff	??_isr+11,prodl
  1050  0003BC  C037  FFDA         	movff	??_isr+10,fsr2h
  1051  0003C0  C036  FFD9         	movff	??_isr+9,fsr2l
  1052  0003C4  C035  FFE2         	movff	??_isr+8,fsr1h
  1053  0003C8  C034  FFE1         	movff	??_isr+7,fsr1l
  1054  0003CC  C033  FFEA         	movff	??_isr+6,fsr0h
  1055  0003D0  C032  FFE9         	movff	??_isr+5,fsr0l
  1056  0003D4  C031  FFFB         	movff	??_isr+4,pclatu
  1057  0003D8  C030  FFFA         	movff	??_isr+3,pclath
  1058  0003DC  9244               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  1059  0003DE  0011               	retfie		f
  1060  0003E0                     __end_of_isr:
  1061                           	opt stack 0
  1062                           pclatu	equ	0xFFB
  1063                           pclath	equ	0xFFA
  1064                           tblptru	equ	0xFF8
  1065                           tblptrh	equ	0xFF7
  1066                           tblptrl	equ	0xFF6
  1067                           tablat	equ	0xFF5
  1068                           prodh	equ	0xFF4
  1069                           prodl	equ	0xFF3
  1070                           intcon	equ	0xFF2
  1071                           postinc0	equ	0xFEE
  1072                           fsr0h	equ	0xFEA
  1073                           fsr0l	equ	0xFE9
  1074                           postdec1	equ	0xFE5
  1075                           fsr1h	equ	0xFE2
  1076                           fsr1l	equ	0xFE1
  1077                           postinc2	equ	0xFDE
  1078                           postdec2	equ	0xFDD
  1079                           fsr2h	equ	0xFDA
  1080                           fsr2l	equ	0xFD9
  1081                           status	equ	0xFD8
  1082                           
  1083 ;; *************** function _setSegPin *****************
  1084 ;; Defined at:
  1085 ;;		line 21 in file "main.c"
  1086 ;; Parameters:    Size  Location     Type
  1087 ;;  input           4    0[COMRAM] unsigned long 
  1088 ;; Auto vars:     Size  Location     Type
  1089 ;;		None
  1090 ;; Return value:  Size  Location     Type
  1091 ;;                  1    wreg      void 
  1092 ;; Registers used:
  1093 ;;		wreg, status,2, status,0
  1094 ;; Tracked objects:
  1095 ;;		On entry : 0/0
  1096 ;;		On exit  : 0/0
  1097 ;;		Unchanged: 0/0
  1098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1099 ;;      Params:         4       0       0       0       0       0       0       0       0
  1100 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1101 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1102 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1103 ;;Total ram usage:        8 bytes
  1104 ;; Hardware stack levels used:    1
  1105 ;; This function calls:
  1106 ;;		Nothing
  1107 ;; This function is called by:
  1108 ;;		_isr
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           	psect	text2
  1113  0005A6                     __ptext2:
  1114                           	opt stack 0
  1115  0005A6                     _setSegPin:
  1116                           	opt stack 29
  1117                           
  1118                           ;main.c: 22: input = ~input;
  1119                           
  1120                           ;incstack = 0
  1121  0005A6  C025  F029         	movff	setSegPin@input,??_setSegPin
  1122  0005AA  C026  F02A         	movff	setSegPin@input+1,??_setSegPin+1
  1123  0005AE  C027  F02B         	movff	setSegPin@input+2,??_setSegPin+2
  1124  0005B2  C028  F02C         	movff	setSegPin@input+3,??_setSegPin+3
  1125  0005B6  1E29               	comf	??_setSegPin,f,c
  1126  0005B8  1E2A               	comf	??_setSegPin+1,f,c
  1127  0005BA  1E2B               	comf	??_setSegPin+2,f,c
  1128  0005BC  1E2C               	comf	??_setSegPin+3,f,c
  1129  0005BE  C029  F025         	movff	??_setSegPin,setSegPin@input
  1130  0005C2  C02A  F026         	movff	??_setSegPin+1,setSegPin@input+1
  1131  0005C6  C02B  F027         	movff	??_setSegPin+2,setSegPin@input+2
  1132  0005CA  C02C  F028         	movff	??_setSegPin+3,setSegPin@input+3
  1133                           
  1134                           ;main.c: 23: PORTC = (input & 0b10000000000000000) >> 16;
  1135  0005CE  5027               	movf	setSegPin@input+2,w,c
  1136  0005D0  0B01               	andlw	1
  1137  0005D2  6E82               	movwf	3970,c	;volatile
  1138                           
  1139                           ;main.c: 24: PORTD = (input & 0b01111111100000000) >> 8;
  1140  0005D4  C026  FF83         	movff	setSegPin@input+1,3971	;volatile
  1141                           
  1142                           ;main.c: 25: PORTB = input & 0b00000000011111111;
  1143  0005D8  C025  FF81         	movff	setSegPin@input,3969	;volatile
  1144  0005DC  0012               	return		;funcret
  1145  0005DE                     __end_of_setSegPin:
  1146                           	opt stack 0
  1147                           pclatu	equ	0xFFB
  1148                           pclath	equ	0xFFA
  1149                           tblptru	equ	0xFF8
  1150                           tblptrh	equ	0xFF7
  1151                           tblptrl	equ	0xFF6
  1152                           tablat	equ	0xFF5
  1153                           prodh	equ	0xFF4
  1154                           prodl	equ	0xFF3
  1155                           intcon	equ	0xFF2
  1156                           postinc0	equ	0xFEE
  1157                           fsr0h	equ	0xFEA
  1158                           fsr0l	equ	0xFE9
  1159                           postdec1	equ	0xFE5
  1160                           fsr1h	equ	0xFE2
  1161                           fsr1l	equ	0xFE1
  1162                           postinc2	equ	0xFDE
  1163                           postdec2	equ	0xFDD
  1164                           fsr2h	equ	0xFDA
  1165                           fsr2l	equ	0xFD9
  1166                           status	equ	0xFD8
  1167                           
  1168 ;; *************** function _setDigitPin *****************
  1169 ;; Defined at:
  1170 ;;		line 28 in file "main.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  input           2    0[COMRAM] unsigned int 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;		None
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg, status,2, status,0
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1184 ;;      Params:         2       0       0       0       0       0       0       0       0
  1185 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1186 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1187 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1188 ;;Total ram usage:        4 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; This function calls:
  1191 ;;		Nothing
  1192 ;; This function is called by:
  1193 ;;		_isr
  1194 ;; This function uses a non-reentrant model
  1195 ;;
  1196                           
  1197                           	psect	text3
  1198  0005DE                     __ptext3:
  1199                           	opt stack 0
  1200  0005DE                     _setDigitPin:
  1201                           	opt stack 29
  1202                           
  1203                           ;main.c: 29: PORTA = (input & 0b111111000) >> 3;
  1204                           
  1205                           ;incstack = 0
  1206  0005DE  C025  F027         	movff	setDigitPin@input,??_setDigitPin
  1207  0005E2  C026  F028         	movff	setDigitPin@input+1,??_setDigitPin+1
  1208  0005E6  90D8               	bcf	status,0,c
  1209  0005E8  3228               	rrcf	??_setDigitPin+1,f,c
  1210  0005EA  3227               	rrcf	??_setDigitPin,f,c
  1211  0005EC  90D8               	bcf	status,0,c
  1212  0005EE  3228               	rrcf	??_setDigitPin+1,f,c
  1213  0005F0  3227               	rrcf	??_setDigitPin,f,c
  1214  0005F2  90D8               	bcf	status,0,c
  1215  0005F4  3228               	rrcf	??_setDigitPin+1,f,c
  1216  0005F6  3227               	rrcf	??_setDigitPin,f,c
  1217  0005F8  5027               	movf	??_setDigitPin,w,c
  1218  0005FA  0B3F               	andlw	63
  1219  0005FC  6E80               	movwf	3968,c	;volatile
  1220                           
  1221                           ;main.c: 30: PORTE = input & 0b000000111;
  1222  0005FE  5025               	movf	setDigitPin@input,w,c
  1223  000600  0B07               	andlw	7
  1224  000602  6E84               	movwf	3972,c	;volatile
  1225  000604  0012               	return		;funcret
  1226  000606                     __end_of_setDigitPin:
  1227                           	opt stack 0
  1228                           pclatu	equ	0xFFB
  1229                           pclath	equ	0xFFA
  1230                           tblptru	equ	0xFF8
  1231                           tblptrh	equ	0xFF7
  1232                           tblptrl	equ	0xFF6
  1233                           tablat	equ	0xFF5
  1234                           prodh	equ	0xFF4
  1235                           prodl	equ	0xFF3
  1236                           intcon	equ	0xFF2
  1237                           postinc0	equ	0xFEE
  1238                           fsr0h	equ	0xFEA
  1239                           fsr0l	equ	0xFE9
  1240                           postdec1	equ	0xFE5
  1241                           fsr1h	equ	0xFE2
  1242                           fsr1l	equ	0xFE1
  1243                           postinc2	equ	0xFDE
  1244                           postdec2	equ	0xFDD
  1245                           fsr2h	equ	0xFDA
  1246                           fsr2l	equ	0xFD9
  1247                           status	equ	0xFD8
  1248                           
  1249 ;; *************** function ___awmod *****************
  1250 ;; Defined at:
  1251 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.37\sources\common\awmod.c"
  1252 ;; Parameters:    Size  Location     Type
  1253 ;;  dividend        2    0[COMRAM] int 
  1254 ;;  divisor         2    2[COMRAM] int 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  sign            1    5[COMRAM] unsigned char 
  1257 ;;  counter         1    4[COMRAM] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  2    0[COMRAM] int 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1267 ;;      Params:         4       0       0       0       0       0       0       0       0
  1268 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1270 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1271 ;;Total ram usage:        6 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; This function calls:
  1274 ;;		Nothing
  1275 ;; This function is called by:
  1276 ;;		_isr
  1277 ;; This function uses a non-reentrant model
  1278 ;;
  1279                           
  1280                           	psect	text4
  1281  0004E0                     __ptext4:
  1282                           	opt stack 0
  1283  0004E0                     ___awmod:
  1284                           	opt stack 29
  1285                           
  1286                           ;incstack = 0
  1287  0004E0  0E00               	movlw	0
  1288  0004E2  6E2A               	movwf	___awmod@sign,c
  1289  0004E4  AE26               	btfss	___awmod@dividend+1,7,c
  1290  0004E6  D006               	goto	i2l842
  1291  0004E8  6C25               	negf	___awmod@dividend,c
  1292  0004EA  1E26               	comf	___awmod@dividend+1,f,c
  1293  0004EC  B0D8               	btfsc	status,0,c
  1294  0004EE  2A26               	incf	___awmod@dividend+1,f,c
  1295  0004F0  0E01               	movlw	1
  1296  0004F2  6E2A               	movwf	___awmod@sign,c
  1297  0004F4                     i2l842:
  1298  0004F4  AE28               	btfss	___awmod@divisor+1,7,c
  1299  0004F6  D004               	goto	i2l846
  1300  0004F8  6C27               	negf	___awmod@divisor,c
  1301  0004FA  1E28               	comf	___awmod@divisor+1,f,c
  1302  0004FC  B0D8               	btfsc	status,0,c
  1303  0004FE  2A28               	incf	___awmod@divisor+1,f,c
  1304  000500                     i2l846:
  1305  000500  5027               	movf	___awmod@divisor,w,c
  1306  000502  1028               	iorwf	___awmod@divisor+1,w,c
  1307  000504  B4D8               	btfsc	status,2,c
  1308  000506  D018               	goto	i2l862
  1309  000508  0E01               	movlw	1
  1310  00050A  6E29               	movwf	___awmod@counter,c
  1311  00050C  D004               	goto	i2l852
  1312  00050E                     i2l850:
  1313  00050E  90D8               	bcf	status,0,c
  1314  000510  3627               	rlcf	___awmod@divisor,f,c
  1315  000512  3628               	rlcf	___awmod@divisor+1,f,c
  1316  000514  2A29               	incf	___awmod@counter,f,c
  1317  000516                     i2l852:
  1318  000516  AE28               	btfss	___awmod@divisor+1,7,c
  1319  000518  D7FA               	goto	i2l850
  1320  00051A                     i2l854:
  1321  00051A  5027               	movf	___awmod@divisor,w,c
  1322  00051C  5C25               	subwf	___awmod@dividend,w,c
  1323  00051E  5028               	movf	___awmod@divisor+1,w,c
  1324  000520  5826               	subwfb	___awmod@dividend+1,w,c
  1325  000522  A0D8               	btfss	status,0,c
  1326  000524  D004               	goto	i2l858
  1327  000526  5027               	movf	___awmod@divisor,w,c
  1328  000528  5E25               	subwf	___awmod@dividend,f,c
  1329  00052A  5028               	movf	___awmod@divisor+1,w,c
  1330  00052C  5A26               	subwfb	___awmod@dividend+1,f,c
  1331  00052E                     i2l858:
  1332  00052E  90D8               	bcf	status,0,c
  1333  000530  3228               	rrcf	___awmod@divisor+1,f,c
  1334  000532  3227               	rrcf	___awmod@divisor,f,c
  1335  000534  2E29               	decfsz	___awmod@counter,f,c
  1336  000536  D7F1               	goto	i2l854
  1337  000538                     i2l862:
  1338  000538  502A               	movf	___awmod@sign,w,c
  1339  00053A  B4D8               	btfsc	status,2,c
  1340  00053C  D004               	goto	i2l866
  1341  00053E  6C25               	negf	___awmod@dividend,c
  1342  000540  1E26               	comf	___awmod@dividend+1,f,c
  1343  000542  B0D8               	btfsc	status,0,c
  1344  000544  2A26               	incf	___awmod@dividend+1,f,c
  1345  000546                     i2l866:
  1346  000546  C025  F025         	movff	___awmod@dividend,?___awmod
  1347  00054A  C026  F026         	movff	___awmod@dividend+1,?___awmod+1
  1348  00054E  0012               	return	
  1349  000550                     __end_of___awmod:
  1350                           	opt stack 0
  1351  0000                     pclatu	equ	0xFFB
  1352                           pclath	equ	0xFFA
  1353                           tblptru	equ	0xFF8
  1354                           tblptrh	equ	0xFF7
  1355                           tblptrl	equ	0xFF6
  1356                           tablat	equ	0xFF5
  1357                           prodh	equ	0xFF4
  1358                           prodl	equ	0xFF3
  1359                           intcon	equ	0xFF2
  1360                           postinc0	equ	0xFEE
  1361                           fsr0h	equ	0xFEA
  1362                           fsr0l	equ	0xFE9
  1363                           postdec1	equ	0xFE5
  1364                           fsr1h	equ	0xFE2
  1365                           fsr1l	equ	0xFE1
  1366                           postinc2	equ	0xFDE
  1367                           postdec2	equ	0xFDD
  1368                           fsr2h	equ	0xFDA
  1369                           fsr2l	equ	0xFD9
  1370                           status	equ	0xFD8
  1371                           pclatu	equ	0xFFB
  1372                           pclath	equ	0xFFA
  1373                           tblptru	equ	0xFF8
  1374                           tblptrh	equ	0xFF7
  1375                           tblptrl	equ	0xFF6
  1376                           tablat	equ	0xFF5
  1377                           prodh	equ	0xFF4
  1378                           prodl	equ	0xFF3
  1379                           intcon	equ	0xFF2
  1380                           postinc0	equ	0xFEE
  1381                           fsr0h	equ	0xFEA
  1382                           fsr0l	equ	0xFE9
  1383                           postdec1	equ	0xFE5
  1384                           fsr1h	equ	0xFE2
  1385                           fsr1l	equ	0xFE1
  1386                           postinc2	equ	0xFDE
  1387                           postdec2	equ	0xFDD
  1388                           fsr2h	equ	0xFDA
  1389                           fsr2l	equ	0xFD9
  1390                           status	equ	0xFD8
  1391                           
  1392                           	psect	rparam
  1393  0000                     pclatu	equ	0xFFB
  1394                           pclath	equ	0xFFA
  1395                           tblptru	equ	0xFF8
  1396                           tblptrh	equ	0xFF7
  1397                           tblptrl	equ	0xFF6
  1398                           tablat	equ	0xFF5
  1399                           prodh	equ	0xFF4
  1400                           prodl	equ	0xFF3
  1401                           intcon	equ	0xFF2
  1402                           postinc0	equ	0xFEE
  1403                           fsr0h	equ	0xFEA
  1404                           fsr0l	equ	0xFE9
  1405                           postdec1	equ	0xFE5
  1406                           fsr1h	equ	0xFE2
  1407                           fsr1l	equ	0xFE1
  1408                           postinc2	equ	0xFDE
  1409                           postdec2	equ	0xFDD
  1410                           fsr2h	equ	0xFDA
  1411                           fsr2l	equ	0xFD9
  1412                           status	equ	0xFD8
  1413                           
  1414                           	psect	temp
  1415  000044                     btemp:
  1416                           	opt stack 0
  1417  000044                     	ds	1
  1418  0000                     int$flags	set	btemp
  1419                           pclatu	equ	0xFFB
  1420                           pclath	equ	0xFFA
  1421                           tblptru	equ	0xFF8
  1422                           tblptrh	equ	0xFF7
  1423                           tblptrl	equ	0xFF6
  1424                           tablat	equ	0xFF5
  1425                           prodh	equ	0xFF4
  1426                           prodl	equ	0xFF3
  1427                           intcon	equ	0xFF2
  1428                           postinc0	equ	0xFEE
  1429                           fsr0h	equ	0xFEA
  1430                           fsr0l	equ	0xFE9
  1431                           postdec1	equ	0xFE5
  1432                           fsr1h	equ	0xFE2
  1433                           fsr1l	equ	0xFE1
  1434                           postinc2	equ	0xFDE
  1435                           postdec2	equ	0xFDD
  1436                           fsr2h	equ	0xFDA
  1437                           fsr2l	equ	0xFD9
  1438                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        292
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     29      67
    BANK0           160      3       3
    BANK1           256      0     256
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_setSegPin

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 7     7      0     381
                                             25 COMRAM     4     4      0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _isr                                                 17    17      0     749
                                              8 COMRAM    17    17      0
                            ___awmod
                        _setDigitPin
                          _setSegPin
 ---------------------------------------------------------------------------------
 (2) _setSegPin                                            8     4      4     217
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _setDigitPin                                          4     2      2     108
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     424
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _isr (ROOT)
   ___awmod
   _setDigitPin
   _setSegPin

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      3       3       5        1.9%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     1D      43       1       71.3%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     146      20        0.0%
DATA                 0      0     146       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.37 build -260352376 
Symbol Table                                                                                   Wed Aug 03 03:09:00 2016

                     l64 00E4                       l68 0116                      l992 0122  
                    l994 014A                      l996 0172                      l998 019A  
                    _PR2 000FCB                      _isr 0008             ___awmod@sign 002A  
                    prod 000FF3             __CFG_FOSC$HS 000000             __CFG_LVP$OFF 000000  
                   l1000 01C2                     l1010 0286                     l1002 01EA  
                   l1004 0212                     l1006 023A                     l1014 0294  
                   l1008 0262                     ?_isr 0025                     _BRGH 007D62  
                   i2l90 03A4                     _TMR2 000FCC         setDigitPin@input 0025  
                   _main 001A                     fsr0h 000FEA                     fsr1h 000FE2  
                   fsr0l 000FE9                     fsr2h 000FDA                     fsr1l 000FE1  
                   fsr2l 000FD9                     btemp 0044                     pclat 000FFA  
                   prodh 000FF4                     prodl 000FF3                     start 0016  
          __CFG_MCLRE$ON 000000             ___param_bank 000010                    ??_isr 002D  
                  ?_main 0025          __end_of___awmod 0550                    _CMCON 000FB4  
                  _T2CON 000FCA                    i2l850 050E                    i2l842 04F4  
                  i2l852 0516                    i2l854 051A                    i2l862 0538  
                  i2l846 0500                    i2l866 0546                    i2l858 052E  
                  _RCREG 000FAE                    _RCSTA 000FAB                    _SPBRG 000FAF  
                  _PORTA 000F80                    _PORTB 000F81                    _PORTC 000F82  
                  _PORTD 000F83                    _PORTE 000F84                    _TRISA 000F92  
                  _TRISB 000F93                    _TRISC 000F94                    _TRISD 000F95  
                  _TRISE 000F96                    tablat 000FF5                    status 000FD8  
        __initialization 0550             __end_of_main 02DE             ?_setDigitPin 0025  
                 ??_main 003E            __activetblptr 000002                   _ADCON1 000FC1  
                 _SPBRGH 000FB0                ??___awmod 0029                   _segMap 0001  
        ___awmod@divisor 0027          ___awmod@counter 0029             __pdataCOMRAM 0001  
                 tblptrh 000FF7                   tblptrl 000FF6                   tblptru 000FF8  
             __accesstop 0060  __end_of__initialization 0598            ___rparam_used 000001  
         __pcstackCOMRAM 0025             __pidataBANK1 03E0       __size_of_setSegPin 0038  
                _BAUDCON 000FB8     __size_of_setDigitPin 0028                  i2u22_44 0340  
                i2u22_45 033A                  __Hparam 0000                  __Lparam 0000  
                ___awmod 04E0                  __pcinit 0550                  __ramtop 0800  
                __ptext0 001A                  __ptext2 05A6                  __ptext3 05DE  
                __ptext4 04E0             __size_of_isr 03D8         ___awmod@dividend 0025  
      main@digitSelector 0060           __pintcode_body 02DE     end_of_initialization 0598  
      __end_of_setSegPin 05DE            __Lmediumconst 0000                  int_func 02DE  
                postdec1 000FE5                  postdec2 000FDD                  postinc0 000FEE  
                postinc2 000FDE               main@RxData 0062            __pidataCOMRAM 0606  
    start_initialization 0550              __end_of_isr 03E0              __pdataBANK1 0100  
            __pbssCOMRAM 0042            __pcstackBANK0 0060                __pintcode 0008  
          ??_setDigitPin 0027                 ?___awmod 0025                _setSegPin 05A6  
               _PIE1bits 000F9D                 _PIR1bits 000F9E      __end_of_setDigitPin 0606  
              copy_data0 0568                copy_data1 058C               ?_setSegPin 0025  
               __Hrparam 0000                 __Lrparam 0000         __size_of___awmod 0070  
               _digitPtr 0042           setSegPin@input 0025                 _fontList 0100  
          __size_of_main 02C4              _setDigitPin 05DE                 int$flags 0044  
             _INTCONbits 000FF2                 intlevel2 0000              ??_setSegPin 0029  
