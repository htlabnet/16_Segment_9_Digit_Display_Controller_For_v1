

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Wed Aug  3 17:05:37 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F4553
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
    14                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    25                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    26                           	psect	text8,global,reloc=2,class=CODE,delta=1
    27                           	psect	text9,global,reloc=2,class=CODE,delta=1
    28                           	psect	text10,global,reloc=2,class=CODE,delta=1
    29                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    30                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    31                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    32                           	dabs	1,0x400,48,_BDT
    33                           	dabs	1,0x438,8,_CtrlTrfData
    34                           	dabs	1,0x430,8,_SetupPkt
    35  0000                     
    36 ;; Function _USART_mySetLineCodingHandler is unused but had its address taken
    37  0000                     
    38                           	psect	idataBANK0
    39  001182                     __pidataBANK0:
    40                           	opt stack 0
    41                           
    42                           ;initializer for _segMap
    43  001182  FF00               	dw	65280
    44  001184  0000               	dw	0
    45  001186  FF00               	dw	65280
    46  001188  0000               	dw	0
    47  00118A  FF00               	dw	65280
    48  00118C  0000               	dw	0
    49  00118E  FF00               	dw	65280
    50  001190  0000               	dw	0
    51  001192  FF00               	dw	65280
    52  001194  0000               	dw	0
    53  001196  FF00               	dw	65280
    54  001198  0000               	dw	0
    55  00119A  FF00               	dw	65280
    56  00119C  0000               	dw	0
    57  00119E  FF00               	dw	65280
    58  0011A0  0000               	dw	0
    59  0011A2  FF00               	dw	65280
    60  0011A4  0000               	dw	0
    61                           
    62                           	psect	idataBANK1
    63  000E72                     __pidataBANK1:
    64                           	opt stack 0
    65                           
    66                           ;initializer for _fontList
    67  000E72  0000               	dw	0
    68  000E74  0000               	dw	0
    69  000E76  0000               	dw	0
    70  000E78  0000               	dw	0
    71  000E7A  0000               	dw	0
    72  000E7C  0000               	dw	0
    73  000E7E  0000               	dw	0
    74  000E80  0000               	dw	0
    75  000E82  0000               	dw	0
    76  000E84  0000               	dw	0
    77  000E86  0000               	dw	0
    78  000E88  0000               	dw	0
    79  000E8A  0000               	dw	0
    80  000E8C  0000               	dw	0
    81  000E8E  0000               	dw	0
    82  000E90  0000               	dw	0
    83  000E92  0000               	dw	0
    84  000E94  0000               	dw	0
    85  000E96  0000               	dw	0
    86  000E98  0000               	dw	0
    87  000E9A  0000               	dw	0
    88  000E9C  0000               	dw	0
    89  000E9E  0000               	dw	0
    90  000EA0  0000               	dw	0
    91  000EA2  0000               	dw	0
    92  000EA4  0000               	dw	0
    93  000EA6  0000               	dw	0
    94  000EA8  0000               	dw	0
    95  000EAA  0000               	dw	0
    96  000EAC  0000               	dw	0
    97  000EAE  0000               	dw	0
    98  000EB0  0000               	dw	0
    99  000EB2  0000               	dw	0
   100  000EB4  1812               	dw	6162
   101  000EB6  0880               	dw	2176
   102  000EB8  0000               	dw	0
   103  000EBA  CC33               	dw	52275
   104  000EBC  7BA9               	dw	31657
   105  000EBE  B43B               	dw	46139
   106  000EC0  0080               	dw	128
   107  000EC2  9000               	dw	36864
   108  000EC4  2400               	dw	9216
   109  000EC6  FF00               	dw	65280
   110  000EC8  4B00               	dw	19200
   111  000ECA  0000               	dw	0
   112  000ECC  0300               	dw	768
   113  000ECE  0000               	dw	0
   114  000ED0  3000               	dw	12288
   115  000ED2  00FF               	dw	255
   116  000ED4  4800               	dw	18432
   117  000ED6  0377               	dw	887
   118  000ED8  033F               	dw	831
   119  000EDA  038C               	dw	908
   120  000EDC  03BB               	dw	955
   121  000EDE  03FB               	dw	1019
   122  000EE0  008F               	dw	143
   123  000EE2  03FF               	dw	1023
   124  000EE4  03BF               	dw	959
   125  000EE6  0000               	dw	0
   126  000EE8  0000               	dw	0
   127  000EEA  9000               	dw	36864
   128  000EEC  0330               	dw	816
   129  000EEE  2400               	dw	9216
   130  000EF0  1013               	dw	4115
   131  000EF2  0000               	dw	0
   132  000EF4  03CF               	dw	975
   133  000EF6  91F3               	dw	37363
   134  000EF8  00F3               	dw	243
   135  000EFA  037C               	dw	892
   136  000EFC  03F3               	dw	1011
   137  000EFE  03C3               	dw	963
   138  000F00  02FB               	dw	763
   139  000F02  03CC               	dw	972
   140  000F04  4833               	dw	18483
   141  000F06  4813               	dw	18451
   142  000F08  91C0               	dw	37312
   143  000F0A  00F0               	dw	240
   144  000F0C  14CC               	dw	5324
   145  000F0E  84CC               	dw	33996
   146  000F10  00FF               	dw	255
   147  000F12  03C7               	dw	967
   148  000F14  80FF               	dw	33023
   149  000F16  83C7               	dw	33735
   150  000F18  03BB               	dw	955
   151  000F1A  4803               	dw	18435
   152  000F1C  00FC               	dw	252
   153  000F1E  30C0               	dw	12480
   154  000F20  A0CC               	dw	41164
   155  000F22  B400               	dw	46080
   156  000F24  5400               	dw	21504
   157  000F26  3033               	dw	12339
   158  000F28  00D1               	dw	209
   159  000F2A  8400               	dw	33792
   160  000F2C  002E               	dw	46
   161  000F2E  0003               	dw	3
   162  000F30  0030               	dw	48
   163  000F32  AB00               	dw	43776
   164  000F34  34C0               	dw	13504
   165  000F36  0B7B               	dw	2939
   166  000F38  1703               	dw	5891
   167  000F3A  0000               	dw	0
   168  000F3C  0000               	dw	0
   169  000F3E  0000               	dw	0
   170  000F40  FFFF               	dw	65535
   171  000F42  0001               	dw	1
   172  000F44  0002               	dw	2
   173  000F46  0004               	dw	4
   174  000F48  0008               	dw	8
   175  000F4A  0020               	dw	32
   176  000F4C  0010               	dw	16
   177  000F4E  0040               	dw	64
   178  000F50  0080               	dw	128
   179  000F52  0800               	dw	2048
   180  000F54  1000               	dw	4096
   181  000F56  0200               	dw	512
   182  000F58  8000               	dw	32768
   183  000F5A  4000               	dw	16384
   184  000F5C  2000               	dw	8192
   185  000F5E  2000               	dw	8192
   186  000F60  0400               	dw	1024
   187  000F62  0800               	dw	2048
   188  000F64  1800               	dw	6144
   189  000F66  1900               	dw	6400
   190  000F68  9900               	dw	39168
   191  000F6A  D900               	dw	55552
   192  000F6C  F900               	dw	63744
   193  000F6E  FB00               	dw	64256
   194  000F70  FF00               	dw	65280
   195                           
   196                           	psect	smallconst
   197  000800                     __psmallconst:
   198                           	opt stack 0
   199  000800  00                 	db	0
   200  000801                     _USB_SD_Ptr:
   201                           	opt stack 0
   202  000801  C6                 	db	low _sd000
   203  000802  08                 	db	high _sd000
   204  000803  4C                 	db	low _sd001
   205  000804  08                 	db	high _sd001
   206  000805  80                 	db	low _sd002
   207  000806  08                 	db	high _sd002
   208  000807                     __end_of_USB_SD_Ptr:
   209                           	opt stack 0
   210  000807                     _USB_CD_Ptr:
   211                           	opt stack 0
   212  000807  09                 	db	low _configDescriptor1
   213  000808  08                 	db	high _configDescriptor1
   214  000809                     __end_of_USB_CD_Ptr:
   215                           	opt stack 0
   216  000809                     _configDescriptor1:
   217                           	opt stack 0
   218  000809  09                 	db	9
   219  00080A  02                 	db	2
   220  00080B  43                 	db	67
   221  00080C  00                 	db	0
   222  00080D  02                 	db	2
   223  00080E  01                 	db	1
   224  00080F  00                 	db	0
   225  000810  C0                 	db	192
   226  000811  32                 	db	50
   227  000812  09                 	db	9
   228  000813  04                 	db	4
   229  000814  00                 	db	0
   230  000815  00                 	db	0
   231  000816  01                 	db	1
   232  000817  02                 	db	2
   233  000818  02                 	db	2
   234  000819  01                 	db	1
   235  00081A  00                 	db	0
   236  00081B  05                 	db	5
   237  00081C  24                 	db	36
   238  00081D  00                 	db	0
   239  00081E  10                 	db	16
   240  00081F  01                 	db	1
   241  000820  04                 	db	4
   242  000821  24                 	db	36
   243  000822  02                 	db	2
   244  000823  02                 	db	2
   245  000824  05                 	db	5
   246  000825  24                 	db	36
   247  000826  06                 	db	6
   248  000827  00                 	db	0
   249  000828  01                 	db	1
   250  000829  05                 	db	5
   251  00082A  24                 	db	36
   252  00082B  01                 	db	1
   253  00082C  00                 	db	0
   254  00082D  01                 	db	1
   255  00082E  07                 	db	7
   256  00082F  05                 	db	5
   257  000830  81                 	db	129
   258  000831  03                 	db	3
   259  000832  08                 	db	8
   260  000833  00                 	db	0
   261  000834  02                 	db	2
   262  000835  09                 	db	9
   263  000836  04                 	db	4
   264  000837  01                 	db	1
   265  000838  00                 	db	0
   266  000839  02                 	db	2
   267  00083A  0A                 	db	10
   268  00083B  00                 	db	0
   269  00083C  00                 	db	0
   270  00083D  00                 	db	0
   271  00083E  07                 	db	7
   272  00083F  05                 	db	5
   273  000840  02                 	db	2
   274  000841  02                 	db	2
   275  000842  40                 	db	64
   276  000843  00                 	db	0
   277  000844  00                 	db	0
   278  000845  07                 	db	7
   279  000846  05                 	db	5
   280  000847  82                 	db	130
   281  000848  02                 	db	2
   282  000849  40                 	db	64
   283  00084A  00                 	db	0
   284  00084B  00                 	db	0
   285  00084C                     __end_of_configDescriptor1:
   286                           	opt stack 0
   287  00084C                     _sd001:
   288                           	opt stack 0
   289  00084C  34                 	db	52
   290  00084D  03                 	db	3
   291  00084E  004D               	dw	77
   292  000850  0069               	dw	105
   293  000852  0063               	dw	99
   294  000854  0072               	dw	114
   295  000856  006F               	dw	111
   296  000858  0063               	dw	99
   297  00085A  0068               	dw	104
   298  00085C  0069               	dw	105
   299  00085E  0070               	dw	112
   300  000860  0020               	dw	32
   301  000862  0054               	dw	84
   302  000864  0065               	dw	101
   303  000866  0063               	dw	99
   304  000868  0068               	dw	104
   305  00086A  006E               	dw	110
   306  00086C  006F               	dw	111
   307  00086E  006C               	dw	108
   308  000870  006F               	dw	111
   309  000872  0067               	dw	103
   310  000874  0079               	dw	121
   311  000876  0020               	dw	32
   312  000878  0049               	dw	73
   313  00087A  006E               	dw	110
   314  00087C  0063               	dw	99
   315  00087E  002E               	dw	46
   316  000880                     __end_of_sd001:
   317                           	opt stack 0
   318  000880                     _sd002:
   319                           	opt stack 0
   320  000880  34                 	db	52
   321  000881  03                 	db	3
   322  000882  0043               	dw	67
   323  000884  0044               	dw	68
   324  000886  0043               	dw	67
   325  000888  0020               	dw	32
   326  00088A  0052               	dw	82
   327  00088C  0053               	dw	83
   328  00088E  002D               	dw	45
   329  000890  0032               	dw	50
   330  000892  0033               	dw	51
   331  000894  0032               	dw	50
   332  000896  0020               	dw	32
   333  000898  0045               	dw	69
   334  00089A  006D               	dw	109
   335  00089C  0075               	dw	117
   336  00089E  006C               	dw	108
   337  0008A0  0061               	dw	97
   338  0008A2  0074               	dw	116
   339  0008A4  0069               	dw	105
   340  0008A6  006F               	dw	111
   341  0008A8  006E               	dw	110
   342  0008AA  0020               	dw	32
   343  0008AC  0044               	dw	68
   344  0008AE  0065               	dw	101
   345  0008B0  006D               	dw	109
   346  0008B2  006F               	dw	111
   347  0008B4                     __end_of_sd002:
   348                           	opt stack 0
   349  0008B4                     _device_dsc:
   350                           	opt stack 0
   351  0008B4  12                 	db	18
   352  0008B5  01                 	db	1
   353  0008B6  0200               	dw	512
   354  0008B8  02                 	db	2
   355  0008B9  00                 	db	0
   356  0008BA  00                 	db	0
   357  0008BB  08                 	db	8
   358  0008BC  04D8               	dw	1240
   359  0008BE  000A               	dw	10
   360  0008C0  0100               	dw	256
   361  0008C2  01                 	db	1
   362  0008C3  02                 	db	2
   363  0008C4  00                 	db	0
   364  0008C5  01                 	db	1
   365  0008C6                     __end_of_device_dsc:
   366                           	opt stack 0
   367  0008C6                     _sd000:
   368                           	opt stack 0
   369  0008C6  04                 	db	4
   370  0008C7  03                 	db	3
   371  0008C8  0409               	dw	1033
   372  0008CA                     __end_of_sd000:
   373                           	opt stack 0
   374  0000                     _ADCON1	set	4033
   375  0000                     _BAUDCON	set	4024
   376  0000                     _CMCON	set	4020
   377  0000                     _INTCONbits	set	4082
   378  0000                     _IPR2bits	set	4002
   379  0000                     _OSCCON	set	4051
   380  0000                     _PIE1bits	set	3997
   381  0000                     _PIE2bits	set	4000
   382  0000                     _PIR1bits	set	3998
   383  0000                     _PIR2bits	set	4001
   384  0000                     _PORTA	set	3968
   385  0000                     _PORTB	set	3969
   386  0000                     _PORTC	set	3970
   387  0000                     _PORTD	set	3971
   388  0000                     _PORTE	set	3972
   389  0000                     _PR2	set	4043
   390  0000                     _RCONbits	set	4048
   391  0000                     _RCREG	set	4014
   392  0000                     _RCSTA	set	4011
   393  0000                     _RCSTAbits	set	4011
   394  0000                     _SPBRG	set	4015
   395  0000                     _SPBRGH	set	4016
   396  0000                     _T2CON	set	4042
   397  0000                     _TMR2	set	4044
   398  0000                     _TRISA	set	3986
   399  0000                     _TRISB	set	3987
   400  0000                     _TRISC	set	3988
   401  0000                     _TRISCbits	set	3988
   402  0000                     _TRISD	set	3989
   403  0000                     _TRISE	set	3990
   404  0000                     _TXREG	set	4013
   405  0000                     _TXSTA	set	4012
   406  0000                     _UADDR	set	3950
   407  0000                     _UCFG	set	3951
   408  0000                     _UCON	set	3949
   409  0000                     _UCONbits	set	3949
   410  0000                     _UEIE	set	3947
   411  0000                     _UEIR	set	3946
   412  0000                     _UEP0bits	set	3952
   413  0000                     _UIE	set	3945
   414  0000                     _UIEbits	set	3945
   415  0000                     _UIR	set	3944
   416  0000                     _UIRbits	set	3944
   417  0000                     _USTAT	set	3948
   418  0000                     _UEP0	set	3952
   419  0000                     _UEP1	set	3953
   420  0000                     _BRGH	set	32098
   421                           
   422                           ; #config settings
   423  0008CA  00                 	db	0	; dummy byte at the end
   424  0000                     
   425                           	psect	cinit
   426  000F72                     __pcinit:
   427                           	opt stack 0
   428  000F72                     start_initialization:
   429                           	opt stack 0
   430  000F72                     __initialization:
   431                           	opt stack 0
   432                           
   433                           ; Initialize objects allocated to BANK1 (256 bytes)
   434                           ; load TBLPTR registers with __pidataBANK1
   435  000F72  0E72               	movlw	low __pidataBANK1
   436  000F74  6EF6               	movwf	tblptrl,c
   437  000F76  0E0E               	movlw	high __pidataBANK1
   438  000F78  6EF7               	movwf	tblptrh,c
   439  000F7A  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   440  000F7C  6EF8               	movwf	tblptru,c
   441  000F7E  EE01  F000         	lfsr	0,__pdataBANK1
   442  000F82  EE11 F000          	lfsr	1,256
   443  000F86                     copy_data0:
   444  000F86  0009               	tblrd		*+
   445  000F88  CFF5 FFEE          	movff	tablat,postinc0
   446  000F8C  50E5               	movf	postdec1,w,c
   447  000F8E  50E1               	movf	fsr1l,w,c
   448  000F90  E1FA               	bnz	copy_data0
   449  000F92  50E2               	movf	fsr1h,w,c
   450  000F94  E1F8               	bnz	copy_data0
   451                           
   452                           ; Initialize objects allocated to BANK0 (36 bytes)
   453                           ; load TBLPTR registers with __pidataBANK0
   454  000F96  0E82               	movlw	low __pidataBANK0
   455  000F98  6EF6               	movwf	tblptrl,c
   456  000F9A  0E11               	movlw	high __pidataBANK0
   457  000F9C  6EF7               	movwf	tblptrh,c
   458  000F9E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   459  000FA0  6EF8               	movwf	tblptru,c
   460  000FA2  EE00  F0D6         	lfsr	0,__pdataBANK0
   461  000FA6  EE10 F024          	lfsr	1,36
   462  000FAA                     copy_data1:
   463  000FAA  0009               	tblrd		*+
   464  000FAC  CFF5 FFEE          	movff	tablat,postinc0
   465  000FB0  50E5               	movf	postdec1,w,c
   466  000FB2  50E1               	movf	fsr1l,w,c
   467  000FB4  E1FA               	bnz	copy_data1
   468                           
   469                           ; Clear objects allocated to BANK2 (64 bytes)
   470  000FB6  EE02  F000         	lfsr	0,__pbssBANK2
   471  000FBA  0E40               	movlw	64
   472  000FBC                     clear_0:
   473  000FBC  6AEE               	clrf	postinc0,c
   474  000FBE  06E8               	decf	wreg,f,c
   475  000FC0  E1FD               	bnz	clear_0
   476                           
   477                           ; Clear objects allocated to BANK0 (118 bytes)
   478  000FC2  EE00  F060         	lfsr	0,__pbssBANK0
   479  000FC6  0E76               	movlw	118
   480  000FC8                     clear_1:
   481  000FC8  6AEE               	clrf	postinc0,c
   482  000FCA  06E8               	decf	wreg,f,c
   483  000FCC  E1FD               	bnz	clear_1
   484                           
   485                           ; Clear objects allocated to COMRAM (52 bytes)
   486  000FCE  EE00  F001         	lfsr	0,__pbssCOMRAM
   487  000FD2  0E34               	movlw	52
   488  000FD4                     clear_2:
   489  000FD4  6AEE               	clrf	postinc0,c
   490  000FD6  06E8               	decf	wreg,f,c
   491  000FD8  E1FD               	bnz	clear_2
   492  000FDA                     end_of_initialization:
   493                           	opt stack 0
   494  000FDA                     __end_of__initialization:
   495                           	opt stack 0
   496  000FDA  904E               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   497  000FDC  924E               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   498  000FDE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   499  000FE0  6EF8               	movwf	tblptru,c
   500  000FE2  0100               	movlb	0
   501  000FE4  EF66  F004         	goto	_main	;jump to C main() function
   502                           tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1h	equ	0xFE2
   510                           fsr1l	equ	0xFE1
   511                           
   512                           	psect	bssCOMRAM
   513  000001                     __pbssCOMRAM:
   514                           	opt stack 0
   515  000001                     _outPipes:
   516                           	opt stack 0
   517  000001                     	ds	8
   518  000009                     _inPipes:
   519                           	opt stack 0
   520  000009                     	ds	6
   521  00000F                     _pBDTEntryIn:
   522                           	opt stack 0
   523  00000F                     	ds	6
   524  000015                     _ep_data_in:
   525                           	opt stack 0
   526  000015                     	ds	3
   527  000018                     _ep_data_out:
   528                           	opt stack 0
   529  000018                     	ds	3
   530  00001B                     _CDCDataOutHandle:
   531                           	opt stack 0
   532  00001B                     	ds	2
   533  00001D                     _pBDTEntryEP0OutCurrent:
   534                           	opt stack 0
   535  00001D                     	ds	2
   536  00001F                     _pBDTEntryEP0OutNext:
   537                           	opt stack 0
   538  00001F                     	ds	2
   539  000021                     _BothEP0OutUOWNsSet:
   540                           	opt stack 0
   541  000021                     	ds	1
   542  000022                     _RemoteWakeup:
   543                           	opt stack 0
   544  000022                     	ds	1
   545  000023                     _USBBusIsSuspended:
   546                           	opt stack 0
   547  000023                     	ds	1
   548  000024                     _USBDeferINDataStagePackets:
   549                           	opt stack 0
   550  000024                     	ds	1
   551  000025                     _USBDeferOUTDataStagePackets:
   552                           	opt stack 0
   553  000025                     	ds	1
   554  000026                     _USBDeferStatusStagePacket:
   555                           	opt stack 0
   556  000026                     	ds	1
   557  000027                     _USBDeviceState:
   558                           	opt stack 0
   559  000027                     	ds	1
   560  000028                     _USBStatusStageEnabledFlag1:
   561                           	opt stack 0
   562  000028                     	ds	1
   563  000029                     _USBStatusStageEnabledFlag2:
   564                           	opt stack 0
   565  000029                     	ds	1
   566  00002A                     _USBStatusStageTimeoutCounter:
   567                           	opt stack 0
   568  00002A                     	ds	1
   569  00002B                     _USBTicksSinceSuspendEnd:
   570                           	opt stack 0
   571  00002B                     	ds	1
   572  00002C                     _cdc_mem_type:
   573                           	opt stack 0
   574  00002C                     	ds	1
   575  00002D                     _cdc_rx_len:
   576                           	opt stack 0
   577  00002D                     	ds	1
   578  00002E                     _cdc_trf_state:
   579                           	opt stack 0
   580  00002E                     	ds	1
   581  00002F                     _cdc_tx_len:
   582                           	opt stack 0
   583  00002F                     	ds	1
   584  000030                     _controlTransferState:
   585                           	opt stack 0
   586  000030                     	ds	1
   587  000031                     _endpoint_number:
   588                           	opt stack 0
   589  000031                     	ds	1
   590  000032                     _shortPacketStatus:
   591                           	opt stack 0
   592  000032                     	ds	1
   593  000033                     _USBActiveConfiguration:
   594                           	opt stack 0
   595  000033                     	ds	1
   596  000034                     _USTATcopy:
   597                           	opt stack 0
   598  000034                     	ds	1
   599                           tblptru	equ	0xFF8
   600                           tblptrh	equ	0xFF7
   601                           tblptrl	equ	0xFF6
   602                           tablat	equ	0xFF5
   603                           postinc0	equ	0xFEE
   604                           wreg	equ	0xFE8
   605                           postdec1	equ	0xFE5
   606                           fsr1h	equ	0xFE2
   607                           fsr1l	equ	0xFE1
   608                           
   609                           	psect	bssBANK0
   610  000060                     __pbssBANK0:
   611                           	opt stack 0
   612  000060                     _pBDTEntryOut:
   613                           	opt stack 0
   614  000060                     	ds	6
   615  000066                     _BaudRateGen:
   616                           	opt stack 0
   617  000066                     	ds	4
   618  00006A                     _USB1msTickCount:
   619                           	opt stack 0
   620  00006A                     	ds	4
   621  00006E                     _pCDCDst:
   622                           	opt stack 0
   623  00006E                     	ds	3
   624  000071                     _pCDCSrc:
   625                           	opt stack 0
   626  000071                     	ds	3
   627  000074                     _CDCDataInHandle:
   628                           	opt stack 0
   629  000074                     	ds	2
   630  000076                     _pDst:
   631                           	opt stack 0
   632  000076                     	ds	2
   633  000078                     _control_signal_bitmap:
   634                           	opt stack 0
   635  000078                     	ds	1
   636  000079                     _cdc_data_rx:
   637                           	opt stack 0
   638  000079                     	ds	64
   639  0000B9                     _cdc_notice:
   640                           	opt stack 0
   641  0000B9                     	ds	10
   642  0000C3                     _dummy_encapsulated_cmd_response:
   643                           	opt stack 0
   644  0000C3                     	ds	8
   645  0000CB                     _line_coding:
   646                           	opt stack 0
   647  0000CB                     	ds	7
   648  0000D2                     _USBAlternateInterface:
   649                           	opt stack 0
   650  0000D2                     	ds	2
   651  0000D4                     _digitPtr:
   652                           	opt stack 0
   653  0000D4                     	ds	2
   654                           tblptru	equ	0xFF8
   655                           tblptrh	equ	0xFF7
   656                           tblptrl	equ	0xFF6
   657                           tablat	equ	0xFF5
   658                           postinc0	equ	0xFEE
   659                           wreg	equ	0xFE8
   660                           postdec1	equ	0xFE5
   661                           fsr1h	equ	0xFE2
   662                           fsr1l	equ	0xFE1
   663                           
   664                           	psect	dataBANK0
   665  0000D6                     __pdataBANK0:
   666                           	opt stack 0
   667  0000D6                     _segMap:
   668                           	opt stack 0
   669  0000D6                     	ds	36
   670                           tblptru	equ	0xFF8
   671                           tblptrh	equ	0xFF7
   672                           tblptrl	equ	0xFF6
   673                           tablat	equ	0xFF5
   674                           postinc0	equ	0xFEE
   675                           wreg	equ	0xFE8
   676                           postdec1	equ	0xFE5
   677                           fsr1h	equ	0xFE2
   678                           fsr1l	equ	0xFE1
   679                           
   680                           	psect	dataBANK1
   681  000100                     __pdataBANK1:
   682                           	opt stack 0
   683  000100                     _fontList:
   684                           	opt stack 0
   685  000100                     	ds	256
   686                           tblptru	equ	0xFF8
   687                           tblptrh	equ	0xFF7
   688                           tblptrl	equ	0xFF6
   689                           tablat	equ	0xFF5
   690                           postinc0	equ	0xFEE
   691                           wreg	equ	0xFE8
   692                           postdec1	equ	0xFE5
   693                           fsr1h	equ	0xFE2
   694                           fsr1l	equ	0xFE1
   695                           
   696                           	psect	bssBANK2
   697  000200                     __pbssBANK2:
   698                           	opt stack 0
   699  000200                     _cdc_data_tx:
   700                           	opt stack 0
   701  000200                     	ds	64
   702                           tblptru	equ	0xFF8
   703                           tblptrh	equ	0xFF7
   704                           tblptrl	equ	0xFF6
   705                           tablat	equ	0xFF5
   706                           postinc0	equ	0xFEE
   707                           wreg	equ	0xFE8
   708                           postdec1	equ	0xFE5
   709                           fsr1h	equ	0xFE2
   710                           fsr1l	equ	0xFE1
   711                           
   712                           	psect	cstackBANK2
   713  000240                     __pcstackBANK2:
   714                           	opt stack 0
   715  000240                     memset@p:
   716                           	opt stack 0
   717                           
   718                           ; 2 bytes @ 0x0
   719  000240                     	ds	2
   720  000242                     USBDeviceInit@i:
   721                           	opt stack 0
   722                           
   723                           ; 1 bytes @ 0x2
   724  000242                     	ds	1
   725  000243                     ??_main:
   726                           
   727                           ; 1 bytes @ 0x3
   728  000243                     	ds	4
   729  000247                     main@digitSelector:
   730                           	opt stack 0
   731                           
   732                           ; 2 bytes @ 0x7
   733  000247                     	ds	2
   734  000249                     main@buff:
   735                           	opt stack 0
   736                           
   737                           ; 1 bytes @ 0x9
   738  000249                     	ds	1
   739  00024A                     main@RxData:
   740                           	opt stack 0
   741                           
   742                           ; 1 bytes @ 0xA
   743  00024A                     	ds	1
   744                           tblptru	equ	0xFF8
   745                           tblptrh	equ	0xFF7
   746                           tblptrl	equ	0xFF6
   747                           tablat	equ	0xFF5
   748                           postinc0	equ	0xFEE
   749                           wreg	equ	0xFE8
   750                           postdec1	equ	0xFE5
   751                           fsr1h	equ	0xFE2
   752                           fsr1l	equ	0xFE1
   753                           
   754                           	psect	cstackBANK0
   755  0000FA                     __pcstackBANK0:
   756                           	opt stack 0
   757  0000FA                     SYSTEM_Initialize@state:
   758                           	opt stack 0
   759  0000FA                     USART_putcUSART@c:
   760                           	opt stack 0
   761  0000FA                     USART_getcUSART@c:
   762                           	opt stack 0
   763  0000FA                     memset@p1:
   764                           	opt stack 0
   765                           
   766                           ; 2 bytes @ 0x0
   767  0000FA                     	ds	1
   768  0000FB                     SYSTEM_Initialize@pll_startup_counter:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x1
   772  0000FB                     	ds	1
   773  0000FC                     memset@c:
   774                           	opt stack 0
   775                           
   776                           ; 2 bytes @ 0x2
   777  0000FC                     	ds	1
   778  0000FD                     SYSTEM_Initialize@pll_startup_counter_2128:
   779                           	opt stack 0
   780                           
   781                           ; 2 bytes @ 0x3
   782  0000FD                     	ds	1
   783  0000FE                     memset@n:
   784                           	opt stack 0
   785                           
   786                           ; 2 bytes @ 0x4
   787  0000FE                     	ds	2
   788  000100                     tblptru	equ	0xFF8
   789                           tblptrh	equ	0xFF7
   790                           tblptrl	equ	0xFF6
   791                           tablat	equ	0xFF5
   792                           postinc0	equ	0xFEE
   793                           wreg	equ	0xFE8
   794                           postdec1	equ	0xFE5
   795                           fsr1h	equ	0xFE2
   796                           fsr1l	equ	0xFE1
   797                           
   798                           ; 1 bytes @ 0x6
   799                           
   800                           	psect	cstackCOMRAM
   801  000035                     __pcstackCOMRAM:
   802                           	opt stack 0
   803  000035                     ?___awmod:
   804                           	opt stack 0
   805  000035                     setDigitPin@input:
   806                           	opt stack 0
   807  000035                     ___awmod@dividend:
   808                           	opt stack 0
   809  000035                     setSegPin@input:
   810                           	opt stack 0
   811                           
   812                           ; 4 bytes @ 0x0
   813  000035                     	ds	2
   814  000037                     ??_setDigitPin:
   815  000037                     ___awmod@divisor:
   816                           	opt stack 0
   817                           
   818                           ; 2 bytes @ 0x2
   819  000037                     	ds	2
   820  000039                     ??_setSegPin:
   821  000039                     ___awmod@counter:
   822                           	opt stack 0
   823                           
   824                           ; 1 bytes @ 0x4
   825  000039                     	ds	1
   826  00003A                     ___awmod@sign:
   827                           	opt stack 0
   828                           
   829                           ; 1 bytes @ 0x5
   830  00003A                     	ds	3
   831  00003D                     ??_isr:
   832                           
   833                           ; 1 bytes @ 0x8
   834  00003D                     	ds	17
   835                           tblptru	equ	0xFF8
   836                           tblptrh	equ	0xFF7
   837                           tblptrl	equ	0xFF6
   838                           tablat	equ	0xFF5
   839                           postinc0	equ	0xFEE
   840                           wreg	equ	0xFE8
   841                           postdec1	equ	0xFE5
   842                           fsr1h	equ	0xFE2
   843                           fsr1l	equ	0xFE1
   844                           
   845 ;;
   846 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   847 ;;
   848 ;; *************** function _main *****************
   849 ;; Defined at:
   850 ;;		line 79 in file "main.c"
   851 ;; Parameters:    Size  Location     Type
   852 ;;		None
   853 ;; Auto vars:     Size  Location     Type
   854 ;;  digitSelecto    2    7[BANK2 ] short 
   855 ;;  RxData          1   10[BANK2 ] unsigned char 
   856 ;;  buff            1    9[BANK2 ] unsigned char 
   857 ;; Return value:  Size  Location     Type
   858 ;;                  1    wreg      void 
   859 ;; Registers used:
   860 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   861 ;; Tracked objects:
   862 ;;		On entry : 0/0
   863 ;;		On exit  : 0/0
   864 ;;		Unchanged: 0/0
   865 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   866 ;;      Params:         0       0       0       0       0       0       0       0       0
   867 ;;      Locals:         0       0       0       4       0       0       0       0       0
   868 ;;      Temps:          0       0       0       4       0       0       0       0       0
   869 ;;      Totals:         0       0       0       8       0       0       0       0       0
   870 ;;Total ram usage:        8 bytes
   871 ;; Hardware stack levels required when called:    4
   872 ;; This function calls:
   873 ;;		_SYSTEM_Initialize
   874 ;;		_USART_getcUSART
   875 ;;		_USART_putcUSART
   876 ;;		_USBDeviceAttach
   877 ;;		_USBDeviceInit
   878 ;; This function is called by:
   879 ;;		Startup code after reset
   880 ;; This function uses a non-reentrant model
   881 ;;
   882                           
   883                           	psect	text0
   884  0008CC                     __ptext0:
   885                           	opt stack 0
   886  0008CC                     _main:
   887                           	opt stack 27
   888                           
   889                           ;main.c: 81: ADCON1 = 0b00001111;
   890                           
   891                           ;incstack = 0
   892  0008CC  0E0F               	movlw	15
   893  0008CE  6EC1               	movwf	4033,c	;volatile
   894                           
   895                           ;main.c: 82: CMCON = 0b00000111;
   896  0008D0  0E07               	movlw	7
   897  0008D2  6EB4               	movwf	4020,c	;volatile
   898                           
   899                           ;main.c: 83: TRISA = 0b00000000;
   900  0008D4  0E00               	movlw	0
   901  0008D6  6E92               	movwf	3986,c	;volatile
   902                           
   903                           ;main.c: 84: TRISB = 0b00000000;
   904  0008D8  0E00               	movlw	0
   905  0008DA  6E93               	movwf	3987,c	;volatile
   906                           
   907                           ;main.c: 85: TRISC = 0b10000000;
   908  0008DC  0E80               	movlw	128
   909  0008DE  6E94               	movwf	3988,c	;volatile
   910                           
   911                           ;main.c: 86: TRISD = 0b00000000;
   912  0008E0  0E00               	movlw	0
   913  0008E2  6E95               	movwf	3989,c	;volatile
   914                           
   915                           ;main.c: 87: TRISE = 0b00000000;
   916  0008E4  0E00               	movlw	0
   917  0008E6  6E96               	movwf	3990,c	;volatile
   918                           
   919                           ;main.c: 97: T2CON = 0;
   920  0008E8  0E00               	movlw	0
   921  0008EA  6ECA               	movwf	4042,c	;volatile
   922                           
   923                           ;main.c: 98: TMR2 = 0;
   924  0008EC  0E00               	movlw	0
   925  0008EE  6ECC               	movwf	4044,c	;volatile
   926                           
   927                           ;main.c: 99: PR2 = 125;
   928  0008F0  0E7D               	movlw	125
   929  0008F2  6ECB               	movwf	4043,c	;volatile
   930                           
   931                           ;main.c: 100: T2CON = 0b01111101;
   932  0008F4  0E7D               	movlw	125
   933  0008F6  6ECA               	movwf	4042,c	;volatile
   934                           
   935                           ;main.c: 102: PIE1bits.TMR2IE = 1;
   936  0008F8  829D               	bsf	3997,1,c	;volatile
   937                           
   938                           ;main.c: 103: INTCONbits.PEIE = 1;
   939  0008FA  8CF2               	bsf	intcon,6,c	;volatile
   940                           
   941                           ;main.c: 104: INTCONbits.GIE = 1;
   942  0008FC  8EF2               	bsf	intcon,7,c	;volatile
   943                           
   944                           ;main.c: 108: RCSTA = 0b10010000;
   945  0008FE  0E90               	movlw	144
   946  000900  6EAB               	movwf	4011,c	;volatile
   947                           
   948                           ;main.c: 109: BAUDCON = 0b00001000;
   949  000902  0E08               	movlw	8
   950  000904  6EB8               	movwf	4024,c	;volatile
   951                           
   952                           ;main.c: 110: SPBRGH = 0;
   953  000906  0E00               	movlw	0
   954  000908  6EB0               	movwf	4016,c	;volatile
   955                           
   956                           ;main.c: 111: BRGH = 0;
   957  00090A  94AC               	bcf	4012,2,c	;volatile
   958                           
   959                           ;main.c: 112: SPBRG = 129;
   960  00090C  0E81               	movlw	129
   961  00090E  6EAF               	movwf	4015,c	;volatile
   962                           
   963                           ;main.c: 115: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
   964  000910  0E00               	movlw	0
   965  000912  EC2C  F008         	call	_SYSTEM_Initialize
   966                           
   967                           ;main.c: 117: USBDeviceInit();
   968  000916  EC05  F006         	call	_USBDeviceInit	;wreg free
   969                           
   970                           ;main.c: 118: USBDeviceAttach();
   971  00091A  EC95  F008         	call	_USBDeviceAttach	;wreg free
   972                           
   973                           ;main.c: 122: char RxData;
   974                           ;main.c: 123: short digitSelector;
   975                           ;main.c: 127: segMap[0] = fontList['H'];
   976  00091E  C190  F0D6         	movff	_fontList+144,_segMap
   977  000922  C191  F0D7         	movff	_fontList+145,_segMap+1
   978  000926  0100               	movlb	0	; () banked
   979  000928  6BD8               	clrf	(_segMap+2)& (0+255),b
   980  00092A  6BD9               	clrf	(_segMap+3)& (0+255),b
   981                           
   982                           ; BSR set to: 0
   983                           ;main.c: 128: segMap[1] = fontList['T'];
   984  00092C  C1A8  F0DA         	movff	_fontList+168,_segMap+4
   985  000930  C1A9  F0DB         	movff	_fontList+169,_segMap+5
   986  000934  0100               	movlb	0	; () banked
   987  000936  6BDC               	clrf	(_segMap+6)& (0+255),b
   988  000938  6BDD               	clrf	(_segMap+7)& (0+255),b
   989                           
   990                           ; BSR set to: 0
   991                           ;main.c: 129: segMap[2] = fontList['L'];
   992  00093A  C198  F0DE         	movff	_fontList+152,_segMap+8
   993  00093E  C199  F0DF         	movff	_fontList+153,_segMap+9
   994  000942  0100               	movlb	0	; () banked
   995  000944  6BE0               	clrf	(_segMap+10)& (0+255),b
   996  000946  6BE1               	clrf	(_segMap+11)& (0+255),b
   997                           
   998                           ; BSR set to: 0
   999                           ;main.c: 130: segMap[3] = fontList['A'];
  1000  000948  C182  F0E2         	movff	_fontList+130,_segMap+12
  1001  00094C  C183  F0E3         	movff	_fontList+131,_segMap+13
  1002  000950  0100               	movlb	0	; () banked
  1003  000952  6BE4               	clrf	(_segMap+14)& (0+255),b
  1004  000954  6BE5               	clrf	(_segMap+15)& (0+255),b
  1005                           
  1006                           ; BSR set to: 0
  1007                           ;main.c: 131: segMap[4] = fontList['B'] | 0b10000000000000000;
  1008  000956  0101               	movlb	1	; () banked
  1009  000958  5184               	movf	(_fontList+132)& (0+255),w,b
  1010  00095A  0102               	movlb	2	; () banked
  1011  00095C  6F43               	movwf	??_main& (0+255),b
  1012  00095E  0101               	movlb	1	; () banked
  1013  000960  5185               	movf	(_fontList+133)& (0+255),w,b
  1014  000962  0102               	movlb	2	; () banked
  1015  000964  6F44               	movwf	(??_main+1)& (0+255),b
  1016  000966  0102               	movlb	2	; () banked
  1017  000968  6B45               	clrf	(??_main+2)& (0+255),b
  1018  00096A  0102               	movlb	2	; () banked
  1019  00096C  6B46               	clrf	(??_main+3)& (0+255),b
  1020  00096E  0E00               	movlw	0
  1021  000970  0102               	movlb	2	; () banked
  1022  000972  1143               	iorwf	??_main& (0+255),w,b
  1023  000974  0100               	movlb	0	; () banked
  1024  000976  6FE6               	movwf	(_segMap+16)& (0+255),b
  1025  000978  0E00               	movlw	0
  1026  00097A  0102               	movlb	2	; () banked
  1027  00097C  1144               	iorwf	(??_main+1)& (0+255),w,b
  1028  00097E  0100               	movlb	0	; () banked
  1029  000980  6FE7               	movwf	(_segMap+17)& (0+255),b
  1030  000982  0E01               	movlw	1
  1031  000984  0102               	movlb	2	; () banked
  1032  000986  1145               	iorwf	(??_main+2)& (0+255),w,b
  1033  000988  0100               	movlb	0	; () banked
  1034  00098A  6FE8               	movwf	(_segMap+18)& (0+255),b
  1035  00098C  0E00               	movlw	0
  1036  00098E  0102               	movlb	2	; () banked
  1037  000990  1146               	iorwf	(??_main+3)& (0+255),w,b
  1038  000992  0100               	movlb	0	; () banked
  1039  000994  6FE9               	movwf	(_segMap+19)& (0+255),b
  1040                           
  1041                           ; BSR set to: 0
  1042                           ;main.c: 132: segMap[5] = fontList['N'];
  1043  000996  C19C  F0EA         	movff	_fontList+156,_segMap+20
  1044  00099A  C19D  F0EB         	movff	_fontList+157,_segMap+21
  1045  00099E  0100               	movlb	0	; () banked
  1046  0009A0  6BEC               	clrf	(_segMap+22)& (0+255),b
  1047  0009A2  6BED               	clrf	(_segMap+23)& (0+255),b
  1048                           
  1049                           ; BSR set to: 0
  1050                           ;main.c: 133: segMap[6] = fontList['E'];
  1051  0009A4  C18A  F0EE         	movff	_fontList+138,_segMap+24
  1052  0009A8  C18B  F0EF         	movff	_fontList+139,_segMap+25
  1053  0009AC  0100               	movlb	0	; () banked
  1054  0009AE  6BF0               	clrf	(_segMap+26)& (0+255),b
  1055  0009B0  6BF1               	clrf	(_segMap+27)& (0+255),b
  1056                           
  1057                           ; BSR set to: 0
  1058                           ;main.c: 134: segMap[7] = fontList['T'];
  1059  0009B2  C1A8  F0F2         	movff	_fontList+168,_segMap+28
  1060  0009B6  C1A9  F0F3         	movff	_fontList+169,_segMap+29
  1061  0009BA  0100               	movlb	0	; () banked
  1062  0009BC  6BF4               	clrf	(_segMap+30)& (0+255),b
  1063  0009BE  6BF5               	clrf	(_segMap+31)& (0+255),b
  1064                           
  1065                           ; BSR set to: 0
  1066                           ;main.c: 135: segMap[8] = fontList['!'];
  1067  0009C0  C142  F0F6         	movff	_fontList+66,_segMap+32
  1068  0009C4  C143  F0F7         	movff	_fontList+67,_segMap+33
  1069  0009C8  0100               	movlb	0	; () banked
  1070  0009CA  6BF8               	clrf	(_segMap+34)& (0+255),b
  1071  0009CC  6BF9               	clrf	(_segMap+35)& (0+255),b
  1072  0009CE                     l4109:
  1073                           
  1074                           ;main.c: 139: buff = USART_getcUSART();
  1075  0009CE  ECD3  F008         	call	_USART_getcUSART	;wreg free
  1076  0009D2  0102               	movlb	2	; () banked
  1077  0009D4  6F49               	movwf	main@buff& (0+255),b
  1078                           
  1079                           ; BSR set to: 2
  1080                           ;main.c: 140: if(buff != 0){
  1081  0009D6  0102               	movlb	2	; () banked
  1082  0009D8  5149               	movf	main@buff& (0+255),w,b
  1083  0009DA  0102               	movlb	2	; () banked
  1084  0009DC  B4D8               	btfsc	status,2,c
  1085  0009DE  D7F7               	goto	l4109
  1086                           
  1087                           ; BSR set to: 2
  1088                           ;main.c: 141: USART_putcUSART(buff);
  1089  0009E0  0102               	movlb	2	; () banked
  1090  0009E2  5149               	movf	main@buff& (0+255),w,b
  1091  0009E4  ECDF  F008         	call	_USART_putcUSART
  1092                           
  1093                           ;main.c: 142: buff = 0;
  1094  0009E8  0E00               	movlw	0
  1095  0009EA  0102               	movlb	2	; () banked
  1096  0009EC  6F49               	movwf	main@buff& (0+255),b
  1097                           
  1098                           ; BSR set to: 2
  1099                           
  1100                           ; BSR set to: 2
  1101  0009EE  D7EF               	goto	l4109
  1102  0009F0                     l78:
  1103  0009F0  AA9E               	btfss	3998,5,c	;volatile
  1104  0009F2  D7FE               	goto	l78
  1105                           
  1106                           ;main.c: 149: PIR1bits.RCIF = 0;
  1107  0009F4  9A9E               	bcf	3998,5,c	;volatile
  1108                           
  1109                           ;main.c: 150: RxData = RCREG;
  1110  0009F6  CFAE F24A          	movff	4014,main@RxData	;volatile
  1111                           
  1112                           ;main.c: 152: if ((RxData & 0b00000111) == 0b111){
  1113  0009FA  0102               	movlb	2	; () banked
  1114  0009FC  514A               	movf	main@RxData& (0+255),w,b
  1115  0009FE  0B07               	andlw	7
  1116  000A00  0A07               	xorlw	7
  1117  000A02  A4D8               	btfss	status,2,c
  1118  000A04  D7F5               	goto	l78
  1119                           
  1120                           ; BSR set to: 2
  1121                           ;main.c: 153: digitSelector = (RxData & 0b11111000) >> 3;
  1122  000A06  C24A  F243         	movff	main@RxData,??_main
  1123  000A0A  0102               	movlb	2	; () banked
  1124  000A0C  90D8               	bcf	status,0,c
  1125  000A0E  3343               	rrcf	??_main& (0+255),f,b
  1126  000A10  0102               	movlb	2	; () banked
  1127  000A12  90D8               	bcf	status,0,c
  1128  000A14  3343               	rrcf	??_main& (0+255),f,b
  1129  000A16  0102               	movlb	2	; () banked
  1130  000A18  90D8               	bcf	status,0,c
  1131  000A1A  3343               	rrcf	??_main& (0+255),f,b
  1132  000A1C  0E1F               	movlw	31
  1133  000A1E  0102               	movlb	2	; () banked
  1134  000A20  1743               	andwf	??_main& (0+255),f,b
  1135  000A22  0102               	movlb	2	; () banked
  1136  000A24  5143               	movf	??_main& (0+255),w,b
  1137  000A26  0102               	movlb	2	; () banked
  1138  000A28  6F47               	movwf	main@digitSelector& (0+255),b
  1139  000A2A  6B48               	clrf	(main@digitSelector+1)& (0+255),b
  1140  000A2C                     l82:
  1141  000A2C  AA9E               	btfss	3998,5,c	;volatile
  1142  000A2E  D7FE               	goto	l82
  1143                           
  1144                           ;main.c: 155: PIR1bits.RCIF = 0;
  1145  000A30  9A9E               	bcf	3998,5,c	;volatile
  1146                           
  1147                           ;main.c: 156: RxData = RCREG;
  1148  000A32  CFAE F24A          	movff	4014,main@RxData	;volatile
  1149                           
  1150                           ;main.c: 157: switch(digitSelector){
  1151  000A36  D0C2               	goto	l4143
  1152  000A38                     l4121:
  1153                           
  1154                           ;main.c: 159: segMap[0] = fontList[RxData];
  1155  000A38  0102               	movlb	2	; () banked
  1156  000A3A  514A               	movf	main@RxData& (0+255),w,b
  1157  000A3C  0D02               	mullw	2
  1158  000A3E  0E00               	movlw	low _fontList
  1159  000A40  24F3               	addwf	prodl,w,c
  1160  000A42  6ED9               	movwf	fsr2l,c
  1161  000A44  0E01               	movlw	high _fontList
  1162  000A46  20F4               	addwfc	prodh,w,c
  1163  000A48  6EDA               	movwf	fsr2h,c
  1164  000A4A  CFDE F243          	movff	postinc2,??_main
  1165  000A4E  CFDD F244          	movff	postdec2,??_main+1
  1166  000A52  C243  F0D6         	movff	??_main,_segMap
  1167  000A56  C244  F0D7         	movff	??_main+1,_segMap+1
  1168  000A5A  0100               	movlb	0	; () banked
  1169  000A5C  6BD8               	clrf	(_segMap+2)& (0+255),b
  1170  000A5E  6BD9               	clrf	(_segMap+3)& (0+255),b
  1171                           
  1172                           ;main.c: 160: break;
  1173  000A60  D7C7               	goto	l78
  1174  000A62                     l4123:
  1175                           
  1176                           ;main.c: 162: segMap[1] = fontList[RxData];
  1177  000A62  0102               	movlb	2	; () banked
  1178  000A64  514A               	movf	main@RxData& (0+255),w,b
  1179  000A66  0D02               	mullw	2
  1180  000A68  0E00               	movlw	low _fontList
  1181  000A6A  24F3               	addwf	prodl,w,c
  1182  000A6C  6ED9               	movwf	fsr2l,c
  1183  000A6E  0E01               	movlw	high _fontList
  1184  000A70  20F4               	addwfc	prodh,w,c
  1185  000A72  6EDA               	movwf	fsr2h,c
  1186  000A74  CFDE F243          	movff	postinc2,??_main
  1187  000A78  CFDD F244          	movff	postdec2,??_main+1
  1188  000A7C  C243  F0DA         	movff	??_main,_segMap+4
  1189  000A80  C244  F0DB         	movff	??_main+1,_segMap+5
  1190  000A84  0100               	movlb	0	; () banked
  1191  000A86  6BDC               	clrf	(_segMap+6)& (0+255),b
  1192  000A88  6BDD               	clrf	(_segMap+7)& (0+255),b
  1193                           
  1194                           ;main.c: 163: break;
  1195  000A8A  D7B2               	goto	l78
  1196  000A8C                     l4125:
  1197                           
  1198                           ;main.c: 165: segMap[2] = fontList[RxData];
  1199  000A8C  0102               	movlb	2	; () banked
  1200  000A8E  514A               	movf	main@RxData& (0+255),w,b
  1201  000A90  0D02               	mullw	2
  1202  000A92  0E00               	movlw	low _fontList
  1203  000A94  24F3               	addwf	prodl,w,c
  1204  000A96  6ED9               	movwf	fsr2l,c
  1205  000A98  0E01               	movlw	high _fontList
  1206  000A9A  20F4               	addwfc	prodh,w,c
  1207  000A9C  6EDA               	movwf	fsr2h,c
  1208  000A9E  CFDE F243          	movff	postinc2,??_main
  1209  000AA2  CFDD F244          	movff	postdec2,??_main+1
  1210  000AA6  C243  F0DE         	movff	??_main,_segMap+8
  1211  000AAA  C244  F0DF         	movff	??_main+1,_segMap+9
  1212  000AAE  0100               	movlb	0	; () banked
  1213  000AB0  6BE0               	clrf	(_segMap+10)& (0+255),b
  1214  000AB2  6BE1               	clrf	(_segMap+11)& (0+255),b
  1215                           
  1216                           ;main.c: 166: break;
  1217  000AB4  D79D               	goto	l78
  1218  000AB6                     l4127:
  1219                           
  1220                           ;main.c: 168: segMap[3] = fontList[RxData];
  1221  000AB6  0102               	movlb	2	; () banked
  1222  000AB8  514A               	movf	main@RxData& (0+255),w,b
  1223  000ABA  0D02               	mullw	2
  1224  000ABC  0E00               	movlw	low _fontList
  1225  000ABE  24F3               	addwf	prodl,w,c
  1226  000AC0  6ED9               	movwf	fsr2l,c
  1227  000AC2  0E01               	movlw	high _fontList
  1228  000AC4  20F4               	addwfc	prodh,w,c
  1229  000AC6  6EDA               	movwf	fsr2h,c
  1230  000AC8  CFDE F243          	movff	postinc2,??_main
  1231  000ACC  CFDD F244          	movff	postdec2,??_main+1
  1232  000AD0  C243  F0E2         	movff	??_main,_segMap+12
  1233  000AD4  C244  F0E3         	movff	??_main+1,_segMap+13
  1234  000AD8  0100               	movlb	0	; () banked
  1235  000ADA  6BE4               	clrf	(_segMap+14)& (0+255),b
  1236  000ADC  6BE5               	clrf	(_segMap+15)& (0+255),b
  1237                           
  1238                           ;main.c: 169: break;
  1239  000ADE  D788               	goto	l78
  1240  000AE0                     l4129:
  1241                           
  1242                           ;main.c: 171: segMap[4] = fontList[RxData];
  1243  000AE0  0102               	movlb	2	; () banked
  1244  000AE2  514A               	movf	main@RxData& (0+255),w,b
  1245  000AE4  0D02               	mullw	2
  1246  000AE6  0E00               	movlw	low _fontList
  1247  000AE8  24F3               	addwf	prodl,w,c
  1248  000AEA  6ED9               	movwf	fsr2l,c
  1249  000AEC  0E01               	movlw	high _fontList
  1250  000AEE  20F4               	addwfc	prodh,w,c
  1251  000AF0  6EDA               	movwf	fsr2h,c
  1252  000AF2  CFDE F243          	movff	postinc2,??_main
  1253  000AF6  CFDD F244          	movff	postdec2,??_main+1
  1254  000AFA  C243  F0E6         	movff	??_main,_segMap+16
  1255  000AFE  C244  F0E7         	movff	??_main+1,_segMap+17
  1256  000B02  0100               	movlb	0	; () banked
  1257  000B04  6BE8               	clrf	(_segMap+18)& (0+255),b
  1258  000B06  6BE9               	clrf	(_segMap+19)& (0+255),b
  1259                           
  1260                           ;main.c: 172: break;
  1261  000B08  D773               	goto	l78
  1262  000B0A                     l4131:
  1263                           
  1264                           ;main.c: 174: segMap[5] = fontList[RxData];
  1265  000B0A  0102               	movlb	2	; () banked
  1266  000B0C  514A               	movf	main@RxData& (0+255),w,b
  1267  000B0E  0D02               	mullw	2
  1268  000B10  0E00               	movlw	low _fontList
  1269  000B12  24F3               	addwf	prodl,w,c
  1270  000B14  6ED9               	movwf	fsr2l,c
  1271  000B16  0E01               	movlw	high _fontList
  1272  000B18  20F4               	addwfc	prodh,w,c
  1273  000B1A  6EDA               	movwf	fsr2h,c
  1274  000B1C  CFDE F243          	movff	postinc2,??_main
  1275  000B20  CFDD F244          	movff	postdec2,??_main+1
  1276  000B24  C243  F0EA         	movff	??_main,_segMap+20
  1277  000B28  C244  F0EB         	movff	??_main+1,_segMap+21
  1278  000B2C  0100               	movlb	0	; () banked
  1279  000B2E  6BEC               	clrf	(_segMap+22)& (0+255),b
  1280  000B30  6BED               	clrf	(_segMap+23)& (0+255),b
  1281                           
  1282                           ;main.c: 175: break;
  1283  000B32  D75E               	goto	l78
  1284  000B34                     l4133:
  1285                           
  1286                           ;main.c: 177: segMap[6] = fontList[RxData];
  1287  000B34  0102               	movlb	2	; () banked
  1288  000B36  514A               	movf	main@RxData& (0+255),w,b
  1289  000B38  0D02               	mullw	2
  1290  000B3A  0E00               	movlw	low _fontList
  1291  000B3C  24F3               	addwf	prodl,w,c
  1292  000B3E  6ED9               	movwf	fsr2l,c
  1293  000B40  0E01               	movlw	high _fontList
  1294  000B42  20F4               	addwfc	prodh,w,c
  1295  000B44  6EDA               	movwf	fsr2h,c
  1296  000B46  CFDE F243          	movff	postinc2,??_main
  1297  000B4A  CFDD F244          	movff	postdec2,??_main+1
  1298  000B4E  C243  F0EE         	movff	??_main,_segMap+24
  1299  000B52  C244  F0EF         	movff	??_main+1,_segMap+25
  1300  000B56  0100               	movlb	0	; () banked
  1301  000B58  6BF0               	clrf	(_segMap+26)& (0+255),b
  1302  000B5A  6BF1               	clrf	(_segMap+27)& (0+255),b
  1303                           
  1304                           ;main.c: 178: break;
  1305  000B5C  D749               	goto	l78
  1306  000B5E                     l4135:
  1307                           
  1308                           ;main.c: 180: segMap[7] = fontList[RxData];
  1309  000B5E  0102               	movlb	2	; () banked
  1310  000B60  514A               	movf	main@RxData& (0+255),w,b
  1311  000B62  0D02               	mullw	2
  1312  000B64  0E00               	movlw	low _fontList
  1313  000B66  24F3               	addwf	prodl,w,c
  1314  000B68  6ED9               	movwf	fsr2l,c
  1315  000B6A  0E01               	movlw	high _fontList
  1316  000B6C  20F4               	addwfc	prodh,w,c
  1317  000B6E  6EDA               	movwf	fsr2h,c
  1318  000B70  CFDE F243          	movff	postinc2,??_main
  1319  000B74  CFDD F244          	movff	postdec2,??_main+1
  1320  000B78  C243  F0F2         	movff	??_main,_segMap+28
  1321  000B7C  C244  F0F3         	movff	??_main+1,_segMap+29
  1322  000B80  0100               	movlb	0	; () banked
  1323  000B82  6BF4               	clrf	(_segMap+30)& (0+255),b
  1324  000B84  6BF5               	clrf	(_segMap+31)& (0+255),b
  1325                           
  1326                           ;main.c: 181: break;
  1327  000B86  D734               	goto	l78
  1328  000B88                     l4137:
  1329                           
  1330                           ;main.c: 183: segMap[8] = fontList[RxData];
  1331  000B88  0102               	movlb	2	; () banked
  1332  000B8A  514A               	movf	main@RxData& (0+255),w,b
  1333  000B8C  0D02               	mullw	2
  1334  000B8E  0E00               	movlw	low _fontList
  1335  000B90  24F3               	addwf	prodl,w,c
  1336  000B92  6ED9               	movwf	fsr2l,c
  1337  000B94  0E01               	movlw	high _fontList
  1338  000B96  20F4               	addwfc	prodh,w,c
  1339  000B98  6EDA               	movwf	fsr2h,c
  1340  000B9A  CFDE F243          	movff	postinc2,??_main
  1341  000B9E  CFDD F244          	movff	postdec2,??_main+1
  1342  000BA2  C243  F0F6         	movff	??_main,_segMap+32
  1343  000BA6  C244  F0F7         	movff	??_main+1,_segMap+33
  1344  000BAA  D004               	goto	L1
  1345  000BAC                     l4139:
  1346                           
  1347                           ;main.c: 187: segMap[8] = fontList[0x45];
  1348  000BAC  C18A  F0F6         	movff	_fontList+138,_segMap+32
  1349  000BB0  C18B  F0F7         	movff	_fontList+139,_segMap+33
  1350  000BB4                     L1:
  1351  000BB4  0100               	movlb	0	; () banked
  1352  000BB6  6BF8               	clrf	(_segMap+34)& (0+255),b
  1353  000BB8  6BF9               	clrf	(_segMap+35)& (0+255),b
  1354                           
  1355                           ; BSR set to: 0
  1356                           ;main.c: 189: }
  1357                           
  1358                           ;main.c: 188: break;
  1359  000BBA  D71A               	goto	l78
  1360  000BBC                     l4143:
  1361  000BBC  C247  F243         	movff	main@digitSelector,??_main
  1362  000BC0  C248  F244         	movff	main@digitSelector+1,??_main+1
  1363                           
  1364                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1365                           ; Switch size 1, requested type "space"
  1366                           ; Number of cases is 1, Range of values is 0 to 0
  1367                           ; switch strategies available:
  1368                           ; Name         Instructions Cycles
  1369                           ; simple_byte            4     3 (average)
  1370                           ;	Chosen strategy is simple_byte
  1371  000BC4  0102               	movlb	2	; () banked
  1372  000BC6  5144               	movf	(??_main+1)& (0+255),w,b
  1373  000BC8  0A00               	xorlw	0	; case 0
  1374  000BCA  A4D8               	btfss	status,2,c
  1375  000BCC  D7EF               	goto	l4139
  1376                           
  1377                           ; BSR set to: 2
  1378                           ; Switch size 1, requested type "space"
  1379                           ; Number of cases is 9, Range of values is 7 to 15
  1380                           ; switch strategies available:
  1381                           ; Name         Instructions Cycles
  1382                           ; simple_byte           28    15 (average)
  1383                           ;	Chosen strategy is simple_byte
  1384  000BCE  0102               	movlb	2	; () banked
  1385  000BD0  5143               	movf	??_main& (0+255),w,b
  1386  000BD2  0A07               	xorlw	7	; case 7
  1387  000BD4  B4D8               	btfsc	status,2,c
  1388  000BD6  D730               	goto	l4121
  1389  000BD8  0A0F               	xorlw	15	; case 8
  1390  000BDA  B4D8               	btfsc	status,2,c
  1391  000BDC  D742               	goto	l4123
  1392  000BDE  0A01               	xorlw	1	; case 9
  1393  000BE0  B4D8               	btfsc	status,2,c
  1394  000BE2  D754               	goto	l4125
  1395  000BE4  0A03               	xorlw	3	; case 10
  1396  000BE6  B4D8               	btfsc	status,2,c
  1397  000BE8  D766               	goto	l4127
  1398  000BEA  0A01               	xorlw	1	; case 11
  1399  000BEC  B4D8               	btfsc	status,2,c
  1400  000BEE  D778               	goto	l4129
  1401  000BF0  0A07               	xorlw	7	; case 12
  1402  000BF2  B4D8               	btfsc	status,2,c
  1403  000BF4  D78A               	goto	l4131
  1404  000BF6  0A01               	xorlw	1	; case 13
  1405  000BF8  B4D8               	btfsc	status,2,c
  1406  000BFA  D79C               	goto	l4133
  1407  000BFC  0A03               	xorlw	3	; case 14
  1408  000BFE  B4D8               	btfsc	status,2,c
  1409  000C00  D7AE               	goto	l4135
  1410  000C02  0A01               	xorlw	1	; case 15
  1411  000C04  B4D8               	btfsc	status,2,c
  1412  000C06  D7C0               	goto	l4137
  1413  000C08  D7D1               	goto	l4139
  1414  000C0A                     __end_of_main:
  1415                           	opt stack 0
  1416                           tblptru	equ	0xFF8
  1417                           tblptrh	equ	0xFF7
  1418                           tblptrl	equ	0xFF6
  1419                           tablat	equ	0xFF5
  1420                           prodh	equ	0xFF4
  1421                           prodl	equ	0xFF3
  1422                           intcon	equ	0xFF2
  1423                           postinc0	equ	0xFEE
  1424                           wreg	equ	0xFE8
  1425                           postdec1	equ	0xFE5
  1426                           fsr1h	equ	0xFE2
  1427                           fsr1l	equ	0xFE1
  1428                           postinc2	equ	0xFDE
  1429                           postdec2	equ	0xFDD
  1430                           fsr2h	equ	0xFDA
  1431                           fsr2l	equ	0xFD9
  1432                           status	equ	0xFD8
  1433                           
  1434 ;; *************** function _USBDeviceInit *****************
  1435 ;; Defined at:
  1436 ;;		line 277 in file "/home/thotgamma/Git/htlabnet/16_Segment_9_Digit_Display_Controller_Ver1.0/Firmware/hexSegControlle
      +r.X/usb/usb_device.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;  i               1    2[BANK2 ] unsigned char 
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1450 ;;      Params:         0       0       0       0       0       0       0       0       0
  1451 ;;      Locals:         0       0       0       1       0       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1453 ;;      Totals:         0       0       0       1       0       0       0       0       0
  1454 ;;Total ram usage:        1 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    3
  1457 ;; This function calls:
  1458 ;;		_memset
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;;		_USBDeviceTasks
  1462 ;; This function uses a non-reentrant model
  1463 ;;
  1464                           
  1465                           	psect	text1
  1466  000C0A                     __ptext1:
  1467                           	opt stack 0
  1468  000C0A                     _USBDeviceInit:
  1469                           	opt stack 27
  1470                           
  1471                           ;usb_device.c: 279: uint8_t i;
  1472                           ;usb_device.c: 281: {PIE2bits.USBIE = 0;};
  1473                           
  1474                           ; BSR set to: 2
  1475                           ;incstack = 0
  1476  000C0A  9AA0               	bcf	4000,5,c	;volatile
  1477                           
  1478                           ;usb_device.c: 285: ;
  1479                           ;usb_device.c: 288: {UEIR = 0;};
  1480  000C0C  0E00               	movlw	0
  1481  000C0E  6E6A               	movwf	3946,c	;volatile
  1482                           
  1483                           ;usb_device.c: 291: {UIR = 0;};
  1484  000C10  0E00               	movlw	0
  1485  000C12  6E68               	movwf	3944,c	;volatile
  1486                           
  1487                           ;usb_device.c: 294: UEP0 = 0;
  1488  000C14  0E00               	movlw	0
  1489  000C16  6E70               	movwf	3952,c	;volatile
  1490                           
  1491                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
  1492  000C18  0E71               	movlw	113
  1493  000C1A  0100               	movlb	0	; () banked
  1494  000C1C  6FFA               	movwf	memset@p1& (0+255),b
  1495  000C1E  0E0F               	movlw	15
  1496  000C20  0100               	movlb	0	; () banked
  1497  000C22  6FFB               	movwf	(memset@p1+1)& (0+255),b
  1498  000C24  0E00               	movlw	0
  1499  000C26  0100               	movlb	0	; () banked
  1500  000C28  6FFD               	movwf	(memset@c+1)& (0+255),b
  1501  000C2A  0E00               	movlw	0
  1502  000C2C  6FFC               	movwf	memset@c& (0+255),b
  1503  000C2E  0E00               	movlw	0
  1504  000C30  0100               	movlb	0	; () banked
  1505  000C32  6FFF               	movwf	(memset@n+1)& (0+255),b
  1506  000C34  0E02               	movlw	2
  1507  000C36  6FFE               	movwf	memset@n& (0+255),b
  1508  000C38  EC7B  F008         	call	_memset	;wreg free
  1509                           
  1510                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
  1511  000C3C  0E16               	movlw	22
  1512  000C3E  6E6F               	movwf	3951,c	;volatile
  1513  000C40  0E9F               	movlw	159
  1514  000C42  6E6B               	movwf	3947,c	;volatile
  1515  000C44  0E7B               	movlw	123
  1516  000C46  6E69               	movwf	3945,c	;volatile
  1517                           
  1518                           ;usb_device.c: 301: ;
  1519                           ;usb_device.c: 304: ;
  1520                           ;usb_device.c: 307: for(i = 0; i < (sizeof(BDT)/sizeof(BDT_ENTRY)); i++)
  1521  000C48  0E00               	movlw	0
  1522  000C4A  0102               	movlb	2	; () banked
  1523  000C4C  6F42               	movwf	USBDeviceInit@i& (0+255),b
  1524  000C4E                     l3955:
  1525                           
  1526                           ; BSR set to: 2
  1527  000C4E  0E0B               	movlw	11
  1528  000C50  0102               	movlb	2	; () banked
  1529  000C52  6542               	cpfsgt	USBDeviceInit@i& (0+255),b
  1530  000C54  D001               	goto	l3959
  1531  000C56  D010               	goto	l244
  1532  000C58                     l3959:
  1533                           
  1534                           ; BSR set to: 2
  1535                           ;usb_device.c: 308: {
  1536                           ;usb_device.c: 309: BDT[i].Val = 0x00;
  1537  000C58  0102               	movlb	2	; () banked
  1538  000C5A  5142               	movf	USBDeviceInit@i& (0+255),w,b
  1539  000C5C  0D04               	mullw	4
  1540  000C5E  0E00               	movlw	0
  1541  000C60  24F3               	addwf	prodl,w,c
  1542  000C62  6ED9               	movwf	fsr2l,c
  1543  000C64  0E04               	movlw	4
  1544  000C66  20F4               	addwfc	prodh,w,c
  1545  000C68  6EDA               	movwf	fsr2h,c
  1546  000C6A  6ADE               	clrf	postinc2,c
  1547  000C6C  6ADE               	clrf	postinc2,c
  1548  000C6E  6ADE               	clrf	postinc2,c
  1549  000C70  6ADD               	clrf	postdec2,c
  1550                           
  1551                           ; BSR set to: 2
  1552  000C72  0102               	movlb	2	; () banked
  1553  000C74  2B42               	incf	USBDeviceInit@i& (0+255),f,b
  1554  000C76  D7EB               	goto	l3955
  1555  000C78                     l244:
  1556                           
  1557                           ; BSR set to: 2
  1558                           ;usb_device.c: 310: }
  1559                           ;usb_device.c: 313: UCONbits.PPBRST = 1;
  1560  000C78  8C6D               	bsf	3949,6,c	;volatile
  1561                           
  1562                           ; BSR set to: 2
  1563                           ;usb_device.c: 316: UADDR = 0x00;
  1564  000C7A  0E00               	movlw	0
  1565  000C7C  6E6E               	movwf	3950,c	;volatile
  1566                           
  1567                           ; BSR set to: 2
  1568                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
  1569  000C7E  986D               	bcf	3949,4,c	;volatile
  1570                           
  1571                           ; BSR set to: 2
  1572                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
  1573  000C80  9C6D               	bcf	3949,6,c	;volatile
  1574  000C82                     l3971:
  1575                           
  1576                           ;usb_device.c: 326: {
  1577                           ;usb_device.c: 327: (UIR &= 0xF7);
  1578  000C82  9668               	bcf	3944,3,c	;volatile
  1579                           
  1580                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
  1581  000C84  0E00               	movlw	0
  1582  000C86  6E0C               	movwf	_inPipes+3,c	;volatile
  1583                           
  1584                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
  1585  000C88  0E00               	movlw	0
  1586  000C8A  6E04               	movwf	_outPipes+3,c	;volatile
  1587                           
  1588                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
  1589  000C8C  0E00               	movlw	0
  1590  000C8E  6E06               	movwf	_outPipes+5,c	;volatile
  1591  000C90  0E00               	movlw	0
  1592  000C92  6E05               	movwf	_outPipes+4,c	;volatile
  1593                           
  1594                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
  1595  000C94  B668               	btfsc	3944,3,c	;volatile
  1596  000C96  D7F5               	goto	l3971
  1597                           
  1598                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
  1599  000C98  0E01               	movlw	1
  1600  000C9A  6E28               	movwf	_USBStatusStageEnabledFlag1,c	;volatile
  1601                           
  1602                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
  1603  000C9C  0E01               	movlw	1
  1604  000C9E  6E29               	movwf	_USBStatusStageEnabledFlag2,c	;volatile
  1605                           
  1606                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
  1607  000CA0  0E00               	movlw	0
  1608  000CA2  6E24               	movwf	_USBDeferINDataStagePackets,c	;volatile
  1609                           
  1610                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
  1611  000CA4  0E00               	movlw	0
  1612  000CA6  6E25               	movwf	_USBDeferOUTDataStagePackets,c	;volatile
  1613                           
  1614                           ;usb_device.c: 341: USBBusIsSuspended = 0;
  1615  000CA8  0E00               	movlw	0
  1616  000CAA  6E23               	movwf	_USBBusIsSuspended,c	;volatile
  1617                           
  1618                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
  1619  000CAC  0E00               	movlw	0
  1620  000CAE  0102               	movlb	2	; () banked
  1621  000CB0  6F42               	movwf	USBDeviceInit@i& (0+255),b
  1622  000CB2                     l3983:
  1623                           
  1624                           ; BSR set to: 2
  1625  000CB2  0E02               	movlw	2
  1626  000CB4  0102               	movlb	2	; () banked
  1627  000CB6  6542               	cpfsgt	USBDeviceInit@i& (0+255),b
  1628  000CB8  D001               	goto	l3987
  1629  000CBA  D033               	goto	l3993
  1630  000CBC                     l3987:
  1631                           
  1632                           ; BSR set to: 2
  1633                           ;usb_device.c: 346: {
  1634                           ;usb_device.c: 347: pBDTEntryIn[i] = 0u;
  1635  000CBC  0102               	movlb	2	; () banked
  1636  000CBE  5142               	movf	USBDeviceInit@i& (0+255),w,b
  1637  000CC0  0D02               	mullw	2
  1638  000CC2  0E0F               	movlw	low _pBDTEntryIn
  1639  000CC4  24F3               	addwf	prodl,w,c
  1640  000CC6  6ED9               	movwf	fsr2l,c
  1641  000CC8  0E00               	movlw	high _pBDTEntryIn
  1642  000CCA  20F4               	addwfc	prodh,w,c
  1643  000CCC  6EDA               	movwf	fsr2h,c
  1644  000CCE  0E00               	movlw	0
  1645  000CD0  6EDE               	movwf	postinc2,c
  1646  000CD2  0E00               	movlw	0
  1647  000CD4  6EDD               	movwf	postdec2,c
  1648                           
  1649                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
  1650  000CD6  0102               	movlb	2	; () banked
  1651  000CD8  5142               	movf	USBDeviceInit@i& (0+255),w,b
  1652  000CDA  0D02               	mullw	2
  1653  000CDC  0E60               	movlw	low _pBDTEntryOut
  1654  000CDE  24F3               	addwf	prodl,w,c
  1655  000CE0  6ED9               	movwf	fsr2l,c
  1656  000CE2  0E00               	movlw	high _pBDTEntryOut
  1657  000CE4  20F4               	addwfc	prodh,w,c
  1658  000CE6  6EDA               	movwf	fsr2h,c
  1659  000CE8  0E00               	movlw	0
  1660  000CEA  6EDE               	movwf	postinc2,c
  1661  000CEC  0E00               	movlw	0
  1662  000CEE  6EDD               	movwf	postdec2,c
  1663                           
  1664                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
  1665  000CF0  0102               	movlb	2	; () banked
  1666  000CF2  5142               	movf	USBDeviceInit@i& (0+255),w,b
  1667  000CF4  0D01               	mullw	1
  1668  000CF6  0E15               	movlw	low _ep_data_in
  1669  000CF8  24F3               	addwf	prodl,w,c
  1670  000CFA  6ED9               	movwf	fsr2l,c
  1671  000CFC  0E00               	movlw	high _ep_data_in
  1672  000CFE  20F4               	addwfc	prodh,w,c
  1673  000D00  6EDA               	movwf	fsr2h,c
  1674  000D02  0E00               	movlw	0
  1675  000D04  6EDF               	movwf	indf2,c
  1676                           
  1677                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
  1678  000D06  0102               	movlb	2	; () banked
  1679  000D08  5142               	movf	USBDeviceInit@i& (0+255),w,b
  1680  000D0A  0D01               	mullw	1
  1681  000D0C  0E18               	movlw	low _ep_data_out
  1682  000D0E  24F3               	addwf	prodl,w,c
  1683  000D10  6ED9               	movwf	fsr2l,c
  1684  000D12  0E00               	movlw	high _ep_data_out
  1685  000D14  20F4               	addwfc	prodh,w,c
  1686  000D16  6EDA               	movwf	fsr2h,c
  1687  000D18  0E00               	movlw	0
  1688  000D1A  6EDF               	movwf	indf2,c
  1689                           
  1690                           ; BSR set to: 2
  1691  000D1C  0102               	movlb	2	; () banked
  1692  000D1E  2B42               	incf	USBDeviceInit@i& (0+255),f,b
  1693  000D20  D7C8               	goto	l3983
  1694  000D22                     l3993:
  1695                           
  1696                           ; BSR set to: 2
  1697                           ;usb_device.c: 351: }
  1698                           ;usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
  1699  000D22  0E08               	movlw	8
  1700  000D24  6E0F               	movwf	_pBDTEntryIn,c
  1701  000D26  0E04               	movlw	4
  1702  000D28  6E10               	movwf	_pBDTEntryIn+1,c
  1703                           
  1704                           ; BSR set to: 2
  1705                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
  1706  000D2A  0E16               	movlw	22
  1707  000D2C  6E70               	movwf	3952,c	;volatile
  1708                           
  1709                           ; BSR set to: 2
  1710                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
  1711  000D2E  0E04               	movlw	4
  1712  000D30  0104               	movlb	4	; () banked
  1713  000D32  6F03               	movwf	3,b	;volatile
  1714  000D34  0E30               	movlw	48
  1715  000D36  6F02               	movwf	2,b	;volatile
  1716                           
  1717                           ; BSR set to: 4
  1718                           ;usb_device.c: 359: BDT[0].CNT = 8;
  1719  000D38  0E08               	movlw	8
  1720  000D3A  0104               	movlb	4	; () banked
  1721  000D3C  6F01               	movwf	1,b	;volatile
  1722                           
  1723                           ; BSR set to: 4
  1724                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
  1725  000D3E  0E04               	movlw	4
  1726  000D40  0104               	movlb	4	; () banked
  1727  000D42  6F00               	movwf	0,b	;volatile
  1728                           
  1729                           ; BSR set to: 4
  1730                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
  1731  000D44  0104               	movlb	4	; () banked
  1732  000D46  8F00               	bsf	0,7,b	;volatile
  1733                           
  1734                           ; BSR set to: 4
  1735                           ;usb_device.c: 364: USBActiveConfiguration = 0;
  1736  000D48  0E00               	movlw	0
  1737  000D4A  6E33               	movwf	_USBActiveConfiguration,c	;volatile
  1738                           
  1739                           ; BSR set to: 4
  1740                           ;usb_device.c: 366: USB1msTickCount = 0;
  1741  000D4C  0E00               	movlw	0
  1742  000D4E  0100               	movlb	0	; () banked
  1743  000D50  6F6A               	movwf	_USB1msTickCount& (0+255),b	;volatile
  1744  000D52  0E00               	movlw	0
  1745  000D54  6F6B               	movwf	(_USB1msTickCount+1)& (0+255),b	;volatile
  1746  000D56  0E00               	movlw	0
  1747  000D58  6F6C               	movwf	(_USB1msTickCount+2)& (0+255),b	;volatile
  1748  000D5A  0E00               	movlw	0
  1749  000D5C  6F6D               	movwf	(_USB1msTickCount+3)& (0+255),b	;volatile
  1750                           
  1751                           ; BSR set to: 0
  1752                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
  1753  000D5E  0E00               	movlw	0
  1754  000D60  6E2B               	movwf	_USBTicksSinceSuspendEnd,c	;volatile
  1755                           
  1756                           ; BSR set to: 0
  1757                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
  1758  000D62  0E00               	movlw	0
  1759  000D64  6E27               	movwf	_USBDeviceState,c	;volatile
  1760                           
  1761                           ; BSR set to: 0
  1762  000D66  0012               	return		;funcret
  1763  000D68                     __end_of_USBDeviceInit:
  1764                           	opt stack 0
  1765                           tblptru	equ	0xFF8
  1766                           tblptrh	equ	0xFF7
  1767                           tblptrl	equ	0xFF6
  1768                           tablat	equ	0xFF5
  1769                           prodh	equ	0xFF4
  1770                           prodl	equ	0xFF3
  1771                           intcon	equ	0xFF2
  1772                           postinc0	equ	0xFEE
  1773                           wreg	equ	0xFE8
  1774                           postdec1	equ	0xFE5
  1775                           fsr1h	equ	0xFE2
  1776                           fsr1l	equ	0xFE1
  1777                           indf2	equ	0xFDF
  1778                           postinc2	equ	0xFDE
  1779                           postdec2	equ	0xFDD
  1780                           fsr2h	equ	0xFDA
  1781                           fsr2l	equ	0xFD9
  1782                           status	equ	0xFD8
  1783                           
  1784 ;; *************** function _memset *****************
  1785 ;; Defined at:
  1786 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/memset.c"
  1787 ;; Parameters:    Size  Location     Type
  1788 ;;  p1              2    0[BANK0 ] PTR void 
  1789 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1790 ;;  c               2    2[BANK0 ] int 
  1791 ;;  n               2    4[BANK0 ] unsigned int 
  1792 ;; Auto vars:     Size  Location     Type
  1793 ;;  p               2    0[BANK2 ] PTR unsigned char 
  1794 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
  1795 ;; Return value:  Size  Location     Type
  1796 ;;                  2    0[BANK0 ] PTR void 
  1797 ;; Registers used:
  1798 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1799 ;; Tracked objects:
  1800 ;;		On entry : 0/0
  1801 ;;		On exit  : 0/0
  1802 ;;		Unchanged: 0/0
  1803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1804 ;;      Params:         0       6       0       0       0       0       0       0       0
  1805 ;;      Locals:         0       0       0       2       0       0       0       0       0
  1806 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1807 ;;      Totals:         0       6       0       2       0       0       0       0       0
  1808 ;;Total ram usage:        8 bytes
  1809 ;; Hardware stack levels used:    1
  1810 ;; Hardware stack levels required when called:    2
  1811 ;; This function calls:
  1812 ;;		Nothing
  1813 ;; This function is called by:
  1814 ;;		_USBDeviceInit
  1815 ;;		_USBStdSetCfgHandler
  1816 ;; This function uses a non-reentrant model
  1817 ;;
  1818                           
  1819                           	psect	text2
  1820  0010F6                     __ptext2:
  1821                           	opt stack 0
  1822  0010F6                     _memset:
  1823                           	opt stack 27
  1824                           
  1825                           ; BSR set to: 0
  1826                           ;incstack = 0
  1827  0010F6  C0FA  F240         	movff	memset@p1,memset@p
  1828  0010FA  C0FB  F241         	movff	memset@p1+1,memset@p+1
  1829  0010FE  D009               	goto	l3925
  1830  001100                     l3921:
  1831  001100  C240  FFD9         	movff	memset@p,fsr2l
  1832  001104  C241  FFDA         	movff	memset@p+1,fsr2h
  1833  001108  C0FC  FFDF         	movff	memset@c,indf2
  1834  00110C  0102               	movlb	2	; () banked
  1835  00110E  4B40               	infsnz	memset@p& (0+255),f,b
  1836  001110  2B41               	incf	(memset@p+1)& (0+255),f,b
  1837  001112                     l3925:
  1838  001112  0100               	movlb	0	; () banked
  1839  001114  07FE               	decf	memset@n& (0+255),f,b
  1840  001116  A0D8               	btfss	status,0,c
  1841  001118  07FF               	decf	(memset@n+1)& (0+255),f,b
  1842  00111A  0100               	movlb	0	; () banked
  1843  00111C  29FE               	incf	memset@n& (0+255),w,b
  1844  00111E  E1F0               	bnz	l3921
  1845  001120  0100               	movlb	0	; () banked
  1846  001122  29FF               	incf	(memset@n+1)& (0+255),w,b
  1847  001124  B4D8               	btfsc	status,2,c
  1848  001126  0012               	return	
  1849  001128  D7EB               	goto	l3921
  1850  00112A                     __end_of_memset:
  1851                           	opt stack 0
  1852                           tblptru	equ	0xFF8
  1853                           tblptrh	equ	0xFF7
  1854                           tblptrl	equ	0xFF6
  1855                           tablat	equ	0xFF5
  1856                           prodh	equ	0xFF4
  1857                           prodl	equ	0xFF3
  1858                           intcon	equ	0xFF2
  1859                           postinc0	equ	0xFEE
  1860                           wreg	equ	0xFE8
  1861                           postdec1	equ	0xFE5
  1862                           fsr1h	equ	0xFE2
  1863                           fsr1l	equ	0xFE1
  1864                           indf2	equ	0xFDF
  1865                           postinc2	equ	0xFDE
  1866                           postdec2	equ	0xFDD
  1867                           fsr2h	equ	0xFDA
  1868                           fsr2l	equ	0xFD9
  1869                           status	equ	0xFD8
  1870                           
  1871 ;; *************** function _USBDeviceAttach *****************
  1872 ;; Defined at:
  1873 ;;		line 1352 in file "/home/thotgamma/Git/htlabnet/16_Segment_9_Digit_Display_Controller_Ver1.0/Firmware/hexSegControll
      +er.X/usb/usb_device.c"
  1874 ;; Parameters:    Size  Location     Type
  1875 ;;		None
  1876 ;; Auto vars:     Size  Location     Type
  1877 ;;		None
  1878 ;; Return value:  Size  Location     Type
  1879 ;;                  1    wreg      void 
  1880 ;; Registers used:
  1881 ;;		wreg, status,2
  1882 ;; Tracked objects:
  1883 ;;		On entry : 0/0
  1884 ;;		On exit  : 0/0
  1885 ;;		Unchanged: 0/0
  1886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1887 ;;      Params:         0       0       0       0       0       0       0       0       0
  1888 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1889 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1890 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1891 ;;Total ram usage:        0 bytes
  1892 ;; Hardware stack levels used:    1
  1893 ;; Hardware stack levels required when called:    2
  1894 ;; This function calls:
  1895 ;;		Nothing
  1896 ;; This function is called by:
  1897 ;;		_main
  1898 ;; This function uses a non-reentrant model
  1899 ;;
  1900                           
  1901                           	psect	text3
  1902  00112A                     __ptext3:
  1903                           	opt stack 0
  1904  00112A                     _USBDeviceAttach:
  1905                           	opt stack 28
  1906                           
  1907                           ;usb_device.c: 1356: {
  1908                           ;usb_device.c: 1357: if(1 == 1)
  1909                           
  1910                           ; BSR set to: 0
  1911                           ;incstack = 0
  1912  00112A  5027               	movf	_USBDeviceState,w,c	;volatile
  1913  00112C  A4D8               	btfss	status,2,c
  1914  00112E  0012               	return	
  1915                           
  1916                           ;usb_device.c: 1358: {
  1917                           ;usb_device.c: 1360: UCON = 0;
  1918  001130  0E00               	movlw	0
  1919  001132  6E6D               	movwf	3949,c	;volatile
  1920                           
  1921                           ;usb_device.c: 1363: UIE = 0;
  1922  001134  0E00               	movlw	0
  1923  001136  6E69               	movwf	3945,c	;volatile
  1924                           
  1925                           ;usb_device.c: 1367: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 
      +                          | 0x02; };
  1926  001138  0E16               	movlw	22
  1927  00113A  6E6F               	movwf	3951,c	;volatile
  1928  00113C  0E9F               	movlw	159
  1929  00113E  6E6B               	movwf	3947,c	;volatile
  1930  001140  0E7B               	movlw	123
  1931  001142  6E69               	movwf	3945,c	;volatile
  1932                           
  1933                           ;usb_device.c: 1369: {RCONbits.IPEN = 1;IPR2bits.USBIP = 1;PIE2bits.USBIE = 1;INTCONbits
      +                          .GIEH = 1;};
  1934  001144  8ED0               	bsf	4048,7,c	;volatile
  1935  001146  8AA2               	bsf	4002,5,c	;volatile
  1936  001148  8AA0               	bsf	4000,5,c	;volatile
  1937  00114A  8EF2               	bsf	intcon,7,c	;volatile
  1938                           
  1939                           ;usb_device.c: 1372: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
  1940  00114C  D001               	goto	l304
  1941  00114E                     l305:
  1942  00114E  866D               	bsf	3949,3,c	;volatile
  1943  001150                     l304:
  1944  001150  A66D               	btfss	3949,3,c	;volatile
  1945  001152  D7FD               	goto	l305
  1946                           
  1947                           ;usb_device.c: 1375: USBDeviceState = ATTACHED_STATE;
  1948  001154  0E01               	movlw	1
  1949  001156  6E27               	movwf	_USBDeviceState,c	;volatile
  1950  001158  0012               	return	
  1951  00115A                     __end_of_USBDeviceAttach:
  1952                           	opt stack 0
  1953                           tblptru	equ	0xFF8
  1954                           tblptrh	equ	0xFF7
  1955                           tblptrl	equ	0xFF6
  1956                           tablat	equ	0xFF5
  1957                           prodh	equ	0xFF4
  1958                           prodl	equ	0xFF3
  1959                           intcon	equ	0xFF2
  1960                           postinc0	equ	0xFEE
  1961                           wreg	equ	0xFE8
  1962                           postdec1	equ	0xFE5
  1963                           fsr1h	equ	0xFE2
  1964                           fsr1l	equ	0xFE1
  1965                           indf2	equ	0xFDF
  1966                           postinc2	equ	0xFDE
  1967                           postdec2	equ	0xFDD
  1968                           fsr2h	equ	0xFDA
  1969                           fsr2l	equ	0xFD9
  1970                           status	equ	0xFD8
  1971                           
  1972 ;; *************** function _USART_putcUSART *****************
  1973 ;; Defined at:
  1974 ;;		line 78 in file "/home/thotgamma/Git/htlabnet/16_Segment_9_Digit_Display_Controller_Ver1.0/Firmware/hexSegController
      +.X/usart.c"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  c               1    wreg     unsigned char 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  c               1    0[BANK0 ] unsigned char 
  1979 ;; Return value:  Size  Location     Type
  1980 ;;                  1    wreg      void 
  1981 ;; Registers used:
  1982 ;;		wreg
  1983 ;; Tracked objects:
  1984 ;;		On entry : 0/0
  1985 ;;		On exit  : 0/0
  1986 ;;		Unchanged: 0/0
  1987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1988 ;;      Params:         0       0       0       0       0       0       0       0       0
  1989 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1990 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1991 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1992 ;;Total ram usage:        1 bytes
  1993 ;; Hardware stack levels used:    1
  1994 ;; Hardware stack levels required when called:    2
  1995 ;; This function calls:
  1996 ;;		Nothing
  1997 ;; This function is called by:
  1998 ;;		_main
  1999 ;; This function uses a non-reentrant model
  2000 ;;
  2001                           
  2002                           	psect	text4
  2003  0011BE                     __ptext4:
  2004                           	opt stack 0
  2005  0011BE                     _USART_putcUSART:
  2006                           	opt stack 28
  2007                           
  2008                           ;incstack = 0
  2009                           ;USART_putcUSART@c stored from wreg
  2010  0011BE  0100               	movlb	0	; () banked
  2011  0011C0  6FFA               	movwf	USART_putcUSART@c& (0+255),b
  2012                           
  2013                           ;usart.c: 80: TXREG = c;
  2014  0011C2  C0FA  FFAD         	movff	USART_putcUSART@c,4013	;volatile
  2015  0011C6  0012               	return		;funcret
  2016  0011C8                     __end_of_USART_putcUSART:
  2017                           	opt stack 0
  2018                           tblptru	equ	0xFF8
  2019                           tblptrh	equ	0xFF7
  2020                           tblptrl	equ	0xFF6
  2021                           tablat	equ	0xFF5
  2022                           prodh	equ	0xFF4
  2023                           prodl	equ	0xFF3
  2024                           intcon	equ	0xFF2
  2025                           postinc0	equ	0xFEE
  2026                           wreg	equ	0xFE8
  2027                           postdec1	equ	0xFE5
  2028                           fsr1h	equ	0xFE2
  2029                           fsr1l	equ	0xFE1
  2030                           indf2	equ	0xFDF
  2031                           postinc2	equ	0xFDE
  2032                           postdec2	equ	0xFDD
  2033                           fsr2h	equ	0xFDA
  2034                           fsr2l	equ	0xFD9
  2035                           status	equ	0xFD8
  2036                           
  2037 ;; *************** function _USART_getcUSART *****************
  2038 ;; Defined at:
  2039 ;;		line 158 in file "/home/thotgamma/Git/htlabnet/16_Segment_9_Digit_Display_Controller_Ver1.0/Firmware/hexSegControlle
      +r.X/usart.c"
  2040 ;; Parameters:    Size  Location     Type
  2041 ;;		None
  2042 ;; Auto vars:     Size  Location     Type
  2043 ;;  c               1    0[BANK0 ] unsigned char 
  2044 ;; Return value:  Size  Location     Type
  2045 ;;                  1    wreg      unsigned char 
  2046 ;; Registers used:
  2047 ;;		wreg, status,2
  2048 ;; Tracked objects:
  2049 ;;		On entry : 0/0
  2050 ;;		On exit  : 0/0
  2051 ;;		Unchanged: 0/0
  2052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2053 ;;      Params:         0       0       0       0       0       0       0       0       0
  2054 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2055 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2056 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2057 ;;Total ram usage:        1 bytes
  2058 ;; Hardware stack levels used:    1
  2059 ;; Hardware stack levels required when called:    2
  2060 ;; This function calls:
  2061 ;;		Nothing
  2062 ;; This function is called by:
  2063 ;;		_main
  2064 ;; This function uses a non-reentrant model
  2065 ;;
  2066                           
  2067                           	psect	text5
  2068  0011A6                     __ptext5:
  2069                           	opt stack 0
  2070  0011A6                     _USART_getcUSART:
  2071                           	opt stack 28
  2072                           
  2073                           ;usart.c: 160: char c;
  2074                           ;usart.c: 162: if (RCSTAbits.OERR)
  2075                           
  2076                           ;incstack = 0
  2077  0011A6  A2AB               	btfss	4011,1,c	;volatile
  2078  0011A8  D005               	goto	l707
  2079                           
  2080                           ;usart.c: 163: {
  2081                           ;usart.c: 164: RCSTAbits.CREN = 0;
  2082  0011AA  98AB               	bcf	4011,4,c	;volatile
  2083                           
  2084                           ;usart.c: 165: c = RCREG;
  2085  0011AC  CFAE F0FA          	movff	4014,USART_getcUSART@c	;volatile
  2086                           
  2087                           ;usart.c: 166: RCSTAbits.CREN = 1;
  2088  0011B0  88AB               	bsf	4011,4,c	;volatile
  2089                           
  2090                           ;usart.c: 167: }
  2091  0011B2  D002               	goto	l4031
  2092  0011B4                     l707:
  2093                           
  2094                           ;usart.c: 168: else
  2095                           ;usart.c: 169: {
  2096                           ;usart.c: 170: c = RCREG;
  2097  0011B4  CFAE F0FA          	movff	4014,USART_getcUSART@c	;volatile
  2098  0011B8                     l4031:
  2099                           
  2100                           ;usart.c: 171: }
  2101                           ;usart.c: 176: return c;
  2102  0011B8  0100               	movlb	0	; () banked
  2103  0011BA  51FA               	movf	USART_getcUSART@c& (0+255),w,b
  2104  0011BC  0012               	return	
  2105  0011BE                     __end_of_USART_getcUSART:
  2106                           	opt stack 0
  2107                           tblptru	equ	0xFF8
  2108                           tblptrh	equ	0xFF7
  2109                           tblptrl	equ	0xFF6
  2110                           tablat	equ	0xFF5
  2111                           prodh	equ	0xFF4
  2112                           prodl	equ	0xFF3
  2113                           intcon	equ	0xFF2
  2114                           postinc0	equ	0xFEE
  2115                           wreg	equ	0xFE8
  2116                           postdec1	equ	0xFE5
  2117                           fsr1h	equ	0xFE2
  2118                           fsr1l	equ	0xFE1
  2119                           indf2	equ	0xFDF
  2120                           postinc2	equ	0xFDE
  2121                           postdec2	equ	0xFDD
  2122                           fsr2h	equ	0xFDA
  2123                           fsr2l	equ	0xFD9
  2124                           status	equ	0xFD8
  2125                           
  2126 ;; *************** function _SYSTEM_Initialize *****************
  2127 ;; Defined at:
  2128 ;;		line 61 in file "/home/thotgamma/Git/htlabnet/16_Segment_9_Digit_Display_Controller_Ver1.0/Firmware/hexSegController
      +.X/system.c"
  2129 ;; Parameters:    Size  Location     Type
  2130 ;;  state           1    wreg     enum E4274
  2131 ;; Auto vars:     Size  Location     Type
  2132 ;;  state           1    0[BANK0 ] enum E4274
  2133 ;;  pll_startup_    2    3[BANK0 ] unsigned int 
  2134 ;;  pll_startup_    2    1[BANK0 ] unsigned int 
  2135 ;; Return value:  Size  Location     Type
  2136 ;;                  1    wreg      void 
  2137 ;; Registers used:
  2138 ;;		wreg, status,2, status,0
  2139 ;; Tracked objects:
  2140 ;;		On entry : 0/0
  2141 ;;		On exit  : 0/0
  2142 ;;		Unchanged: 0/0
  2143 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2144 ;;      Params:         0       0       0       0       0       0       0       0       0
  2145 ;;      Locals:         0       5       0       0       0       0       0       0       0
  2146 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2147 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2148 ;;Total ram usage:        5 bytes
  2149 ;; Hardware stack levels used:    1
  2150 ;; Hardware stack levels required when called:    2
  2151 ;; This function calls:
  2152 ;;		Nothing
  2153 ;; This function is called by:
  2154 ;;		_main
  2155 ;; This function uses a non-reentrant model
  2156 ;;
  2157                           
  2158                           	psect	text6
  2159  001058                     __ptext6:
  2160                           	opt stack 0
  2161  001058                     _SYSTEM_Initialize:
  2162                           	opt stack 28
  2163                           
  2164                           ; BSR set to: 0
  2165                           ;incstack = 0
  2166                           ;SYSTEM_Initialize@state stored from wreg
  2167  001058  0100               	movlb	0	; () banked
  2168  00105A  6FFA               	movwf	SYSTEM_Initialize@state& (0+255),b
  2169                           
  2170                           ;system.c: 63: switch(state)
  2171  00105C  D024               	goto	l3939
  2172  00105E                     l3929:
  2173                           
  2174                           ;system.c: 72: {
  2175                           ;system.c: 73: unsigned int pll_startup_counter = 600;
  2176  00105E  0E02               	movlw	2
  2177  001060  0100               	movlb	0	; () banked
  2178  001062  6FFC               	movwf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),b
  2179  001064  0E58               	movlw	88
  2180  001066  6FFB               	movwf	SYSTEM_Initialize@pll_startup_counter& (0+255),b
  2181  001068                     l3931:
  2182                           
  2183                           ; BSR set to: 0
  2184  001068  0100               	movlb	0	; () banked
  2185  00106A  07FB               	decf	SYSTEM_Initialize@pll_startup_counter& (0+255),f,b
  2186  00106C  A0D8               	btfss	status,0,c
  2187  00106E  07FC               	decf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),f,b
  2188  001070  0100               	movlb	0	; () banked
  2189  001072  29FB               	incf	SYSTEM_Initialize@pll_startup_counter& (0+255),w,b
  2190  001074  E1F9               	bnz	l3931
  2191  001076  0100               	movlb	0	; () banked
  2192  001078  29FC               	incf	(SYSTEM_Initialize@pll_startup_counter+1)& (0+255),w,b
  2193  00107A  B4D8               	btfsc	status,2,c
  2194  00107C  0012               	return	
  2195  00107E  D7F4               	goto	l3931
  2196  001080                     l3933:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ;system.c: 95: OSCCON = 0x70;
  2200  001080  0E70               	movlw	112
  2201  001082  6ED3               	movwf	4051,c	;volatile
  2202                           
  2203                           ;system.c: 101: {
  2204                           ;system.c: 102: unsigned int pll_startup_counter = 800;
  2205  001084  0E03               	movlw	3
  2206  001086  0100               	movlb	0	; () banked
  2207  001088  6FFE               	movwf	(SYSTEM_Initialize@pll_startup_counter_2128+1)& (0+255),b
  2208  00108A  0E20               	movlw	32
  2209  00108C  6FFD               	movwf	SYSTEM_Initialize@pll_startup_counter_2128& (0+255),b
  2210  00108E                     l3935:
  2211                           
  2212                           ; BSR set to: 0
  2213  00108E  0100               	movlb	0	; () banked
  2214  001090  07FD               	decf	SYSTEM_Initialize@pll_startup_counter_2128& (0+255),f,b
  2215  001092  A0D8               	btfss	status,0,c
  2216  001094  07FE               	decf	(SYSTEM_Initialize@pll_startup_counter_2128+1)& (0+255),f,b
  2217  001096  0100               	movlb	0	; () banked
  2218  001098  29FD               	incf	SYSTEM_Initialize@pll_startup_counter_2128& (0+255),w,b
  2219  00109A  E1F9               	bnz	l3935
  2220  00109C  0100               	movlb	0	; () banked
  2221  00109E  29FE               	incf	(SYSTEM_Initialize@pll_startup_counter_2128+1)& (0+255),w,b
  2222  0010A0  B4D8               	btfsc	status,2,c
  2223  0010A2  0012               	return	
  2224  0010A4  D7F4               	goto	l3935
  2225  0010A6                     l3939:
  2226  0010A6  0100               	movlb	0	; () banked
  2227  0010A8  51FA               	movf	SYSTEM_Initialize@state& (0+255),w,b
  2228                           
  2229                           ; Switch size 1, requested type "space"
  2230                           ; Number of cases is 3, Range of values is 0 to 2
  2231                           ; switch strategies available:
  2232                           ; Name         Instructions Cycles
  2233                           ; simple_byte           10     6 (average)
  2234                           ;	Chosen strategy is simple_byte
  2235  0010AA  0A00               	xorlw	0	; case 0
  2236  0010AC  B4D8               	btfsc	status,2,c
  2237  0010AE  D7D7               	goto	l3929
  2238  0010B0  0A01               	xorlw	1	; case 1
  2239  0010B2  B4D8               	btfsc	status,2,c
  2240  0010B4  0012               	return	
  2241  0010B6  0A03               	xorlw	3	; case 2
  2242  0010B8  A4D8               	btfss	status,2,c
  2243  0010BA  0012               	return	
  2244  0010BC  D7E1               	goto	l3933
  2245  0010BE                     __end_of_SYSTEM_Initialize:
  2246                           	opt stack 0
  2247                           tblptru	equ	0xFF8
  2248                           tblptrh	equ	0xFF7
  2249                           tblptrl	equ	0xFF6
  2250                           tablat	equ	0xFF5
  2251                           prodh	equ	0xFF4
  2252                           prodl	equ	0xFF3
  2253                           intcon	equ	0xFF2
  2254                           postinc0	equ	0xFEE
  2255                           wreg	equ	0xFE8
  2256                           postdec1	equ	0xFE5
  2257                           fsr1h	equ	0xFE2
  2258                           fsr1l	equ	0xFE1
  2259                           indf2	equ	0xFDF
  2260                           postinc2	equ	0xFDE
  2261                           postdec2	equ	0xFDD
  2262                           fsr2h	equ	0xFDA
  2263                           fsr2l	equ	0xFD9
  2264                           status	equ	0xFD8
  2265                           
  2266 ;; *************** function _isr *****************
  2267 ;; Defined at:
  2268 ;;		line 195 in file "main.c"
  2269 ;; Parameters:    Size  Location     Type
  2270 ;;		None
  2271 ;; Auto vars:     Size  Location     Type
  2272 ;;		None
  2273 ;; Return value:  Size  Location     Type
  2274 ;;                  1    wreg      void 
  2275 ;; Registers used:
  2276 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2277 ;; Tracked objects:
  2278 ;;		On entry : 0/0
  2279 ;;		On exit  : 0/0
  2280 ;;		Unchanged: 0/0
  2281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2282 ;;      Params:         0       0       0       0       0       0       0       0       0
  2283 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2284 ;;      Temps:         17       0       0       0       0       0       0       0       0
  2285 ;;      Totals:        17       0       0       0       0       0       0       0       0
  2286 ;;Total ram usage:       17 bytes
  2287 ;; Hardware stack levels used:    1
  2288 ;; Hardware stack levels required when called:    1
  2289 ;; This function calls:
  2290 ;;		___awmod
  2291 ;;		_setDigitPin
  2292 ;;		_setSegPin
  2293 ;; This function is called by:
  2294 ;;		Interrupt level 2
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           	psect	intcode
  2299  000008                     __pintcode:
  2300                           	opt stack 0
  2301  000008                     _isr:
  2302                           	opt stack 27
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;incstack = 0
  2306  000008  824E               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
  2307  00000A  CFFA F040          	movff	pclath,??_isr+3
  2308  00000E  CFFB F041          	movff	pclatu,??_isr+4
  2309  000012  EDB4  F006         	call	int_func,f	;refresh shadow registers
  2310                           pclatu	equ	0xFFB
  2311                           pclath	equ	0xFFA
  2312                           tblptru	equ	0xFF8
  2313                           tblptrh	equ	0xFF7
  2314                           tblptrl	equ	0xFF6
  2315                           tablat	equ	0xFF5
  2316                           prodh	equ	0xFF4
  2317                           prodl	equ	0xFF3
  2318                           intcon	equ	0xFF2
  2319                           postinc0	equ	0xFEE
  2320                           wreg	equ	0xFE8
  2321                           postdec1	equ	0xFE5
  2322                           fsr1h	equ	0xFE2
  2323                           fsr1l	equ	0xFE1
  2324                           indf2	equ	0xFDF
  2325                           postinc2	equ	0xFDE
  2326                           postdec2	equ	0xFDD
  2327                           fsr2h	equ	0xFDA
  2328                           fsr2l	equ	0xFD9
  2329                           status	equ	0xFD8
  2330                           
  2331                           	psect	intcode_body
  2332  000D68                     __pintcode_body:
  2333                           	opt stack 27
  2334  000D68                     int_func:
  2335                           	opt stack 27
  2336  000D68  0006               	pop		; remove dummy address from shadow register refresh
  2337  000D6A  CFE9 F042          	movff	fsr0l,??_isr+5
  2338  000D6E  CFEA F043          	movff	fsr0h,??_isr+6
  2339  000D72  CFE1 F044          	movff	fsr1l,??_isr+7
  2340  000D76  CFE2 F045          	movff	fsr1h,??_isr+8
  2341  000D7A  CFD9 F046          	movff	fsr2l,??_isr+9
  2342  000D7E  CFDA F047          	movff	fsr2h,??_isr+10
  2343  000D82  CFF3 F048          	movff	prodl,??_isr+11
  2344  000D86  CFF4 F049          	movff	prodh,??_isr+12
  2345  000D8A  CFF6 F04A          	movff	tblptrl,??_isr+13
  2346  000D8E  CFF7 F04B          	movff	tblptrh,??_isr+14
  2347  000D92  CFF8 F04C          	movff	tblptru,??_isr+15
  2348  000D96  CFF5 F04D          	movff	tablat,??_isr+16
  2349                           
  2350                           ;main.c: 196: if(PIR1bits.TMR2IF){
  2351  000D9A  A29E               	btfss	3998,1,c	;volatile
  2352  000D9C  D04C               	goto	i2l104
  2353                           
  2354                           ;main.c: 197: PIR1bits.TMR2IF = 0;
  2355  000D9E  929E               	bcf	3998,1,c	;volatile
  2356                           
  2357                           ;main.c: 199: setSegPin(0b00000000000000000);
  2358  000DA0  0E00               	movlw	0
  2359  000DA2  6E35               	movwf	setSegPin@input,c
  2360  000DA4  0E00               	movlw	0
  2361  000DA6  6E36               	movwf	setSegPin@input+1,c
  2362  000DA8  0E00               	movlw	0
  2363  000DAA  6E37               	movwf	setSegPin@input+2,c
  2364  000DAC  0E00               	movlw	0
  2365  000DAE  6E38               	movwf	setSegPin@input+3,c
  2366  000DB0  EC5F  F008         	call	_setSegPin	;wreg free
  2367                           
  2368                           ;main.c: 200: setDigitPin(1<<digitPtr);
  2369  000DB4  C0D4  F03D         	movff	_digitPtr,??_isr
  2370  000DB8  0E01               	movlw	1
  2371  000DBA  6E3E               	movwf	(??_isr+1)& (0+255),c
  2372  000DBC  0E00               	movlw	0
  2373  000DBE  6E3F               	movwf	(??_isr+2)& (0+255),c
  2374  000DC0  2A3D               	incf	??_isr,f,c
  2375  000DC2  D003               	goto	i2u240_44
  2376  000DC4                     i2u240_45:
  2377  000DC4  90D8               	bcf	status,0,c
  2378  000DC6  363E               	rlcf	??_isr+1,f,c
  2379  000DC8  363F               	rlcf	??_isr+2,f,c
  2380  000DCA                     i2u240_44:
  2381  000DCA  2E3D               	decfsz	??_isr,f,c
  2382  000DCC  D7FB               	goto	i2u240_45
  2383  000DCE  C03E  F035         	movff	??_isr+1,setDigitPin@input
  2384  000DD2  C03F  F036         	movff	??_isr+2,setDigitPin@input+1
  2385  000DD6  ECAD  F008         	call	_setDigitPin	;wreg free
  2386                           
  2387                           ;main.c: 201: setSegPin(segMap[digitPtr]);
  2388  000DDA  0ED6               	movlw	low _segMap
  2389  000DDC  6E3D               	movwf	??_isr& (0+255),c
  2390  000DDE  0E00               	movlw	high _segMap
  2391  000DE0  6E3E               	movwf	(??_isr+1)& (0+255),c
  2392  000DE2  90D8               	bcf	status,0,c
  2393  000DE4  0100               	movlb	0	; () banked
  2394  000DE6  35D4               	rlcf	_digitPtr& (0+255),w,b
  2395  000DE8  6ED9               	movwf	fsr2l,c
  2396  000DEA  0100               	movlb	0	; () banked
  2397  000DEC  35D5               	rlcf	(_digitPtr+1)& (0+255),w,b
  2398  000DEE  6EDA               	movwf	fsr2h,c
  2399  000DF0  90D8               	bcf	status,0,c
  2400  000DF2  36D9               	rlcf	fsr2l,f,c
  2401  000DF4  36DA               	rlcf	fsr2h,f,c
  2402  000DF6  503D               	movf	??_isr,w,c
  2403  000DF8  26D9               	addwf	fsr2l,f,c
  2404  000DFA  503E               	movf	??_isr+1,w,c
  2405  000DFC  22DA               	addwfc	fsr2h,f,c
  2406  000DFE  CFDE F035          	movff	postinc2,setSegPin@input
  2407  000E02  CFDE F036          	movff	postinc2,setSegPin@input+1
  2408  000E06  CFDE F037          	movff	postinc2,setSegPin@input+2
  2409  000E0A  CFDE F038          	movff	postinc2,setSegPin@input+3
  2410  000E0E  EC5F  F008         	call	_setSegPin	;wreg free
  2411                           
  2412                           ;main.c: 202: digitPtr = (digitPtr+1)%9;
  2413  000E12  0E01               	movlw	1
  2414  000E14  0100               	movlb	0	; () banked
  2415  000E16  25D4               	addwf	_digitPtr& (0+255),w,b
  2416  000E18  6E35               	movwf	___awmod@dividend,c
  2417  000E1A  0E00               	movlw	0
  2418  000E1C  0100               	movlb	0	; () banked
  2419  000E1E  21D5               	addwfc	(_digitPtr+1)& (0+255),w,b
  2420  000E20  6E36               	movwf	___awmod@dividend+1,c
  2421  000E22  0E00               	movlw	0
  2422  000E24  6E38               	movwf	___awmod@divisor+1,c
  2423  000E26  0E09               	movlw	9
  2424  000E28  6E37               	movwf	___awmod@divisor,c
  2425  000E2A  ECF4  F007         	call	___awmod	;wreg free
  2426  000E2E  C035  F0D4         	movff	?___awmod,_digitPtr
  2427  000E32  C036  F0D5         	movff	?___awmod+1,_digitPtr+1
  2428  000E36                     i2l104:
  2429  000E36  C04D  FFF5         	movff	??_isr+16,tablat
  2430  000E3A  C04C  FFF8         	movff	??_isr+15,tblptru
  2431  000E3E  C04B  FFF7         	movff	??_isr+14,tblptrh
  2432  000E42  C04A  FFF6         	movff	??_isr+13,tblptrl
  2433  000E46  C049  FFF4         	movff	??_isr+12,prodh
  2434  000E4A  C048  FFF3         	movff	??_isr+11,prodl
  2435  000E4E  C047  FFDA         	movff	??_isr+10,fsr2h
  2436  000E52  C046  FFD9         	movff	??_isr+9,fsr2l
  2437  000E56  C045  FFE2         	movff	??_isr+8,fsr1h
  2438  000E5A  C044  FFE1         	movff	??_isr+7,fsr1l
  2439  000E5E  C043  FFEA         	movff	??_isr+6,fsr0h
  2440  000E62  C042  FFE9         	movff	??_isr+5,fsr0l
  2441  000E66  C041  FFFB         	movff	??_isr+4,pclatu
  2442  000E6A  C040  FFFA         	movff	??_isr+3,pclath
  2443  000E6E  924E               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
  2444  000E70  0011               	retfie		f
  2445  000E72                     __end_of_isr:
  2446                           	opt stack 0
  2447                           pclatu	equ	0xFFB
  2448                           pclath	equ	0xFFA
  2449                           tblptru	equ	0xFF8
  2450                           tblptrh	equ	0xFF7
  2451                           tblptrl	equ	0xFF6
  2452                           tablat	equ	0xFF5
  2453                           prodh	equ	0xFF4
  2454                           prodl	equ	0xFF3
  2455                           intcon	equ	0xFF2
  2456                           postinc0	equ	0xFEE
  2457                           fsr0h	equ	0xFEA
  2458                           fsr0l	equ	0xFE9
  2459                           wreg	equ	0xFE8
  2460                           postdec1	equ	0xFE5
  2461                           fsr1h	equ	0xFE2
  2462                           fsr1l	equ	0xFE1
  2463                           indf2	equ	0xFDF
  2464                           postinc2	equ	0xFDE
  2465                           postdec2	equ	0xFDD
  2466                           fsr2h	equ	0xFDA
  2467                           fsr2l	equ	0xFD9
  2468                           status	equ	0xFD8
  2469                           
  2470 ;; *************** function _setSegPin *****************
  2471 ;; Defined at:
  2472 ;;		line 28 in file "main.c"
  2473 ;; Parameters:    Size  Location     Type
  2474 ;;  input           4    0[COMRAM] unsigned long 
  2475 ;; Auto vars:     Size  Location     Type
  2476 ;;		None
  2477 ;; Return value:  Size  Location     Type
  2478 ;;                  1    wreg      void 
  2479 ;; Registers used:
  2480 ;;		wreg, status,2, status,0
  2481 ;; Tracked objects:
  2482 ;;		On entry : 0/0
  2483 ;;		On exit  : 0/0
  2484 ;;		Unchanged: 0/0
  2485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2486 ;;      Params:         4       0       0       0       0       0       0       0       0
  2487 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2488 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2489 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2490 ;;Total ram usage:        8 bytes
  2491 ;; Hardware stack levels used:    1
  2492 ;; This function calls:
  2493 ;;		Nothing
  2494 ;; This function is called by:
  2495 ;;		_isr
  2496 ;; This function uses a non-reentrant model
  2497 ;;
  2498                           
  2499                           	psect	text8
  2500  0010BE                     __ptext8:
  2501                           	opt stack 0
  2502  0010BE                     _setSegPin:
  2503                           	opt stack 27
  2504                           
  2505                           ;main.c: 29: input = ~input;
  2506                           
  2507                           ;incstack = 0
  2508  0010BE  C035  F039         	movff	setSegPin@input,??_setSegPin
  2509  0010C2  C036  F03A         	movff	setSegPin@input+1,??_setSegPin+1
  2510  0010C6  C037  F03B         	movff	setSegPin@input+2,??_setSegPin+2
  2511  0010CA  C038  F03C         	movff	setSegPin@input+3,??_setSegPin+3
  2512  0010CE  1E39               	comf	??_setSegPin,f,c
  2513  0010D0  1E3A               	comf	??_setSegPin+1,f,c
  2514  0010D2  1E3B               	comf	??_setSegPin+2,f,c
  2515  0010D4  1E3C               	comf	??_setSegPin+3,f,c
  2516  0010D6  C039  F035         	movff	??_setSegPin,setSegPin@input
  2517  0010DA  C03A  F036         	movff	??_setSegPin+1,setSegPin@input+1
  2518  0010DE  C03B  F037         	movff	??_setSegPin+2,setSegPin@input+2
  2519  0010E2  C03C  F038         	movff	??_setSegPin+3,setSegPin@input+3
  2520                           
  2521                           ;main.c: 30: PORTC = (input & 0b10000000000000000) >> 16;
  2522  0010E6  5037               	movf	setSegPin@input+2,w,c
  2523  0010E8  0B01               	andlw	1
  2524  0010EA  6E82               	movwf	3970,c	;volatile
  2525                           
  2526                           ;main.c: 31: PORTD = (input & 0b01111111100000000) >> 8;
  2527  0010EC  C036  FF83         	movff	setSegPin@input+1,3971	;volatile
  2528                           
  2529                           ;main.c: 32: PORTB = input & 0b00000000011111111;
  2530  0010F0  C035  FF81         	movff	setSegPin@input,3969	;volatile
  2531  0010F4  0012               	return		;funcret
  2532  0010F6                     __end_of_setSegPin:
  2533                           	opt stack 0
  2534                           pclatu	equ	0xFFB
  2535                           pclath	equ	0xFFA
  2536                           tblptru	equ	0xFF8
  2537                           tblptrh	equ	0xFF7
  2538                           tblptrl	equ	0xFF6
  2539                           tablat	equ	0xFF5
  2540                           prodh	equ	0xFF4
  2541                           prodl	equ	0xFF3
  2542                           intcon	equ	0xFF2
  2543                           postinc0	equ	0xFEE
  2544                           fsr0h	equ	0xFEA
  2545                           fsr0l	equ	0xFE9
  2546                           wreg	equ	0xFE8
  2547                           postdec1	equ	0xFE5
  2548                           fsr1h	equ	0xFE2
  2549                           fsr1l	equ	0xFE1
  2550                           indf2	equ	0xFDF
  2551                           postinc2	equ	0xFDE
  2552                           postdec2	equ	0xFDD
  2553                           fsr2h	equ	0xFDA
  2554                           fsr2l	equ	0xFD9
  2555                           status	equ	0xFD8
  2556                           
  2557 ;; *************** function _setDigitPin *****************
  2558 ;; Defined at:
  2559 ;;		line 35 in file "main.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  input           2    0[COMRAM] unsigned int 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;		None
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg, status,2, status,0
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2573 ;;      Params:         2       0       0       0       0       0       0       0       0
  2574 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2575 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2576 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2577 ;;Total ram usage:        4 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		_isr
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           	psect	text9
  2587  00115A                     __ptext9:
  2588                           	opt stack 0
  2589  00115A                     _setDigitPin:
  2590                           	opt stack 27
  2591                           
  2592                           ;main.c: 36: PORTA = (input & 0b111111000) >> 3;
  2593                           
  2594                           ;incstack = 0
  2595  00115A  C035  F037         	movff	setDigitPin@input,??_setDigitPin
  2596  00115E  C036  F038         	movff	setDigitPin@input+1,??_setDigitPin+1
  2597  001162  90D8               	bcf	status,0,c
  2598  001164  3238               	rrcf	??_setDigitPin+1,f,c
  2599  001166  3237               	rrcf	??_setDigitPin,f,c
  2600  001168  90D8               	bcf	status,0,c
  2601  00116A  3238               	rrcf	??_setDigitPin+1,f,c
  2602  00116C  3237               	rrcf	??_setDigitPin,f,c
  2603  00116E  90D8               	bcf	status,0,c
  2604  001170  3238               	rrcf	??_setDigitPin+1,f,c
  2605  001172  3237               	rrcf	??_setDigitPin,f,c
  2606  001174  5037               	movf	??_setDigitPin,w,c
  2607  001176  0B3F               	andlw	63
  2608  001178  6E80               	movwf	3968,c	;volatile
  2609                           
  2610                           ;main.c: 37: PORTE = input & 0b000000111;
  2611  00117A  5035               	movf	setDigitPin@input,w,c
  2612  00117C  0B07               	andlw	7
  2613  00117E  6E84               	movwf	3972,c	;volatile
  2614  001180  0012               	return		;funcret
  2615  001182                     __end_of_setDigitPin:
  2616                           	opt stack 0
  2617                           pclatu	equ	0xFFB
  2618                           pclath	equ	0xFFA
  2619                           tblptru	equ	0xFF8
  2620                           tblptrh	equ	0xFF7
  2621                           tblptrl	equ	0xFF6
  2622                           tablat	equ	0xFF5
  2623                           prodh	equ	0xFF4
  2624                           prodl	equ	0xFF3
  2625                           intcon	equ	0xFF2
  2626                           postinc0	equ	0xFEE
  2627                           fsr0h	equ	0xFEA
  2628                           fsr0l	equ	0xFE9
  2629                           wreg	equ	0xFE8
  2630                           postdec1	equ	0xFE5
  2631                           fsr1h	equ	0xFE2
  2632                           fsr1l	equ	0xFE1
  2633                           indf2	equ	0xFDF
  2634                           postinc2	equ	0xFDE
  2635                           postdec2	equ	0xFDD
  2636                           fsr2h	equ	0xFDA
  2637                           fsr2l	equ	0xFD9
  2638                           status	equ	0xFD8
  2639                           
  2640 ;; *************** function ___awmod *****************
  2641 ;; Defined at:
  2642 ;;		line 8 in file "/opt/microchip/xc8/v1.38/sources/common/awmod.c"
  2643 ;; Parameters:    Size  Location     Type
  2644 ;;  dividend        2    0[COMRAM] int 
  2645 ;;  divisor         2    2[COMRAM] int 
  2646 ;; Auto vars:     Size  Location     Type
  2647 ;;  sign            1    5[COMRAM] unsigned char 
  2648 ;;  counter         1    4[COMRAM] unsigned char 
  2649 ;; Return value:  Size  Location     Type
  2650 ;;                  2    0[COMRAM] int 
  2651 ;; Registers used:
  2652 ;;		wreg, status,2, status,0
  2653 ;; Tracked objects:
  2654 ;;		On entry : 0/0
  2655 ;;		On exit  : 0/0
  2656 ;;		Unchanged: 0/0
  2657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2658 ;;      Params:         4       0       0       0       0       0       0       0       0
  2659 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2660 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2661 ;;      Totals:         6       0       0       0       0       0       0       0       0
  2662 ;;Total ram usage:        6 bytes
  2663 ;; Hardware stack levels used:    1
  2664 ;; This function calls:
  2665 ;;		Nothing
  2666 ;; This function is called by:
  2667 ;;		_isr
  2668 ;; This function uses a non-reentrant model
  2669 ;;
  2670                           
  2671                           	psect	text10
  2672  000FE8                     __ptext10:
  2673                           	opt stack 0
  2674  000FE8                     ___awmod:
  2675                           	opt stack 27
  2676                           
  2677                           ;incstack = 0
  2678  000FE8  0E00               	movlw	0
  2679  000FEA  6E3A               	movwf	___awmod@sign,c
  2680  000FEC  AE36               	btfss	___awmod@dividend+1,7,c
  2681  000FEE  D006               	goto	i2l3181
  2682  000FF0  6C35               	negf	___awmod@dividend,c
  2683  000FF2  1E36               	comf	___awmod@dividend+1,f,c
  2684  000FF4  B0D8               	btfsc	status,0,c
  2685  000FF6  2A36               	incf	___awmod@dividend+1,f,c
  2686  000FF8  0E01               	movlw	1
  2687  000FFA  6E3A               	movwf	___awmod@sign,c
  2688  000FFC                     i2l3181:
  2689  000FFC  AE38               	btfss	___awmod@divisor+1,7,c
  2690  000FFE  D004               	goto	i2l3185
  2691  001000  6C37               	negf	___awmod@divisor,c
  2692  001002  1E38               	comf	___awmod@divisor+1,f,c
  2693  001004  B0D8               	btfsc	status,0,c
  2694  001006  2A38               	incf	___awmod@divisor+1,f,c
  2695  001008                     i2l3185:
  2696  001008  5037               	movf	___awmod@divisor,w,c
  2697  00100A  1038               	iorwf	___awmod@divisor+1,w,c
  2698  00100C  B4D8               	btfsc	status,2,c
  2699  00100E  D018               	goto	i2l3201
  2700  001010  0E01               	movlw	1
  2701  001012  6E39               	movwf	___awmod@counter,c
  2702  001014  D004               	goto	i2l3191
  2703  001016                     i2l3189:
  2704  001016  90D8               	bcf	status,0,c
  2705  001018  3637               	rlcf	___awmod@divisor,f,c
  2706  00101A  3638               	rlcf	___awmod@divisor+1,f,c
  2707  00101C  2A39               	incf	___awmod@counter,f,c
  2708  00101E                     i2l3191:
  2709  00101E  AE38               	btfss	___awmod@divisor+1,7,c
  2710  001020  D7FA               	goto	i2l3189
  2711  001022                     i2l3193:
  2712  001022  5037               	movf	___awmod@divisor,w,c
  2713  001024  5C35               	subwf	___awmod@dividend,w,c
  2714  001026  5038               	movf	___awmod@divisor+1,w,c
  2715  001028  5836               	subwfb	___awmod@dividend+1,w,c
  2716  00102A  A0D8               	btfss	status,0,c
  2717  00102C  D004               	goto	i2l3197
  2718  00102E  5037               	movf	___awmod@divisor,w,c
  2719  001030  5E35               	subwf	___awmod@dividend,f,c
  2720  001032  5038               	movf	___awmod@divisor+1,w,c
  2721  001034  5A36               	subwfb	___awmod@dividend+1,f,c
  2722  001036                     i2l3197:
  2723  001036  90D8               	bcf	status,0,c
  2724  001038  3238               	rrcf	___awmod@divisor+1,f,c
  2725  00103A  3237               	rrcf	___awmod@divisor,f,c
  2726  00103C  2E39               	decfsz	___awmod@counter,f,c
  2727  00103E  D7F1               	goto	i2l3193
  2728  001040                     i2l3201:
  2729  001040  503A               	movf	___awmod@sign,w,c
  2730  001042  B4D8               	btfsc	status,2,c
  2731  001044  D004               	goto	i2l3205
  2732  001046  6C35               	negf	___awmod@dividend,c
  2733  001048  1E36               	comf	___awmod@dividend+1,f,c
  2734  00104A  B0D8               	btfsc	status,0,c
  2735  00104C  2A36               	incf	___awmod@dividend+1,f,c
  2736  00104E                     i2l3205:
  2737  00104E  C035  F035         	movff	___awmod@dividend,?___awmod
  2738  001052  C036  F036         	movff	___awmod@dividend+1,?___awmod+1
  2739  001056  0012               	return	
  2740  001058                     __end_of___awmod:
  2741                           	opt stack 0
  2742                           pclatu	equ	0xFFB
  2743                           pclath	equ	0xFFA
  2744                           tblptru	equ	0xFF8
  2745                           tblptrh	equ	0xFF7
  2746                           tblptrl	equ	0xFF6
  2747                           tablat	equ	0xFF5
  2748                           prodh	equ	0xFF4
  2749                           prodl	equ	0xFF3
  2750                           intcon	equ	0xFF2
  2751                           postinc0	equ	0xFEE
  2752                           fsr0h	equ	0xFEA
  2753                           fsr0l	equ	0xFE9
  2754                           wreg	equ	0xFE8
  2755                           postdec1	equ	0xFE5
  2756                           fsr1h	equ	0xFE2
  2757                           fsr1l	equ	0xFE1
  2758                           indf2	equ	0xFDF
  2759                           postinc2	equ	0xFDE
  2760                           postdec2	equ	0xFDD
  2761                           fsr2h	equ	0xFDA
  2762                           fsr2l	equ	0xFD9
  2763                           status	equ	0xFD8
  2764                           pclatu	equ	0xFFB
  2765                           pclath	equ	0xFFA
  2766                           tblptru	equ	0xFF8
  2767                           tblptrh	equ	0xFF7
  2768                           tblptrl	equ	0xFF6
  2769                           tablat	equ	0xFF5
  2770                           prodh	equ	0xFF4
  2771                           prodl	equ	0xFF3
  2772                           intcon	equ	0xFF2
  2773                           postinc0	equ	0xFEE
  2774                           fsr0h	equ	0xFEA
  2775                           fsr0l	equ	0xFE9
  2776                           wreg	equ	0xFE8
  2777                           postdec1	equ	0xFE5
  2778                           fsr1h	equ	0xFE2
  2779                           fsr1l	equ	0xFE1
  2780                           indf2	equ	0xFDF
  2781                           postinc2	equ	0xFDE
  2782                           postdec2	equ	0xFDD
  2783                           fsr2h	equ	0xFDA
  2784                           fsr2l	equ	0xFD9
  2785                           status	equ	0xFD8
  2786                           
  2787                           	psect	rparam
  2788  0000                     pclatu	equ	0xFFB
  2789                           pclath	equ	0xFFA
  2790                           tblptru	equ	0xFF8
  2791                           tblptrh	equ	0xFF7
  2792                           tblptrl	equ	0xFF6
  2793                           tablat	equ	0xFF5
  2794                           prodh	equ	0xFF4
  2795                           prodl	equ	0xFF3
  2796                           intcon	equ	0xFF2
  2797                           postinc0	equ	0xFEE
  2798                           fsr0h	equ	0xFEA
  2799                           fsr0l	equ	0xFE9
  2800                           wreg	equ	0xFE8
  2801                           postdec1	equ	0xFE5
  2802                           fsr1h	equ	0xFE2
  2803                           fsr1l	equ	0xFE1
  2804                           indf2	equ	0xFDF
  2805                           postinc2	equ	0xFDE
  2806                           postdec2	equ	0xFDD
  2807                           fsr2h	equ	0xFDA
  2808                           fsr2l	equ	0xFD9
  2809                           status	equ	0xFD8
  2810                           
  2811                           	psect	temp
  2812  00004E                     btemp:
  2813                           	opt stack 0
  2814  00004E                     	ds	1
  2815  0000                     int$flags	set	btemp
  2816                           pclatu	equ	0xFFB
  2817                           pclath	equ	0xFFA
  2818                           tblptru	equ	0xFF8
  2819                           tblptrh	equ	0xFF7
  2820                           tblptrl	equ	0xFF6
  2821                           tablat	equ	0xFF5
  2822                           prodh	equ	0xFF4
  2823                           prodl	equ	0xFF3
  2824                           intcon	equ	0xFF2
  2825                           postinc0	equ	0xFEE
  2826                           fsr0h	equ	0xFEA
  2827                           fsr0l	equ	0xFE9
  2828                           wreg	equ	0xFE8
  2829                           postdec1	equ	0xFE5
  2830                           fsr1h	equ	0xFE2
  2831                           fsr1l	equ	0xFE1
  2832                           indf2	equ	0xFDF
  2833                           postinc2	equ	0xFDE
  2834                           postdec2	equ	0xFDD
  2835                           fsr2h	equ	0xFDA
  2836                           fsr2l	equ	0xFD9
  2837                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    201
    Data        292
    BSS         234
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     25      77
    BANK0           160      6     160
    BANK1           256      0     256
    BANK2           256     11      75
    BANK3           256      0       0
    BANK4           192      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 

    CDCDataInHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    CDCDataOutHandle	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pCDCDst.wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCDst.bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCDst.wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S1716_POINTER$wRom	PTR const unsigned int  size(2) Largest target is 0

    pCDCSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S1716_POINTER$bRom	PTR const unsigned char  size(2) Largest target is 0

    pCDCSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S1716_POINTER$wRam	PTR unsigned int  size(2) Largest target is 0

    pCDCSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S1716_POINTER$bRam	PTR unsigned char  size(2) Largest target is 0

    pCDCSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 8
		 -> SetupPkt(BIGRAMh[8]), 

    USB_SD_Ptr	const PTR const unsigned char [3] size(2) Largest target is 52
		 -> sd002(CODE[52]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 67
		 -> configDescriptor1(CODE[67]), 

    pDst	PTR volatile unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMh[8]), NULL(NULL[0]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 2047
		 -> RAM(DATA[2047]), NULL(NULL[0]), BDT(BIGRAMl[48]), 

    S321$pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 1
		 -> USART_mySetLineCodingHandler(), 

    S311$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S311$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S287$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S287$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S287$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S287$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK0[2]), BDT(BIGRAMl[48]), UEP1(SFR[1]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_setSegPin

Critical Paths under _main in BANK0

    _USBDeviceInit->_memset

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_USBDeviceInit
    _USBDeviceInit->_memset

Critical Paths under _isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _isr in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _isr in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 8     8      0    2292
                                              3 BANK2      8     8      0
                  _SYSTEM_Initialize
                    _USART_getcUSART
                    _USART_putcUSART
                    _USBDeviceAttach
                      _USBDeviceInit
 ---------------------------------------------------------------------------------
 (1) _USBDeviceInit                                        1     1      0    1676
                                              2 BANK2      1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _memset                                               8     2      6    1385
                                              0 BANK0      6     0      6
                                              0 BANK2      2     2      0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceAttach                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USART_putcUSART                                      1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _USART_getcUSART                                      1     1      0      37
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    5     5      0      99
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                 17    17      0     874
                                              8 COMRAM    17    17      0
                            ___awmod
                        _setDigitPin
                          _setSegPin
 ---------------------------------------------------------------------------------
 (4) _setSegPin                                            8     4      4     267
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (4) _setDigitPin                                          4     2      2     133
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              6     2      4     474
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SYSTEM_Initialize
   _USART_getcUSART
   _USART_putcUSART
   _USBDeviceAttach
   _USBDeviceInit
     _memset

 _isr (ROOT)
   ___awmod
   _setDigitPin
   _setSegPin

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMl            3FF      0       0      22        0.0%
BIGRAMh            3C0      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      B      4B       9       29.3%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK4            C0      0       0      12        0.0%
BANK4               C0      0       0      13        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      6      A0       5      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     19      4D       1       81.9%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     238      16        0.0%
DATA                 0      0     238       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Wed Aug  3 17:05:37 2016

                               _USB_SD_Ptr 0801                                         l82 0A2C  
                                       l78 09F0                              _USBDeviceInit 0C0A  
                                      l304 1150                                        l305 114E  
                                      l244 0C78                                        l707 11B4  
                                      _BDT 000400                                        _PR2 000FCB  
                                      _UIE 000F69                                        _UIR 000F68  
                                      _isr 0008                               ___awmod@sign 003A  
                                      prod 000FF3                                        wreg 000FE8  
                             __CFG_FOSC$HS 000000                             _USBDeviceState 0027  
                             __CFG_LVP$OFF 000000                                       l4031 11B8  
                                     l4121 0A38                                       l4131 0B0A  
                                     l4123 0A62                                       l4133 0B34  
                                     l4125 0A8C                                       l4109 09CE  
                                     l4135 0B5E                                       l4127 0AB6  
                                     l4143 0BBC                                       l4137 0B88  
                                     l4129 0AE0                                       l4139 0BAC  
                                     l3921 1100                                       l3931 1068  
                                     l3933 1080                                       l3925 1112  
                                     l3935 108E                                       l3929 105E  
                                     l3939 10A6                                       l3971 0C82  
                                     l3955 0C4E                                       l3983 0CB2  
                                     l3959 0C58                                       l3993 0D22  
                                     l3987 0CBC                                       ?_isr 0035  
                                     _BRGH 007D62                                       _UCFG 000F6F  
                                     _UEP0 000F70                                       _UEP1 000F71  
                                     _UEIE 000F6B                                       _UEIR 000F6A  
                                     _UCON 000F6D                                       _TMR2 000FCC  
                         setDigitPin@input 0035                            _CDCDataInHandle 0074  
                                     _pDst 0076                                       _main 08CC  
                                     fsr0h 000FEA                                       fsr1h 000FE2  
                                     fsr0l 000FE9                                       fsr2h 000FDA  
                              _BaudRateGen 0066                                       fsr1l 000FE1  
                                     indf2 000FDF                                       fsr2l 000FD9  
                          _USBDeviceAttach 112A                                       btemp 004E  
                                     pclat 000FFA                                       prodh 000FF4  
                                     prodl 000FF3                                       start 0016  
                          _USART_putcUSART 11BE                              __CFG_MCLRE$ON 000000  
                             ___param_bank 000010                                      ??_isr 003D  
                           ?_USBDeviceInit 0035                                      ?_main 0035  
                          __end_of___awmod 1058                                      _CMCON 000FB4  
                                    _T2CON 000FCA                                      i2l104 0E36  
                                    _UADDR 000F6E                                      _RCREG 000FAE  
                                    _RCSTA 000FAB                                      _SPBRG 000FAF  
                                    _PORTA 000F80                                      _PORTB 000F81  
                                    _PORTC 000F82                                      _PORTD 000F83  
                                    _PORTE 000F84                                      _TRISA 000F92  
                                    _TRISB 000F93                                      _TRISC 000F94  
                                    _TRISD 000F95                                      _TRISE 000F96  
                                    _USTAT 000F6C                                      _TXREG 000FAD  
                                    _TXSTA 000FAC                                      _sd000 08C6  
                                    _sd001 084C                                      _sd002 0880  
                  __end_of_USART_getcUSART 11BE                                      tablat 000FF5  
                                    status 000FD8                           USART_getcUSART@c 00FA  
                          __initialization 0F72                               __end_of_main 0C0A  
                             ?_setDigitPin 0035                      _control_signal_bitmap 0078  
                                   ??_main 0243                              __activetblptr 000002  
                             _cdc_mem_type 002C                    __end_of_USBDeviceAttach 115A  
                                   _ADCON1 000FC1                           _CDCDataOutHandle 001B  
                   SYSTEM_Initialize@state 00FA                                     i2l3201 1040  
                                   i2l3205 104E                                     i2l3181 0FFC  
                                   i2l3191 101E                                     i2l3193 1022  
                                   i2l3185 1008                                     i2l3197 1036  
                                   i2l3189 1016                    __end_of_USART_putcUSART 11C8  
                                   _OSCCON 000FD3                                     _SPBRGH 000FB0  
                        _shortPacketStatus 0032                            ??_USBDeviceInit 0100  
                                ??___awmod 0039  SYSTEM_Initialize@pll_startup_counter_2128 00FD  
                                   _segMap 00D6                                     _memset 10F6  
                                   clear_0 0FBC                                     clear_1 0FC8  
                                   clear_2 0FD4                            ___awmod@divisor 0037  
                          ___awmod@counter 0039                               __mediumconst 0000  
                                   tblptrh 000FF7                                     tblptrl 000FF6  
                                   tblptru 000FF8                                _CtrlTrfData 000438  
                         ?_USART_getcUSART 0035                       _controlTransferState 0030  
                        _SYSTEM_Initialize 1058                                 __accesstop 0060  
                  __end_of__initialization 0FDA                         ?_SYSTEM_Initialize 0035  
                            ___rparam_used 000001                             __pcstackCOMRAM 0035  
                            __end_of_sd000 08CA                              __end_of_sd001 0880  
                            __end_of_sd002 08B4                               __pidataBANK0 1182  
                             __pidataBANK1 0E72                        ??_SYSTEM_Initialize 00FA  
                               _cdc_notice 00B9                                 _cdc_rx_len 002D  
                               _cdc_tx_len 002F                    _USBTicksSinceSuspendEnd 002B  
                         ?_USBDeviceAttach 0035                  __end_of_SYSTEM_Initialize 10BE  
                               __pbssBANK0 0060                                 __pbssBANK2 0200  
                         ?_USART_putcUSART 0035                                _pBDTEntryIn 000F  
                       __size_of_setSegPin 0038                                    _BAUDCON 000FB8  
                                  ?_memset 00FA                                 _device_dsc 08B4  
                     __size_of_setDigitPin 0028                                 _ep_data_in 0015  
                        _configDescriptor1 0809                                    _UIEbits 000F69  
                                  _UIRbits 000F68                              _cdc_trf_state 002E  
                                  _pCDCDst 006E                                    _pCDCSrc 0071  
                                  __Hparam 0000                                    __Lparam 0000  
                                  ___awmod 0FE8                               __psmallconst 0800  
                                  __pcinit 0F72                            __size_of_memset 0034  
                __end_of_configDescriptor1 084C                                    __ramtop 0800  
                         USART_putcUSART@c 00FA                                    __ptext0 08CC  
                                  __ptext1 0C0A                                    __ptext2 10F6  
                                  __ptext3 112A                                    __ptext4 11BE  
                                  __ptext5 11A6                                    __ptext6 1058  
                                  __ptext8 10BE                                    __ptext9 115A  
                                  _inPipes 0009                _USBDeferOUTDataStagePackets 0025  
                             __size_of_isr 0E6A                           ___awmod@dividend 0035  
                       __end_of_USB_CD_Ptr 0809                          main@digitSelector 0247  
               __size_of_SYSTEM_Initialize 0066                             __pintcode_body 0D68  
                     end_of_initialization 0FDA                          __end_of_setSegPin 10F6  
                       __end_of_USB_SD_Ptr 0807                        _pBDTEntryEP0OutNext 001F  
                                  memset@c 00FC                                    memset@n 00FE  
                                  memset@p 0240                              __Lmediumconst 0000  
                                  int_func 0D68                            _USB1msTickCount 006A  
          _dummy_encapsulated_cmd_response 00C3                                  _RCSTAbits 000FAB  
                                  postdec1 000FE5                                    postdec2 000FDD  
                                  postinc0 000FEE                                    postinc2 000FDE  
               _USBStatusStageEnabledFlag1 0028                 _USBStatusStageEnabledFlag2 0029  
                                _TRISCbits 000F94                         _BothEP0OutUOWNsSet 0021  
                               main@RxData 024A                                  _USTATcopy 0034  
                    __end_of_USBDeviceInit 0D68                             __end_of_memset 112A  
                        _USBBusIsSuspended 0023                        start_initialization 0F72  
                              __end_of_isr 0E72                                _cdc_data_rx 0079  
                              _cdc_data_tx 0200               _USART_mySetLineCodingHandler 000000  
                           USBDeviceInit@i 0242                   __size_of_USART_getcUSART 0018  
                   _pBDTEntryEP0OutCurrent 001D                                __pdataBANK0 00D6  
                              __pdataBANK1 0100                                   ??_memset 0100  
                   _USBActiveConfiguration 0033                                __pbssCOMRAM 0001  
                            __pcstackBANK0 00FA                              __pcstackBANK2 0240  
                             _pBDTEntryOut 0060                   __size_of_USBDeviceAttach 0030  
                 __size_of_USART_putcUSART 000A                                  __pintcode 0008  
                            ??_setDigitPin 0037                                   ?___awmod 0035  
                              __smallconst 0800                                _ep_data_out 0018  
                                _setSegPin 10BE                                   _IPR2bits 000FA2  
                                 _PIE1bits 000F9D                                   _PIE2bits 000FA0  
                                 i2u240_44 0DCA                                   i2u240_45 0DC4  
                                 _PIR1bits 000F9E                                   _PIR2bits 000FA1  
                                 _RCONbits 000FD0                                   _UEP0bits 000F70  
               _USBDeferINDataStagePackets 0024                                   _UCONbits 000F6D  
                        ??_USART_getcUSART 00FA                        __end_of_setDigitPin 1182  
                             _RemoteWakeup 0022                                  copy_data0 0F86  
                                copy_data1 0FAA                         __end_of_device_dsc 08C6  
                               ?_setSegPin 0035                                   __Hrparam 0000  
                                 __Lrparam 0000                                   _SetupPkt 000430  
                        ??_USBDeviceAttach 00FA                           __size_of___awmod 0070  
                        ??_USART_putcUSART 00FA                                _line_coding 00CB  
                                 _digitPtr 00D4                                   __ptext10 0FE8  
                           setSegPin@input 0035                                   _fontList 0100  
                            __size_of_main 033E                                   _outPipes 0001  
                              _setDigitPin 115A                                   int$flags 004E  
                                 main@buff 0249                  _USBDeferStatusStagePacket 0026  
                               _INTCONbits 000FF2                                   memset@p1 00FA  
                                 intlevel2 0000                     __size_of_USBDeviceInit 015E  
     SYSTEM_Initialize@pll_startup_counter 00FB                                ??_setSegPin 0039  
                    _USBAlternateInterface 00D2                            _endpoint_number 0031  
             _USBStatusStageTimeoutCounter 002A                            _USART_getcUSART 11A6  
                               _USB_CD_Ptr 0807  
